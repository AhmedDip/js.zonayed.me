{"componentChunkName":"component---src-templates-post-page-js","path":"/basic/292","webpackCompilationHash":"81761d2f324522b163a2","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":292,"date":"2018-05-28T13:50:32","date_gmt":"2018-05-28T13:50:32","guid":{"rendered":"https://with.zonayed.me/?p=292"},"modified":"2018-08-22T13:07:00","modified_gmt":"2018-08-22T13:07:00","slug":"%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f%e0%a6%83-%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8b%e0%a6%aascope-%e0%a6%a8%e0%a6%bf","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%95%e0%a6%ae%e0%a7%8d%e0%a6%aa%e0%a6%bf%e0%a6%89%e0%a6%9f%e0%a6%be%e0%a6%b0-%e0%a6%b8%e0%a6%be%e0%a6%87%e0%a6%a8%e0%a7%8d%e0%a6%b8/%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f%e0%a6%83-%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8b%e0%a6%aascope-%e0%a6%a8%e0%a6%bf/","title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-divider\">স্কোপিং(Scoping) জাভাস্ক্রিপ্ট এ আরেকটা গুরুত্বপূর্ন বিষয়। আপনাকে জানতে হবে আপনার ডিক্লেয়ারকৃত ভ্যারিয়েবল/ফাংশন আপনি কোথায় কোথায় অ্যাক্সেস করতে পারবেন বা কোথায় কোথায় ইউজ করতে পারবেন। কোনো ভ্যারিয়েবল বা ফাংশন প্রাইভেট করতে চাইলে বা কোনো ভ্যারিয়েবলকে সব জায়গা থেকে অ্যাক্সেস করতে চাইলে কিভাবে বা কোথায় সেটাকে ডিক্লেয়ার করতে হবে এসবকিছুই স্কোপিং এর ভিতরে আলোচনা করবো।</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">জাভাস্ক্রিপ্ট এ প্রধানত দুই ধরনের স্কোপিং হয়ে থাকেঃ</p>\n<p class=\"graf graf--p\">১। লোকাল(Local) স্কোপ</p>\n<p class=\"graf graf--p\">২। গ্লোবাল(Global) স্কোপ</p>\n<p class=\"graf graf--p\">স্কোপিং এ প্রধান আলোচ্য বিষয়গুলো হচ্ছেঃ</p>\n<ul class=\"postList\">\n<li class=\"graf graf--li\">কোথায় কোথায় আপনি আপনার ভ্যারিয়েবল বা ফাংশনকে অ্যাক্সেস করতে পারবেন</li>\n<li class=\"graf graf--li\">প্রত্যেকটা নতুন ফাংশন একটা স্কোপ তৈরী করে</li>\n<li class=\"graf graf--li\">লেক্সিকাল স্কোপিং(Lexical Scoping) এ প্যারেন্ট-চাইল্ড রিলেশন</li>\n<li class=\"graf graf--li\">একটা ফাংশনে ডিক্লেয়ারকৃত ভ্যারিয়েবল আরেকটা ফাংশনে যেতে পারবে না, মানে অ্যাক্সেস করতে পারবেন না।</li>\n</ul>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">১। লোকাল(Local) স্কোপঃ</strong> সাধারণত ফাংশনের ভিতরে ডিক্লেয়ারকৃত ভ্যারিয়েবলগুলো ঐ ফাংশনের লোকাল ভ্যারিয়েবল। এধরনের ভ্যারিয়েবলগুলোর স্কোপ হচ্ছে লোকাল স্কোপ, অর্থাৎ এই ভ্যারিয়েবলটা শুধুমাত্র ডিক্লেয়ারকৃত ফাংশনের ভিতরেই অ্যাক্সেস করা যাবে। এর বাইরে বা অন্যকোনো ফাংশনে অ্যাক্সেস করা যাবে না।</p>\n<pre class=\"graf graf--pre\">function localScope() {\r\n   var local = 'I am local to my own function';\r\n   console.log(local);\r\n}</pre>\n<p class=\"graf graf--p\">এটা কল করলে ঠিকঠাক আউটপুট দেখাবেঃ</p>\n<pre class=\"graf graf--pre\">localScope();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*9E7wEZGWnsAV0jP2GbKm_Q.png?resize=350%2C154&#038;ssl=1\" data-image-id=\"1*9E7wEZGWnsAV0jP2GbKm_Q.png\" data-width=\"350\" data-height=\"154\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কিন্তু এখন যদি আমরা এই <code class=\"markup--code markup--p-code\">local</code> ভ্যারিয়েবলটাকে এই <code class=\"markup--code markup--p-code\">localScope()</code> এর বাইরে কোথাও বা অন্য কোনো ফাংশনেও অ্যাক্সেস করতে চাই, তাহলে সেটা অ্যাক্সেস করা যাবে না এবং এক্ষেত্রে রিয়েল এরর পাবেন।</p>\n<pre class=\"graf graf--pre\">function localScope() {\r\n   var local = 'I am local to my own function';\r\n   console.log(local);\r\n}</pre>\n<pre class=\"graf graf--pre\">localScope();</pre>\n<pre class=\"graf graf--pre\">console.log(local);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*Nn_7CJ3Ho0p7WjECvt_Cgg.png?resize=434%2C161&#038;ssl=1\" data-image-id=\"1*Nn_7CJ3Ho0p7WjECvt_Cgg.png\" data-width=\"434\" data-height=\"161\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">২। গ্লোবাল(Global) স্কোপঃ </strong>ভ্যারিয়েবল যদি কোনো ফাংশনের ভিতরে ডিক্লেয়ার না করা হয় তাহলে সেটা গ্লোবাল স্কোপে ডিক্লেয়ারকৃত ভ্যারিয়েবল, মানে ফাংশনের বাইরে যেকোনো জায়গায় ডিক্লেয়ার করা ভ্যারিয়েবলই গ্লোবাল স্কোপ পাবে। এদেরকে গ্লোবাল ভ্যারিয়েবলও বলা হয়। গ্লোবাল ভ্যারিয়েবল যেকোনো ফাংশনের ভিতরে বা যেকোনো জায়গা থেকেই অ্যাক্সেস করতে পারবেন</p>\n<pre class=\"graf graf--pre\">var globalVar = 'I am a Global Variable';</pre>\n<pre class=\"graf graf--pre\">function globalScope() {\r\n   console.log('Inside a Function: ' + globalVar);\r\n}</pre>\n<pre class=\"graf graf--pre\">globalScope();</pre>\n<pre class=\"graf graf--pre\">console.log('Outside: ' + globalVar);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*94OfU9C4CuyQ9q7V6u7VNQ.png?resize=357%2C164&#038;ssl=1\" data-image-id=\"1*94OfU9C4CuyQ9q7V6u7VNQ.png\" data-width=\"357\" data-height=\"164\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন স্কোপিং এর এই আইডিয়া যেমন ভ্যারিয়েবলের ক্ষেত্রে প্রযোজ্য, তেমনি ফাংশন এবং অবজেক্ট এর ক্ষেত্রেও প্রযোজ্য।</p>\n<p class=\"graf graf--p\">এর মানে আপনি গ্লোবাল স্কোপে কোনো ফাংশন ডিক্লেয়ার করলে সেটা গ্লোবালি যেকোনো জায়গা থেকেই অ্যাক্সেস করতে পারবেন। উপরে উল্লেখিত সবগুলো উদাহরণে ব্যবহৃত ফাংশনগুলো গ্লোবাল স্কোপে ডিক্লেয়ার করা।</p>\n<pre class=\"graf graf--pre\">function globalFunc() {\r\n   console.log('Global Function');\r\n}</pre>\n<p class=\"graf graf--p\">এখন এই ফাংশনকে কল করলে ঠিকঠাকভাবে কাজ করবেঃ</p>\n<pre class=\"graf graf--pre\">globalFunc();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*ctlZs7SH-MJj09Y5MfXRag.png?resize=283%2C129&#038;ssl=1\" data-image-id=\"1*ctlZs7SH-MJj09Y5MfXRag.png\" data-width=\"283\" data-height=\"129\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">সেইমভাবে আপনি যদি কোনো ফাংশনের ভিতরে আরেকটা ফাংশন ডিক্লেয়ার করেন তাহলে ফাংশনের ভিতরে ডিক্লেয়ারকৃত ফাংশনটা উক্ত ফাংশনের লোকাল স্কোপ পাবে। এবং এই ফাংশন শুধুমাত্র ঐ ফাংশনের ভিতরেই কল করতে পারবেন। বাইরে এর স্কোপ না থাকায় কল করতে পারবেন না।</p>\n<pre class=\"graf graf--pre\">function anoGlobalFunc() {\r\n   console.log('Global Function');\r\n   function localFunc() {\r\n      console.log('Local Function');\r\n   }\r\n   localFunc();\r\n}</pre>\n<p class=\"graf graf--p\">লক্ষ্য করুন আমি লোকাল ফাংশন <code class=\"markup--code markup--p-code\">localFunc()</code> ঐ ফাংশনের ভিতরেই কল করেছি, কারণ এখানেই এটার স্কোপ আছে। এখন গ্লোবাল ফাংশন <code class=\"markup--code markup--p-code\">anoGlobalFunc()</code> কল করলে দুইটাই এক্সিকিউট হবে।</p>\n<pre class=\"graf graf--pre\">anoGlobalFunc();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*ClOMruz-YwhPW43icbxVug.png?resize=270%2C193&#038;ssl=1\" data-image-id=\"1*ClOMruz-YwhPW43icbxVug.png\" data-width=\"270\" data-height=\"193\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কিন্তু এখন যদি এই লোকাল ফাংশন <code class=\"markup--code markup--p-code\">localFunc()</code> আমি <code class=\"markup--code markup--p-code\">anoGlobalFunc()</code> এর বাইরে কল করি তাহলে সেটা এরর দেখাবেঃ</p>\n<pre class=\"graf graf--pre\"><code class=\"markup--code markup--pre-code\">localFunc();</code></pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*LZfPG5NxRFd2XuT4qEFsgQ.png?resize=329%2C84&#038;ssl=1\" data-image-id=\"1*LZfPG5NxRFd2XuT4qEFsgQ.png\" data-width=\"329\" data-height=\"84\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">সেইম অবজেক্ট এর ক্ষেত্রেও। কোনো ফাংশনের ভিতরে ডিক্লেয়ার করা হলে সেটা ঐ ফাংশনের লোকাল স্কোপ পাবে। উক্ত ফাংশনের ভিতরে ছাড়া আর কোথাও অ্যাক্সেস করা যাবে না। আর বাইরে গ্লোবাল স্কোপে ডিক্লেয়ার করা হলে সেটা গ্লোবাল স্কোপ পাবে এবং সব জায়গা থেকে অ্যাক্সেস করা যাবে।</p>\n<pre class=\"graf graf--pre\">var person = {\r\n   name: 'Zonayed Ahmed',\r\n   age: 21\r\n}</pre>\n<p class=\"graf graf--p\">এখন এই অবজেক্ট সব জায়গা থেকেই অ্যাক্সেস করা যাবেঃ</p>\n<pre class=\"graf graf--pre\">console.log(person);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*HC17ran9QpM3s0PtiAC2rg.png?resize=287%2C161&#038;ssl=1\" data-image-id=\"1*HC17ran9QpM3s0PtiAC2rg.png\" data-width=\"287\" data-height=\"161\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কিন্তু যদি এই অবজেক্ট কোনো ফাংশনের ভিতরে ডিক্লেয়ার করা হয়, তাহলে সেই অবজেক্ট সেই ফাংশনের লোকাল স্কোপ পাবে এবং শুধুমাত্র সেই ফাংশনের ভিতর থেকেই অ্যাক্সেস করা যাবে।</p>\n<pre class=\"graf graf--pre\">function objectFunc() {\r\n   var localObj = {\r\n      name: 'Zonayed Ahmed',\r\n      age: 21\r\n   }\r\n   console.log(localObj);\r\n}</pre>\n<p class=\"graf graf--p\">এখন এই ফাংশন কল করলে সবকিছু ঠিকঠাক দেখাবেঃ</p>\n<pre class=\"graf graf--pre\">objectFunc();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*KFRTSkcu3xTkF3Nla1S4PQ.png?resize=283%2C212&#038;ssl=1\" data-image-id=\"1*KFRTSkcu3xTkF3Nla1S4PQ.png\" data-width=\"283\" data-height=\"212\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কিন্তু এখন যদি এই অবজেক্ট উক্ত ফাংশনের বাইরে অ্যাক্সেস করতে চাই তাহলে এরর আসবে। কারণ এটা লোকাল স্কোপে ডিক্লেয়ারকৃতঃ</p>\n<pre class=\"graf graf--pre\">console.log(localObj);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*WN2XZyhIhfx3BnGJDwm5qg.png?resize=322%2C93&#038;ssl=1\" data-image-id=\"1*WN2XZyhIhfx3BnGJDwm5qg.png\" data-width=\"322\" data-height=\"93\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">লেক্সিকাল স্কোপিং(Lexical Scoping): </strong>লেক্সিকাল স্কোপিং এ একটা প্যারেন্ট ফাংশনের সাথে একটা চাইল্ড ফাংশনের রিলেশন তৈরী হয়। এখন প্যারেন্ট-চাইল্ড ফাংশন মানে কি? হ্যাঁ যদি আমরা একটা ফাংশনের ভিতরে আরেকটা ফাংশন ডিক্লেয়ার করি, তাহলে যে ফাংশনের ভিতরে নতুন ফাংশন ডিক্লেয়ার করলাম সেটা প্যারেন্ট ফাংশন। আর প্যারেন্ট ফাংশনের ভিতরে ডিক্লেয়ারকৃত অন্য যেকোনো ফাংশনই সেই প্যারেন্ট ফাংশনের চাইল্ড ফাংশন। নিচের উদাহরণ থেকে আশা করি ক্লিয়ার ধারণা হবেঃ</p>\n<pre class=\"graf graf--pre\">function parentFunction() {\r\n   //some codes here\r\n   function childFunction() {\r\n      //some more codes\r\n   } \r\n}</pre>\n<p class=\"graf graf--p\">এখন এখানে <code class=\"markup--code markup--p-code\">parentFunction()</code> গ্লোবাল ফাংশন আর <code class=\"markup--code markup--p-code\">childFunction()</code> <code class=\"markup--code markup--p-code\">parentFunction()</code> এর লোকাল ফাংশন। এখন আমরা জানি কোনো ফাংশনের ভিতরে ডিক্লেয়ারকৃত ভ্যারিয়েবল, ফাংশন বা অবজেক্ট লোকাল স্কোপ পায় এবং এদেরকে শুধুমাত্র উক্ত ফাংশনের ভিতরেই অ্যাক্সেস করা যায়। কিন্তু লেক্সিকাল স্কোপিং এর কারণে এখানে <code class=\"markup--code markup--p-code\">parentFunction()</code> এর ভিতরে ডিক্লেয়ারকৃত লোকাল যেকোনো কিছু <code class=\"markup--code markup--p-code\">parentFunction()</code> এর ভিতর থেকে তো অ্যাক্সেস করা যাবেই এবং সেই সাথে এর সব চাইল্ড ফাংশন এর ভিতর থেকেও, এখানে <code class=\"markup--code markup--p-code\">childFunction()</code> এর ভিতর থেকেও অ্যাক্সেস করা যাবে।</p>\n<pre class=\"graf graf--pre\">function parentFunction() {\r\n   var a = 6;\r\n   function childFunction() {\r\n      var b = 4;\r\n      console.log('Sum: ' + (a + b));\r\n   } \r\n   childFunction();\r\n}</pre>\n<p class=\"graf graf--p\">এখন <code class=\"markup--code markup--p-code\">parentFunction()</code> কে কল করলে এটা ঠিক যেরকমভাবে ফলাফল দেখানোর কথা সেরকমভাবেই দেখাবেঃ</p>\n<pre class=\"graf graf--pre\">parentFunction();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*rJpWOJA3DEx_YATf7di85Q.png?resize=178%2C84&#038;ssl=1\" data-image-id=\"1*rJpWOJA3DEx_YATf7di85Q.png\" data-width=\"178\" data-height=\"84\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">একইভাবে সেইম কারণে ক্লোজারসও কাজ করে, তবে এটা নিয়ে পরের পর্বে বিস্তারিত থাকবে।</p>\n<p class=\"graf graf--p\">তো আজকে এই পর্যন্তই, ভালো থাকবেন আর পাশের মানুষটিকে ভালো রাখবেন।</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d9cbd3b834ea-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d9cbd3b834ea-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>স্কোপিং(Scoping) জাভাস্ক্রিপ্ট এ আরেকটা গুরুত্বপূর্ন বিষয়। আপনাকে জানতে হবে আপনার ডিক্লেয়ারকৃত ভ্যারিয়েবল/ফাংশন আপনি কোথায় কোথায় অ্যাক্সেস করতে পারবেন বা কোথায় কোথায় ইউজ করতে পারবেন। কোনো ভ্যারিয়েবল বা ফাংশন প্রাইভেট করতে চাইলে বা কোনো ভ্যারিয়েবলকে সব জায়গা থেকে অ্যাক্সেস করতে চাইলে কিভাবে বা কোথায় সেটাকে ডিক্লেয়ার করতে হবে এসবকিছুই স্কোপিং এর ভিতরে আলোচনা করবো। জাভাস্ক্রিপ্ট এ [&hellip;]</p>\n","protected":false},"author":1,"featured_media":549,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[54,26,50,60],"tags":[84,94,108,164,78,86,106,110],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/292"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=292"}],"version-history":[{"count":2,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/292/revisions"}],"predecessor-version":[{"id":391,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/292/revisions/391"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/549"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=292"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=292"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=292"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}