{"componentChunkName":"component---src-templates-post-page-js","path":"/daily/589","webpackCompilationHash":"bb1b708645f75543030c","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":589,"date":"2018-08-31T14:06:29","date_gmt":"2018-08-31T14:06:29","guid":{"rendered":"https://with.zonayed.me/?p=589"},"modified":"2018-08-31T14:06:29","modified_gmt":"2018-08-31T14:06:29","slug":"%e0%a6%a8%e0%a6%bf%e0%a6%a4%e0%a7%8d%e0%a6%af%e0%a6%a6%e0%a6%bf%e0%a6%a8%e0%a7%87%e0%a6%b0-%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa-8","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a7%87%e0%a6%8f%e0%a6%b8-%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%a8%e0%a6%bf%e0%a6%a4%e0%a7%8d%e0%a6%af%e0%a6%a6%e0%a6%bf%e0%a6%a8%e0%a7%87%e0%a6%b0-%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa-8/","title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-divider\"></div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">লজিক্যাল অপারেটর, এ সম্পর্কে আমরা পূর্বে জাভাস্ক্রিপ্ট ব্যাসিকেই জেনেছিলাম। কিন্তু আমরা আজকে তারমধ্যে দুইটা লজিক্যাল অপারেটর নিয়ে বিস্তারিত কথা বলবো। সেগুলো হচ্ছে অর <code class=\"markup--code markup--p-code\">||</code> আর অ্যান্ড অপারেটর <code class=\"markup--code markup--p-code\">&amp;&amp;</code> । এগুলোকে সিম্পল মনে হলেও এরা আসলে আরো অনেক জটিল জটিল কাজ করতে সক্ষম। আজকে আমরা ঠিক এদের ব্যবহার নিয়েই জানবো।</p>\n<p class=\"graf graf--p\">তবে এগুলো নিয়ে শুরু করার আগে জাভাস্ক্রিপ্ট এ অন্য আরেকটা ব্যাপার নিয়ে কিছু কথা বলবো। জাভাস্ক্রিপ্ট এ কিছু স্পেশাল ভ্যালু ছাড়া বাকি সবকিছুই সত্য এক্সপ্রেশন বলে বিবেচিত হয়। এর মানে কি? হ্যাঁ নিচের এই উদাহরণটা দেখিঃ</p>\n<pre class=\"graf graf--pre\">if(true) {\r\n   console.log('Print it!');\r\n}</pre>\n<p class=\"graf graf--p\">এখন এইটা প্রিন্ট হবে, কারণ আমাদের ভিতরের কন্ডিশন <code class=\"markup--code markup--p-code\">true</code> দেওয়া। এখন এখানে মিথ্যা <code class=\"markup--code markup--p-code\">false</code> দিলে প্রিন্ট হবে নাঃ</p>\n<pre class=\"graf graf--pre\">if(false) {\r\n   console.log('Print it!');\r\n}</pre>\n<p class=\"graf graf--p\">সেইমভাবে আমরা এখানে সরাসরি সত্য <code class=\"markup--code markup--p-code\">true</code> বা মিথ্যা <code class=\"markup--code markup--p-code\">false</code> না লিখে কিছু এক্সপ্রেশন লিখি সাধারণত যেগুলো এই সত্য <code class=\"markup--code markup--p-code\">true</code> অথবা মিথ্যা <code class=\"markup--code markup--p-code\">false</code> রিটার্ণ করে। আর সেগুলোর উপর ভিত্তি করেই সিদ্ধান্ত নেওয়া হয়। এখন নিচের এই টাইপের এক্সপ্রেশন হলে হয়তো আমরা সহজেই বুঝতে পারি এটা সত্য <code class=\"markup--code markup--p-code\">true</code> না মিথ্যা <code class=\"markup--code markup--p-code\">false</code></p>\n<pre class=\"graf graf--pre\">10 === 10</pre>\n<p class=\"graf graf--p\">কিন্তু এর বাইরেও যদি আমরা কোনো এক্সপ্রেশন এভাবে লিখিঃ</p>\n<pre class=\"graf graf--pre\">if('anything') {\r\n   console.log('Print it!');\r\n}</pre>\n<p class=\"graf graf--p\">এটা রান করলে দেখবেন আপনার লেখা প্রিন্ট হয়েছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*5A4UUmLjo9zx5vpFzgZWkw.png?resize=243%2C71&#038;ssl=1\" data-image-id=\"1*5A4UUmLjo9zx5vpFzgZWkw.png\" data-width=\"243\" data-height=\"71\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কিন্তু কারণটা কি? হ্যাঁ সেই কারণ হচ্ছে জাভাস্ক্রিপ্ট এ এক্সপ্রেশনের ভিতরে কিছু থাকলেই সেটা সত্য। যেকোনো কিছু থাকলেই হবে শুধুমাত্র নিচের এগুলো ছাড়াঃ</p>\n<ul class=\"postList\">\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">false</code> (বুলিয়ান <code class=\"markup--code markup--li-code\">false</code>, নিজেই মিথ্যা)</li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">null</code></li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">NaN</code></li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">0</code></li>\n<li class=\"graf graf--li\">খালি (<code class=\"markup--code markup--li-code\">\"\"</code> , <code class=\"markup--code markup--li-code\">''</code>অথবা <code class=\"markup--code markup--li-code\">``</code>);</li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">undefined</code></li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">!anythingTrue</code> (সত্য কোনো এক্সপ্রেশনের পূর্বে <code class=\"markup--code markup--li-code\">!</code> দিয়েও সেটাকে মিথ্যা করা যায়)</li>\n</ul>\n<p class=\"graf graf--p\">এগুলো যদি আপনি কোথাও ব্যবহার করেন কন্ডিশনের জন্যে, তাহলে এরা মিথ্যা <code class=\"markup--code markup--p-code\">false</code> হিসেবে বিবেচিত হবে।</p>\n<p class=\"graf graf--p\">এখন <code class=\"markup--code markup--p-code\">||</code> এবং <code class=\"markup--code markup--p-code\">&amp;&amp;</code> এই লজিক্যাল অপারেটরগুলো মূলত বুলিয়ান ভ্যালুর সাথেই ব্যবহার করা হয়। কিন্তু এদের কিছু বৈশিষ্ট্য থাকার কারণে এদের দিয়ে অনেক কাজ শর্টকাটেও করে ফেলা যায়। তাই প্রথমে এই দুই অপারেটর আসলে কি করে সেটা বাংলায় বলা যাক।</p>\n<h4 class=\"graf graf--h4\">|| অর (OR) অপারেটরঃ</h4>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">||</code> বা অর দুইটা এক্সপ্রেশনের মধ্যে থাকলেঃ</p>\n<pre class=\"graf graf--pre\">'ক্লাসে যাও' <strong class=\"markup--strong markup--pre-strong\">||</strong> 'ঘুরতে যাও'</pre>\n<p class=\"graf graf--p\">বাংলায় বললেঃ</p>\n<pre class=\"graf graf--pre\">'ক্লাসে যাও' <strong class=\"markup--strong markup--pre-strong\">অথবা</strong> 'ঘুরতে যাও'</pre>\n<p class=\"graf graf--p\">এখন যদি এখানে আপনি ক্লাসে যাওয়া চুজ করেন, তাহলে আপনি ঘুরতে যেতে পারবেন না। মানে এখানে অপশন একটাই। হয় ক্লাসে যাবেন অথবা ঘুরতে যাবেন। এখন আবার যদি ক্লাসে না যান তাহলে আপনি ঘুরতে যেতে পারবেন। মানে আপনি পরের অপশনটা নিতে পারবেন।</p>\n<p class=\"graf graf--p\">এখন এই টেকনিকটাই কাজে লাগিয়ে আপনি দুইটা এক্সপ্রেশন থেকে যেকোনো একটা রান করতে পারবেন। ব্যাপারটা এরকম যে প্রথম এক্সপ্রেশন সত্য <code class=\"markup--code markup--p-code\">true</code> হলে দ্বিতীয়টা আর চলবে না। আর যদি প্রথমটা যদি মিথ্যা <code class=\"markup--code markup--p-code\">false</code> হয় তাহলে দ্বিতীয়টা চলবে। তারপর দ্বিতীয়টা সত্য <code class=\"markup--code markup--p-code\">true</code> না মিথ্যা সেটার উপর ভিত্তি করে ফলাফল দেখাবে। নিচের প্রোগ্রামগুলোর আউটপুট দেখেনঃ</p>\n<pre class=\"graf graf--pre\">console.log(true || false);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*2o4tbK0Mr_adWvjxXf7X0Q.png?resize=235%2C46&#038;ssl=1\" data-image-id=\"1*2o4tbK0Mr_adWvjxXf7X0Q.png\" data-width=\"235\" data-height=\"46\" data-recalc-dims=\"1\" /></figure>\n<pre class=\"graf graf--pre\">console.log(false || true);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*KIizjNO59gxCgmSghustmg.png?resize=245%2C43&#038;ssl=1\" data-image-id=\"1*KIizjNO59gxCgmSghustmg.png\" data-width=\"245\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<pre class=\"graf graf--pre\">console.log(false || false);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*md-F_OtiLP10qq4ih22dOw.png?resize=238%2C40&#038;ssl=1\" data-image-id=\"1*md-F_OtiLP10qq4ih22dOw.png\" data-width=\"238\" data-height=\"40\" data-recalc-dims=\"1\" /></figure>\n<pre class=\"graf graf--pre\">console.log(true || true);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*NsMi8UvSvIrqErl0FcszoQ.png?resize=224%2C46&#038;ssl=1\" data-image-id=\"1*NsMi8UvSvIrqErl0FcszoQ.png\" data-width=\"224\" data-height=\"46\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">শুধুমাত্র সত্য মিথ্যা দিয়ে কি হবে? হ্যাঁ তাহলে এবার চলুন এই পাওয়ারটাকে কাজে লাগিয়ে কাজের কিছু করিঃ</p>\n<pre class=\"graf graf--pre\">console.log(’Go to Class' || 'Go to Visit’);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*epPTvPG5_N4j6MCZ8JChfA.png?resize=354%2C43&#038;ssl=1\" data-image-id=\"1*epPTvPG5_N4j6MCZ8JChfA.png\" data-width=\"354\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখানে প্রথমেই <code class=\"markup--code markup--p-code\">Go to Class</code> পাওয়ায় সেটা প্রিন্ট করেছে। কিন্ত কেনো? হ্যাঁ <code class=\"markup--code markup--p-code\">Go to Class</code> মানেও এখানে সত্য <code class=\"markup--code markup--p-code\">true</code> । আর তাই এখানে Go to Class প্রিন্ট হয়েছে। আরো ক্লিয়ার হবে এই উদাহরণ থেকেঃ</p>\n<pre class=\"graf graf--pre\">console.log(undefined || 'Go to Visit’);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*0mlhOnMAdXyq4Aw_YOfvvw.png?resize=330%2C47&#038;ssl=1\" data-image-id=\"1*0mlhOnMAdXyq4Aw_YOfvvw.png\" data-width=\"330\" data-height=\"47\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">দেখুন প্রথম ভ্যালুটা মিথ্যা হওয়ায় সেটা দ্বিতীয়টা প্রিন্ট করেছে। এটাও আসলে এই অর অপারেটরের আসল পাওয়ার।</p>\n<p class=\"graf graf--p\">এখন এই জিনিসটা কিভাবে কাজে লাগবে আমাদের রিয়েল লাইফ প্রোজেক্টে? হ্যাঁ আমাদের অ্যাপ্লিকেশনে এমন কিছু ভ্যারিয়েবল বা ভ্যালু থাকতে পারে যেটা কোনো কোনো সময় থাকতেও পারে আবার কোনো কোনো সময় নাও থাকতে পারে। এখন আমরা এই অপারেটর দিয়ে একাধিক ভ্যারিয়েবল বা ভ্যালু ব্যবহার করতে পারি। একটা না পেলে আরেকটা ধরবে এরকম করে। ধরি ভ্যারিয়েবলের ক্ষেত্রেঃ</p>\n<pre class=\"graf graf--pre\">const empty = ‘’;\r\nconst something = 'Eat’;\r\nconst work = empty || something;</pre>\n<p class=\"graf graf--p\">এখন এখানে যদি <code class=\"markup--code markup--p-code\">work</code> প্রিন্ট করিঃ</p>\n<pre class=\"graf graf--pre\">console.log(work);</pre>\n<p class=\"graf graf--p\">দেখুন কি প্রিন্ট হয়েছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*FOvQ-f6Iwbjh3k72hz8uhw.png?resize=179%2C47&#038;ssl=1\" data-image-id=\"1*FOvQ-f6Iwbjh3k72hz8uhw.png\" data-width=\"179\" data-height=\"47\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখানে প্রথম ভ্যারিয়েবল <code class=\"markup--code markup--p-code\">empty</code> এর কোনো ভ্যালু নাই বলে বা <code class=\"markup--code markup--p-code\">‘’</code> যা মিথ্যা হওয়ায় এটা পরেরটায় চলে গেছে। আর পরেরটায় ভ্যালু থাকায় সেটাই অ্যাসাইন করেছে। আমরা এখানে মাত্র দুইটার জন্যে করলেও আপনি চাইলে যত ইচ্ছা ততগুলো ভ্যারিয়েবলের জন্যেই করতে পারবেনঃ</p>\n<pre class=\"graf graf--pre\">const aa = '';\r\nlet bb; //cause const don't allow empty variable initialization\r\nconst cc = 'Hello';\r\nconst dd = 'A Lot';</pre>\n<p class=\"graf graf--p\">এটা প্রিন্ট করলে দেখবেন কি আসে ফলাফলঃ</p>\n<pre class=\"graf graf--pre\">console.log(aa || bb || cc || dd);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*FYYqT5fUinM8LuKky5LLsg.png?resize=287%2C43&#038;ssl=1\" data-image-id=\"1*FYYqT5fUinM8LuKky5LLsg.png\" data-width=\"287\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">আমি বেশীরভাগ উদাহরণেই দুইটা নিয়ে দেখালেও আপনি চাইলে এভাবে যত ইচ্ছা ততগুলো নিয়েই করতে পারবেন। যেমন আরেকটা উদাহরণ দেখাইঃ</p>\n<pre class=\"graf graf--pre\">const userOr = {\r\n   name: 'Zonayed Ahmed'\r\n}</pre>\n<p class=\"graf graf--p\">এখন আপনি আরেকটা ভ্যারিয়েবল নিলেন যেটাতে আপনি এই ইউজারের নাম স্টোর করে রাখতে চাচ্ছেনঃ</p>\n<pre class=\"graf graf--pre\">const userOrName = userOr.name;</pre>\n<p class=\"graf graf--p\">এটা ভ্যালিড এবং এটা করতে পারবেন। এখন আবার এখন এই ইউজারের বয়সও আরেকটা ভ্যারিয়েবলে স্টোর করতে চাচ্ছেনঃ</p>\n<pre class=\"graf graf--pre\">const userOrAgeTry = userOr.age;</pre>\n<p class=\"graf graf--p\">এখন এভাবে স্টোর করলেও আপনার কোনো এরর আসবে না, কিন্তু আপনি যদি চান যে যদি ইউজারের বয়স দেওয়া থাকে তাহলে আমার এই ভ্যারিয়েবলে সেই বয়স স্টোর করবো। আর যদি দেওয়া না থাকে তাহলে আমার এই ভ্যারিয়েবলে অন্য একটা লেখা থাকবে যে ইউজারের বয়স পাওয়া যায় নি। তাহলে একভাবে আমরা এটা করতে পারিঃ</p>\n<pre class=\"graf graf--pre\">let userOrAgeTry2;\r\nif(userOr.age) {\r\n   userOrAgeTry2 = userOr.age;\r\n} else {\r\n   userOrAgeTry2 = 'User Age Not Found';\r\n}</pre>\n<p class=\"graf graf--p\">অথবা আপনি হয়তো জানেন <code class=\"markup--code markup--p-code\">if else</code> এর ব্লকের ভিতরে এরকম একলাইনের কোড থাকলে আমরা ব্র্যাকেটসগুলো অ্যাভয়েড করতে পারি। তাইলে আমাদের কোড এরকম হবেঃ</p>\n<pre class=\"graf graf--pre\">if(userOr.age) userOrAgeTry2 = userOr.age;\r\nelse userOrAgeTry2 = 'User Age Not Found';</pre>\n<p class=\"graf graf--p\">এখন এই <code class=\"markup--code markup--p-code\">userOrAgeTry2</code> ভ্যারিয়েবল প্রিন্ট করলেঃ</p>\n<pre class=\"graf graf--pre\">console.log(userOrAgeTry2);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*EZTJPkBvpkgExkg6ZMkoAA.png?resize=238%2C43&#038;ssl=1\" data-image-id=\"1*EZTJPkBvpkgExkg6ZMkoAA.png\" data-width=\"238\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন এই সিম্পল একটা কাজ অর অপারেটর দিয়ে এক লাইনেই সম্ভবঃ</p>\n<pre class=\"graf graf--pre\">const userOrAge = userOr.age || 'Age Not Found';</pre>\n<p class=\"graf graf--p\">ব্যাস! কাজ শেষ। এখন আমাদের এই ভ্যারিয়েবল প্রিন্ট করলেঃ</p>\n<pre class=\"graf graf--pre\">console.log(userOrAge);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*1cOmW5rk7G2v2k15vEopeQ.png?resize=207%2C43&#038;ssl=1\" data-image-id=\"1*1cOmW5rk7G2v2k15vEopeQ.png\" data-width=\"207\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখানে হয়তো অল্প কয়েকটা লাইন সেভ হয়েছে, কিন্তু আমি উদাহরণ সিম্পল রাখার জন্যে এরকম সিম্পলভাবে দেখিয়েছি। কিন্তু আপনি যখন কোনো ওয়েব অ্যাপ্লিকেশনে কাজ করতে যাবেন, অনেক বড় বড় কাজে এই ছোট্টো টেকনিকটাও কাজে লাগতে পারে।</p>\n<p class=\"graf graf--p\">আবার চাইলে এরকম কোনো এক্সপ্রেশনের সত্য মিথ্যার উপর নির্ভর করে আমরা ফাংশনও রান করাতে পারি। যেমন ধরি আমাদের এমন একটা ফাংশন আছেঃ</p>\n<pre class=\"graf graf--pre\">const aFunc = () =&gt; {\r\n   console.log('Print Me!');\r\n}</pre>\n<p class=\"graf graf--p\">এখন এটা আরেকটা এক্সপ্রেশনের উপর নির্ভর করে রান করাবো। যদি সে এক্সপ্রেশন সত্য হয় তাহলে রান হবে নাঃ</p>\n<pre class=\"graf graf--pre\">true || aFunc();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*Bf_yqFdvtX9Mag2KO5sEjQ.png?resize=158%2C40&#038;ssl=1\" data-image-id=\"1*Bf_yqFdvtX9Mag2KO5sEjQ.png\" data-width=\"158\" data-height=\"40\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কিন্তু সেই এক্সপ্রেশন যদি মিথ্যা হয় তাহলে আমরা এই ফাংশন রান করতে চাইঃ</p>\n<pre class=\"graf graf--pre\">false || aFunc();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*md0Jmq-GaQGIvXVM3gqTIA.png?resize=158%2C43&#038;ssl=1\" data-image-id=\"1*md0Jmq-GaQGIvXVM3gqTIA.png\" data-width=\"158\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এভাবেই এই অপারেটর দিয়ে এরকম পাওয়ারফুল কাজ নিমিষেই করে ফেলতে পারবেন। এখানে কিন্তু মনে রাখবেন আমি দুইটা দিয়ে কাজ করলেও আপনি অনেকগুলো একসাথে নিতে পারবেন। আপনার বাম দিকে থেকে শুরু হয়ে যেখানেই সত্য পাবে সেখান পর্যন্ত অপারেশন চলবে।</p>\n<h4 class=\"graf graf--h4\"><code class=\"markup--code markup--h4-code\">&amp;&amp;</code> অ্যান্ড (AND ) অপারেটরঃ</h4>\n<p class=\"graf graf--p\">এই <code class=\"markup--code markup--p-code\">&amp;&amp;</code> অথবা অ্যান্ড অপারেটর দুইটা এক্সপ্রেশনের মধ্যে থাকলেঃ</p>\n<pre class=\"graf graf--pre\">'বাজারে যাও' &amp;&amp; 'বাজার করো'</pre>\n<p class=\"graf graf--p\">এখন এখানে লক্ষ্য করুন, আপনি যদি বাজারে যান তাহলেই একমাত্র বাজার করতে পারবেনঃ</p>\n<pre class=\"graf graf--pre graf--startsWithSingleQuote\">‘বাজারে যাও' এবং 'বাজার করো'</pre>\n<p class=\"graf graf--p\">এখন অ্যান্ড অপারেটরটার কাজও ঠিক তাই। আপনার প্রথম এক্সপ্রেশন যদি সত্য হয় তাহলেই একমাত্র দ্বিতীয়টা চলবে। আর যদি প্রথমটা মিথ্যা হয় তাহলে দ্বিতীয়টা কখনোই চলবে নাঃ</p>\n<pre class=\"graf graf--pre\">console.log(true &amp;&amp; false);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*_8f8UD8a_4wPTK_mSeQbfw.png?resize=239%2C43&#038;ssl=1\" data-image-id=\"1*_8f8UD8a_4wPTK_mSeQbfw.png\" data-width=\"239\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<pre class=\"graf graf--pre\">console.log(true &amp;&amp; true);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*EVbibuwwRZJKdUWbomfYKQ.png?resize=231%2C43&#038;ssl=1\" data-image-id=\"1*EVbibuwwRZJKdUWbomfYKQ.png\" data-width=\"231\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<pre class=\"graf graf--pre\">console.log(false &amp;&amp; true);</pre>\n<p class=\"graf graf--p\">পরেরটা সত্য <code class=\"markup--code markup--p-code\">true</code> হলেও লাভ নাই, মিথ্যা <code class=\"markup--code markup--p-code\">false</code> হলেও এটা ধরাই হবে না। তাই সত্য <code class=\"markup--code markup--p-code\">true</code> মিথ্যা <code class=\"markup--code markup--p-code\">false</code> তে কিচ্ছু যায় আসে নাঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*V0wEpukFHMoEXdilKqNQvw.png?resize=235%2C43&#038;ssl=1\" data-image-id=\"1*V0wEpukFHMoEXdilKqNQvw.png\" data-width=\"235\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এভাবে আমরা এই টেকনিকটা ব্যবহার করে আরো অ্যাডভান্স লেভেলের কাজ করতে পারি। আমরা প্রথম এক্সপ্রেশনের উপর ডিপেন্ড করে পরের এক্সপ্রেশনে যেতে পারি। মানে যদি প্রথমটা সত্য হয় তাহলেই একমাত্র পরের এক্সপ্রেশনটা চলবেঃ</p>\n<pre class=\"graf graf--pre\">true &amp;&amp; console.log(‘Eat');</pre>\n<p class=\"graf graf--p\">দেখেন এখানে <code class=\"markup--code markup--p-code\">Eat</code> প্রিন্ট হয়েছে। কারণ প্রথমটা সত্য তাইঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*K_mWQKEQvjyokVCwK8RuYg.png?resize=235%2C47&#038;ssl=1\" data-image-id=\"1*K_mWQKEQvjyokVCwK8RuYg.png\" data-width=\"235\" data-height=\"47\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কিন্তু প্রথমটাই যদি মিথ্যা false ভ্যালু হয়ঃ</p>\n<pre class=\"graf graf--pre\">false &amp;&amp; console.log(‘Eat');</pre>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">Eat</code> প্রিন্ট হবে না কারন প্রথম ভ্যালুই মিথ্যাঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*LoIetPkGi106zQStURxIgg.png?resize=239%2C39&#038;ssl=1\" data-image-id=\"1*LoIetPkGi106zQStURxIgg.png\" data-width=\"239\" data-height=\"39\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">সেইম ভ্যারিয়েবলের ক্ষেত্রেও হবেঃ</p>\n<pre class=\"graf graf--pre\">const anoVar = 'Me' &amp;&amp; 'You';</pre>\n<p class=\"graf graf--p\">এখন এই <code class=\"markup--code markup--p-code\">anoVar</code> প্রিন্ট করলেঃ</p>\n<pre class=\"graf graf--pre\">console.log(anoVar);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*EUJVA8uhE-2Nv2li_dvPOw.png?resize=189%2C47&#038;ssl=1\" data-image-id=\"1*EUJVA8uhE-2Nv2li_dvPOw.png\" data-width=\"189\" data-height=\"47\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কেনো এমন হলো? হ্যাঁ এখানে প্রথমটা সত্য হওয়াতেই দ্বিতীয়টায় গিয়েছে। আর তাই দ্বিতীয়টাই শেষে ভ্যারিয়েবল হিসেবে <code class=\"markup--code markup--p-code\">anoVar</code> এ স্টোর হয়েছে। এখন প্রথমটা মিথ্যা <code class=\"markup--code markup--p-code\">false</code> হলে দ্বিতীয়টা ধরাই হবে নাঃ</p>\n<pre class=\"graf graf--pre\">const anoVar2 = false &amp;&amp; 'Anything';</pre>\n<p class=\"graf graf--p\">এটা প্রিন্ট করলেঃ</p>\n<pre class=\"graf graf--pre\">console.log(anoVar2);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*B9CUWPRCAveCmUOMRJeUGQ.png?resize=193%2C49&#038;ssl=1\" data-image-id=\"1*B9CUWPRCAveCmUOMRJeUGQ.png\" data-width=\"193\" data-height=\"49\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">প্রথমটাই প্রিন্ট করলো, দ্বিতীয়টা ধরে নি।</p>\n<p class=\"graf graf--p\">এখন এই টেকনিকটা কাজে লাগিয়েই আমরা চাইলে একটা এক্সপ্রেশন সত্য হলেই আরেকটা রান করাবো এমন করে বলতে পারি। যেমন ধরি নিচে আমাদের একটা অবজেক্ট আছেঃ</p>\n<pre class=\"graf graf--pre\">const userAnd = {\r\n   name: 'Zonayed Ahmed'\r\n}</pre>\n<p class=\"graf graf--p\">এখন আমি চাচ্ছি যদি অবজেক্ট এর <code class=\"markup--code markup--p-code\">name</code> প্রপার্টি থাকে তাহলেই সেটা আমি প্রিন্ট করাবোঃ</p>\n<pre class=\"graf graf--pre\">if(userAnd.name) {\r\n   console.log(`Name is: ${userAnd.name}`);\r\n}</pre>\n<p class=\"graf graf--p\">তো অবজেক্ট এর এই প্রপার্টি আছে তাই প্রিন্ট হবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*g-F_6tpE9LCE9JC5HyBJ-w.png?resize=343%2C74&#038;ssl=1\" data-image-id=\"1*g-F_6tpE9LCE9JC5HyBJ-w.png\" data-width=\"343\" data-height=\"74\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন সেইম কাজটা অ্যান্ড অপারেটরের টেকনিক লাগিয়েও করতে পারি। যদি অবজেক্ট এর <code class=\"markup--code markup--p-code\">name</code> প্রপার্টি থাকে তাইলেই সেটা প্রিন্ট করোঃ</p>\n<pre class=\"graf graf--pre\">userAnd.name &amp;&amp; console.log(`Name is: ${userAnd.name}`);</pre>\n<p class=\"graf graf--p\">ব্যাস এটাও ঠিক আমাদের সেইম আউটপুটই দিবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*6UTVuu1EaKHEMKQ3Gdo02A.png?resize=438%2C50&#038;ssl=1\" data-image-id=\"1*6UTVuu1EaKHEMKQ3Gdo02A.png\" data-width=\"438\" data-height=\"50\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন ধরি আমরা আরেকটা প্রপার্টি প্রিন্ট করতে চাচ্ছি। চাচ্ছি যদি এই অবজেক্ট এর <code class=\"markup--code markup--p-code\">age</code> নামে কোনো প্রপার্টি থেকে থাকে তাহলে সেটা প্রিন্ট করা হউকঃ</p>\n<pre class=\"graf graf--pre\">if(userAnd.age) {\r\n   console.log(`Age is: ${userAnd.age}`);\r\n}</pre>\n<p class=\"graf graf--p\">কিন্তু এরকম প্রপার্টি যেহেতু নাই তাই প্রিন্ট হবে নাঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*9vZ6zPSIqt3rrQfON_R29g.png?resize=350%2C75&#038;ssl=1\" data-image-id=\"1*9vZ6zPSIqt3rrQfON_R29g.png\" data-width=\"350\" data-height=\"75\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন এই কাজটাও অ্যান্ড অপারেটর দিয়ে সুন্দর করে একলাইনেও করা যাবে। যদি অমুক প্রপার্টি থাকে তাহলেই তমুক প্রিন্ট করবাঃ</p>\n<pre class=\"graf graf--pre\">userAnd.age &amp;&amp; console.log(`Age is: ${userAnd.age}`);</pre>\n<p class=\"graf graf--p\">এটাও যেহেতু অবজেক্ট এর এমন কোনো প্রপার্টিই নাই, তাই কিছুই প্রিন্ট হবে নাঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*qpvsQCNcDRe3FRRoIU8IlA.png?resize=420%2C40&#038;ssl=1\" data-image-id=\"1*qpvsQCNcDRe3FRRoIU8IlA.png\" data-width=\"420\" data-height=\"40\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন একই ভাবে আমরা চাচ্ছি যদি এই অবজেক্ট এর <code class=\"markup--code markup--p-code\">name</code> প্রপার্টি এবং <code class=\"markup--code markup--p-code\">age</code> প্রপার্টি থাকে তাহলে অমুক একটা লেখা প্রিন্ট করতে হবেঃ</p>\n<pre class=\"graf graf--pre\">userAnd.name &amp;&amp; userAnd.age &amp;&amp; console.log(`${userAnd.name} is ${userAnd.age} years old!`);</pre>\n<p class=\"graf graf--p\">এখন এখানে যেহেতু <code class=\"markup--code markup--p-code\">age</code> প্রপার্টি নাই তাই এটা প্রিন্ট হবে নাঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*uEbqrdqdUv8MV9egvQei4w.png?resize=697%2C51&#038;ssl=1\" data-image-id=\"1*uEbqrdqdUv8MV9egvQei4w.png\" data-width=\"697\" data-height=\"51\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন আমরা অর আর অ্যান্ড মিলিয়েও দিতে পারি। যদি <code class=\"markup--code markup--p-code\">name</code> অথবা <code class=\"markup--code markup--p-code\">age</code> প্রপার্টি থাকে তাহলে <code class=\"markup--code markup--p-code\">name</code> অথবা <code class=\"markup--code markup--p-code\">age</code> যেটাই আছে সেটাই প্রিন্ট করবোঃ</p>\n<pre class=\"graf graf--pre\">(userAnd.name ||userAnd.age) &amp;&amp; console.log(`Found: ${userAnd.name || userAnd.age}`);</pre>\n<p class=\"graf graf--p\">এখানে আমি ব্র্যাকেটস ব্যবহার করেছি, কারণ এই পুরো এক্সপ্রেশনটা সত্য হলেই তাহলে যাতে পরেরটা প্রিন্ট হয়ঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*d8d5XcgIqtqDY3xc0hpF-Q.png?resize=652%2C46&#038;ssl=1\" data-image-id=\"1*d8d5XcgIqtqDY3xc0hpF-Q.png\" data-width=\"652\" data-height=\"46\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এরকম করে আমরা যত ইচ্ছা ততগুলো নিয়েই কাজ করতে পারি জাভাস্ক্রিপ্ট এ। একইরকমভাবে ফাংশনও ঠিক আগের মতোই এরকম সত্য না মিথ্যা সেটার উপর ভিত্তি করে রান করতে পারি। ধরি আমাদের একটা ফাংশন আছেঃ</p>\n<pre class=\"graf graf--pre\">const anoFunc = () =&gt; {\r\n   console.log('Print Me!');\r\n}</pre>\n<p class=\"graf graf--p\">এখন এরকম একটা এক্সপ্রেশনের উপর ডিপেন্ড করে এই ফাংশন প্রিন্ট করাবোঃ</p>\n<pre class=\"graf graf--pre\">true &amp;&amp; anoFunc();</pre>\n<p class=\"graf graf--p\">এখানে ফাংশন চলবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*JqY5VkwKfgQA1iWWvFZ08w.png?resize=168%2C53&#038;ssl=1\" data-image-id=\"1*JqY5VkwKfgQA1iWWvFZ08w.png\" data-width=\"168\" data-height=\"53\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">মিথ্যা হলেঃ</p>\n<pre class=\"graf graf--pre\">false &amp;&amp; anoFunc();</pre>\n<p class=\"graf graf--p\">এখানে ফাংশন চলবে নাঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*OIe1nNaibt_085eDZxZLUw.png?resize=172%2C43&#038;ssl=1\" data-image-id=\"1*OIe1nNaibt_085eDZxZLUw.png\" data-width=\"172\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এই টেকনিকগুলোই আপনার ওয়েব অ্যাপ্লিকেশনে কাজে লাগাতে পারবেন। আপনার অ্যাপ্লিকেশনে এরকম সিচুয়েশন আসতে পারে যেখানে আপনার এরকম কয়েকটা এক্সপ্রেশন লিখতে হতে পারে। একটার ফলাফলের উপর ভিত্তি করে আরেকটা রান করাতে হতে পারে। সেক্ষত্রে আপনি শর্টকাটে অর অথবা অ্যান্ড অপারেটর ব্যবহার করে অনেক জটিল জটিল কাজ সহজেই করে ফেলতে পারবেন। কোড দেখতেও ক্লিন এবং স্মার্ট তো বটেই!</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d80d7a3b90f1-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d80d7a3b90f1-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>লজিক্যাল অপারেটর, এ সম্পর্কে আমরা পূর্বে জাভাস্ক্রিপ্ট ব্যাসিকেই জেনেছিলাম। কিন্তু আমরা আজকে তারমধ্যে দুইটা লজিক্যাল অপারেটর নিয়ে বিস্তারিত কথা বলবো। সেগুলো হচ্ছে অর || আর অ্যান্ড অপারেটর &amp;&amp; । এগুলোকে সিম্পল মনে হলেও এরা আসলে আরো অনেক জটিল জটিল কাজ করতে সক্ষম। আজকে আমরা ঠিক এদের ব্যবহার নিয়েই জানবো। তবে এগুলো নিয়ে শুরু করার আগে [&hellip;]</p>\n","protected":false},"author":1,"featured_media":576,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[54,50,60],"tags":[84,94,108,168,78,86,106],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/589"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=589"}],"version-history":[{"count":1,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/589/revisions"}],"predecessor-version":[{"id":590,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/589/revisions/590"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/576"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=589"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=589"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=589"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}