{"componentChunkName":"component---src-templates-post-page-js","path":"/advance/458","webpackCompilationHash":"9c8e12923f39949c0264","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":458,"date":"2018-08-08T16:06:12","date_gmt":"2018-08-08T16:06:12","guid":{"rendered":"https://with.zonayed.me/?p=458"},"modified":"2018-12-10T05:30:44","modified_gmt":"2018-12-10T05:30:44","slug":"%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a1%e0%a6%ad%e0%a6%be%e0%a6%a8-5","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a7%87%e0%a6%8f%e0%a6%b8-%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a1%e0%a6%ad%e0%a6%be%e0%a6%a8-5/","title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং এ ইনহেরিট্যান্স খুবই গুরুত্বপুর্ণ এবং কাজের একটা জিনিস। এটার সাহায্যে চাইলে সহজেই একটা অবজেক্ট এর ফিচার আরেকটা অবজেক্ট এ নেওয়া যায়। এখন এর মানে এখানে ক্লিয়ার না হলেও একটু বাস্তব উদাহরণ দিলে ঠিকমতো বুঝতে পারবেন।</p>\n<p class=\"graf graf--p\">ধরি আমাদের একটা ফাংশন কন্সট্রাকটর আছে <code class=\"markup--code markup--p-code\">Person</code> নামে। এখন একটা পার্সনের কি কি থাকতে পারে? নাম (<code class=\"markup--code markup--p-code\">name</code>), বয়স(<code class=\"markup--code markup--p-code\">age</code>), কি করে(<code class=\"markup--code markup--p-code\">job</code>) এরকম কিছু থাকতে পারে। তাইলে এর জন্যে একটা ব্লু-প্রিন্ট তৈরী করলে এরকম হবেঃ</p>\n<pre class=\"graf graf--pre\">var Person = function(name, age, job) {\r\n   this.name = name;\r\n   this.age = age;\r\n   this.job = job;\r\n}</pre>\n<p class=\"graf graf--p\">এখন এখান থেকে আমরা ইচ্ছামতো পার্সনের জন্যে অবজেক্ট তৈরী করতে পারবো। কিন্তু এখন যদি ধরি আমরা আরেকটা ব্লু-প্রিন্ট চাই <code class=\"markup--code markup--p-code\">Teacher</code> নামে। এখন টিচারের কি কি থাকতে পারে? ধরে নিলাম টিচারেরও নাম(<code class=\"markup--code markup--p-code\">name</code>), বয়স(<code class=\"markup--code markup--p-code\">age</code>) ও কি করে(<code class=\"markup--code markup--p-code\">job</code>) এগুলো আছে। সেই সাথে অতিরিক্ত আরেকটা আছে কোন সাবজেক্ট(<code class=\"markup--code markup--p-code\">subject</code>) পড়ায়। এখন এই টিচারের জন্যে ব্লু-প্রিন্ট তৈরী করতে চাইলেঃ</p>\n<pre class=\"graf graf--pre\">var Teacher = function(name, age, job, subject) {\r\n   this.name = name;\r\n   this.age = age;\r\n   this.job = job;\r\n   this.subject = subject;\r\n}</pre>\n<p class=\"graf graf--p\">কিন্তু এভাবে আমরা সেইম জিনিসগুলো পুনরায় ইউজ করাটা খুব ক্লিন দেখায় না। আমরা এখানে এমন কিছু করতে চাই যাতে আমরা <code class=\"markup--code markup--p-code\">Person</code> থেকে পার্সনের ফিচারগুলো <code class=\"markup--code markup--p-code\">Teacher</code> এ আনবো, এবং সেই সাথে টিচারের অতিরিক্ত যেটা আছে সেটা ডিফাইন করে দিবো। এটাকেই মূলত ইনহেরিট করা বলে। এখন ইনহেরিট্যান্স কয়েকরকমের হতে পারে। নিচে আমি বিস্তারিত আলোচনা করলাম।</p>\n<h4 class=\"graf graf--h4\">প্রোটোটাইপ বেসড ইনহেরিট্যান্সঃ</h4>\n<p class=\"graf graf--p\">ধরি গত পর্বে আমরা একটা ফাংশন কন্সট্রাকটর তৈরী করেছিলাম এরকমঃ</p>\n<pre class=\"graf graf--pre\">var PersonOnly = function(name, age, job) {\r\n   this.name = name;\r\n   this.age = age;\r\n   this.job = job;\r\n}</pre>\n<p class=\"graf graf--p\">ধরি আমরা এই কন্সট্রাকটরটা ডিফাইন করে ফেলছি অলরেডি। কিন্তু এখন জন্ম তারিখ() বের করার জন্যে আরেকটা মেথড ঢুকাতে চাই এটার ভিতরে। কি করা যায়? আবার নতুন করে ডিফাইন করবো?? না! অবশ্যই না। এখান আমরা <code class=\"markup--code markup--p-code\">prototype</code> ইউজ করে নতুন মেথডটাকে আগের থাকা <code class=\"markup--code markup--p-code\">PersonOnly</code> এ ঢুকাতে পারবো এভাবেঃ</p>\n<pre class=\"graf graf--pre\">PersonOnly.prototype.dateOfBirth = function() {\r\n   console.log(this.name + ' born in ' + (2018 - this.age));\r\n}</pre>\n<p class=\"graf graf--p\">এখন কন্সোলে এটা লিখুনঃ</p>\n<pre class=\"graf graf--pre\">console.log(PersonOnly.prototype);</pre>\n<p class=\"graf graf--p\">দেখবেন এখানে আমাদের নতুন তৈরী করা মেথডটা আছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*oZ97VERNJIK9Yja90rjurA.png?resize=277%2C95&#038;ssl=1\" data-image-id=\"1*oZ97VERNJIK9Yja90rjurA.png\" data-width=\"277\" data-height=\"95\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন আমরা প্রোটোটাইপ চেইনের কথা আগের পর্বে জেনেছি। প্রোটোটাইপ চেইনের কারনে এখন এই মেথডটাকেও অ্যাক্সেস করা যাবে এই <code class=\"markup--code markup--p-code\">PersonOnly</code> থেকে তৈরী করা অবজেক্টগুলো থেকে। ধরি নিচে একটা অবজেক্ট তৈরী করলাম এই কন্সট্রাকটর ফাংশন থেকেঃ</p>\n<pre class=\"graf graf--pre\">var zawad = new PersonOnly('Zawad Ahmed', 1, 'Child');</pre>\n<p class=\"graf graf--p\">এখন আমরা আমাদের তৈরীকৃত মেথডটাকে অ্যাক্সেস করতে চাইলেঃ</p>\n<pre class=\"graf graf--pre\">zawad.dateOfBirth();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*uofIwFa_HKlydk4HgF9LRQ.png?resize=193%2C43&#038;ssl=1\" data-image-id=\"1*uofIwFa_HKlydk4HgF9LRQ.png\" data-width=\"193\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">ব্যাস! এভাবেই আমরা অ্যাক্সেস করে ফেলতে পারতেছি। একইরকমভাবে আমরা ভ্যারিয়েবলকেও কন্সট্রাকটর ফাংশনে দিতে পারবো। যেমন আমরা নতুন আরেকটা ভ্যারিয়েবল দিলাম <code class=\"markup--code markup--p-code\">PersonOnly</code> এঃ</p>\n<pre class=\"graf graf--pre\">PersonOnly.prototype.address = 'Bangladesh';</pre>\n<p class=\"graf graf--p\">এখন এটা আমরা <code class=\"markup--code markup--p-code\">zawad</code> অবজেক্ট থেকেও অ্যাক্সেস করতে পারবোঃ</p>\n<pre class=\"graf graf--pre\">console.log(zawad.address)</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*ykZZmmUgm3BbqCswx6yp9A.png?resize=214%2C43&#038;ssl=1\" data-image-id=\"1*ykZZmmUgm3BbqCswx6yp9A.png\" data-width=\"214\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">ম্যাজিক! এটাই ইনহেরিট্যান্স এর ম্যাজিক। এবার আসুন আমরা আরো বড় কিছুর দিকে যাই।</p>\n<h4 class=\"graf graf--h4\">কন্সট্রাকটর ইনহেরিট্যান্সঃ</h4>\n<p class=\"graf graf--p\">যেটা প্রথমে আমরা আলোচনা করেছিলাম। একটা পার্সন আর একটা টিচারের মধ্যে একটা বৈশিষ্ট্যে খালি পার্থক্য রয়েছে। এখন আমাদের সেজন্যে কি দুইটা পৃথক পৃথক ফাংশন কন্সট্রাকটর তৈরী করতে হবে? অবশ্যই না! আমাদের ইনহেরিট্যান্স আছে কি জন্যে?</p>\n<p class=\"graf graf--p\">ধরি আমাদের একটা ফাংশন কন্সট্রাকটর আছে <code class=\"markup--code markup--p-code\">Person</code> নামেঃ</p>\n<pre class=\"graf graf--pre\">var Person = function(name, age, job) {\r\n   this.name = name;\r\n   this.age = age;\r\n   this.job = job;\r\n}</pre>\n<p class=\"graf graf--p\">এখন আমাদের টিচারদের জন্যেও একটা ফাংশন কন্সট্রাকটর দরকার যেখানে ঠিক এইগুলোও থাকবে সেই সাথে অতিরিক্ত একটা <code class=\"markup--code markup--p-code\">subject</code> নামে আরেকটা থাকবে। এখন এটার জন্যে ফাংশন কন্সট্রাকটর এমন হতে পারেঃ</p>\n<pre class=\"graf graf--pre\">var Teacher = function(name, age, job, subject) {\r\n   this.name = name;\r\n   this.age = age;\r\n   this.job = job;\r\n   this.subject = subject;\r\n}</pre>\n<p class=\"graf graf--p\">এখন আমাদের ইনহেরিট্যান্স থাকার কারনে এভাবে নতুন করে <code class=\"markup--code markup--p-code\">Teacher</code> এর ভিতরে সবকিছু ডিফাইন করার কোনো দরকার নাই। আমরা চাইলে সহজেই <code class=\"markup--code markup--p-code\">Person</code> থেকে <code class=\"markup--code markup--p-code\">name</code>, <code class=\"markup--code markup--p-code\">age</code> আর <code class=\"markup--code markup--p-code\">job</code> নিয়ে আসতে পারি এভাবেঃ</p>\n<pre class=\"graf graf--pre\">var Teacher = function(name, age, job, subject) {\r\n   Person.call(this, name, age, job);\r\n   this.subject = subject;\r\n}</pre>\n<p class=\"graf graf--p\">নতুন নতুন কিছু দেখা যাচ্ছে মনে হয়? হ্যাঁ, এটা একটু বুঝার জিনিস। এখানে আমরা ভিতরে <code class=\"markup--code markup--p-code\">Person</code> কে কল করে এনেছি এবং <code class=\"markup--code markup--p-code\">call</code> মেথড ইউজ করে <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু ডিটারমাইন করে দিলাম। এখন এখানে <code class=\"markup--code markup--p-code\">this</code> মানে <code class=\"markup--code markup--p-code\">this</code> ই! কেনো? হ্যাঁ মনে করার চেষ্টা করুন। আমরা যখন এটা দিয়ে অবজেক্ট তৈরী করবো, তখন <code class=\"markup--code markup--p-code\">new</code> কীওয়ার্ড ইউজ করবো। আর সেজন্যে আমাদের <code class=\"markup--code markup--p-code\">this</code> এর নতুন কন্টেক্সট তৈরী হবে যেটা নতুন অবজেক্টটাকে ইন্ডিকেট করবে। তার মানে এখানে ডিফাইন করা <code class=\"markup--code markup--p-code\">this</code> টা আসলে আমরা ভবিষ্যতে যে অবজেক্ট তৈরী করবো সেটাকেই ইন্ডিকেট করছে। এখন বাকি অংশ ঠিক আগের মতোইঃ</p>\n<pre class=\"graf graf--pre\">var kamaljeet = new Teacher('Kamaljeet Saini', 53, 'Teacher', 'CSE');</pre>\n<p class=\"graf graf--p\">ব্যাস এভাবেই আমাদের নতুন অবজেক্ট তৈরী করা যাবে। এটা ঠিকঠাকমতোই কাজ করবেঃ</p>\n<pre class=\"graf graf--pre\">console.log(kamaljeet.name);\r\nconsole.log(kamaljeet.age);\r\nconsole.log(kamaljeet.job);\r\nconsole.log(kamaljeet.subject);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*hiPpaLpUB_FJkRQM5rZFBA.png?resize=250%2C138&#038;ssl=1\" data-image-id=\"1*hiPpaLpUB_FJkRQM5rZFBA.png\" data-width=\"250\" data-height=\"138\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">ব্যাস! আমরা এভাবেই <code class=\"markup--code markup--p-code\">Person</code> এর ফিচারগুলো <code class=\"markup--code markup--p-code\">Teacher</code> এ ইনহেরিট করে নিয়ে আসলাম। এটা কিছুটা হলেও আমাদের লাইফ সহজ করে দিবে।</p>\n<p class=\"graf graf--p\">এখন আমাদের এমনও ফাংশন কন্সট্রাকটরও থাকতে পারে যেটা কোনো প্যারামিটার নেয় না। বাই ডিফল্ট ভ্যালু সেট করা থাকতে পারে এরকমঃ</p>\n<pre class=\"graf graf--pre\">var GeneralPeople = function(name, age, job) { \r\n   this.name = name;\r\n   this.age = age;\r\n   this.job = job;\r\n}</pre>\n<p class=\"graf graf--p\">এখন ধরি আরেকটা অবজেক্ট আছে <code class=\"markup--code markup--p-code\">Athlete</code> নামে যেটা ঠিক <code class=\"markup--code markup--p-code\">GeneralPeople</code> এর সবগুলো ফিচারই থাকবে। সাথে এক্সট্রা আরেকটা থাকবে। তো এখানেও সেইমভাবে ইনহেরিট্যান্স ইউজ করা যাবেঃ</p>\n<pre class=\"graf graf--pre\">var Athlete = function(name, age, job, prize) {\r\n   GeneralPeople.call(this);\r\n   this.prize = 100;\r\n}</pre>\n<p class=\"graf graf--p\">ব্যাস এভাবেই আমরা কোনো প্যারামিটার/আর্গুমেন্ট ছাড়াও ইনহেরিট্যান্স নিয়ে কাজ করতে পারি। এখানে দুইটার মধ্যে কোনো পার্থক্যই নেই আসলে।</p>\n<p class=\"graf graf--p\">আশা করি ইনহেরিট্যান্স নিয়ে আর কোনো সমস্যা থাকবে না। এখন থেকে আপনি রিয়েল লাইফ কোনো জিনিসেও ইনহেরিট্যান্স কাজে লাগাতে পারবেন আর আপনার ডেভেলপমেন্ট এর লাইফ সহজ করতে পারবেন।</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d80d8f12091c-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d80d8f12091c-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>অবজেক্ট ওরিয়েন্টেড প্রোগ্রামিং এ ইনহেরিট্যান্স খুবই গুরুত্বপুর্ণ এবং কাজের একটা জিনিস। এটার সাহায্যে চাইলে সহজেই একটা অবজেক্ট এর ফিচার আরেকটা অবজেক্ট এ নেওয়া যায়। এখন এর মানে এখানে ক্লিয়ার না হলেও একটু বাস্তব উদাহরণ দিলে ঠিকমতো বুঝতে পারবেন। ধরি আমাদের একটা ফাংশন কন্সট্রাকটর আছে Person নামে। এখন একটা পার্সনের কি কি থাকতে পারে? নাম (name), [&hellip;]</p>\n","protected":false},"author":1,"featured_media":354,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[54,50,60],"tags":[84,94,158,108,78,86,160,106],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/458"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=458"}],"version-history":[{"count":2,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/458/revisions"}],"predecessor-version":[{"id":681,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/458/revisions/681"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/354"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=458"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=458"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=458"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}