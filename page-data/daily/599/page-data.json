{"componentChunkName":"component---src-templates-post-page-js","path":"/daily/599","webpackCompilationHash":"81761d2f324522b163a2","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":599,"date":"2018-09-10T15:39:45","date_gmt":"2018-09-10T15:39:45","guid":{"rendered":"https://with.zonayed.me/?p=599"},"modified":"2018-09-10T15:39:45","modified_gmt":"2018-09-10T15:39:45","slug":"%e0%a6%a8%e0%a6%bf%e0%a6%a4%e0%a7%8d%e0%a6%af%e0%a6%a6%e0%a6%bf%e0%a6%a8%e0%a7%87%e0%a6%b0-%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa-11","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a7%87%e0%a6%8f%e0%a6%b8-%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%a8%e0%a6%bf%e0%a6%a4%e0%a7%8d%e0%a6%af%e0%a6%a6%e0%a6%bf%e0%a6%a8%e0%a7%87%e0%a6%b0-%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa-11/","title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-divider\"></div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">এরর আমাদের নিত্যদিনের সঙ্গী। কোড লিখলে এরর হবেই। তবে আমরা অনেকে মনে করি এরর মানে তো এররই, এগুলোর উপর আর আমাদের কোনো কন্ট্রোল নাই। হ্যা, ব্যাপারটা আংশিক সত্য হলেও ঠিক পুরোপুরি না। তাছাড়া একটা ভালো অ্যাপ্লিকেশনে কোনো এরর আসলে সেটা ইউজারদের বুঝতে না দেওয়াটাও অন্যতম একটা বৈশিষ্ট্য। ইউজার আমাদের মতো ডেভেলপার কন্সোল ওপেন করে দেখবেও না যে এরর হয়েছে, আর তাই আমাদের সে এররকেও ভালো ইউজার এক্সপেরিয়েন্সের মধ্যে নিয়ে যেতে হবে। আর মূলত এইজন্যেই এই এরর হ্যান্ডেলিং এর ব্যাপারটা আসে। আমরা আজকে এটা নিয়েই আলোচনা করবো।</p>\n<p class=\"graf graf--p\">এখন আমাদের অ্যাপ্লিকেশনে কিছু কোড বা ফাংশন থাকতে পারে যেগুলো এরর ফলাফল দেখাতে পারে। আর তাই ঐসব কোডগুলোর ক্ষেত্রে একটু সতর্ক হয়ে হ্যান্ডল করতে হয়। আর সেজন্যেই জাভাস্ক্রিপ্ট এ কিছু স্টেটমেন্ট আছে এরকম পরিস্থিতি সামাল দেওয়ায়র জন্যে।</p>\n<p class=\"graf graf--p\">প্রথমেই আমরা একদম সাধারণ একটা কোডে কোনোরকম এরর হ্যান্ডল না করে দেখি সেটা আমাদের কেমন আউটপুট দেয়ঃ</p>\n<pre class=\"graf graf--pre\">console.aula('This is an error');</pre>\n<p class=\"graf graf--p\">এটা একদম কড়াকড়িভাবে এরর দিবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*fN22x5OO7zdNxakIwWFtOA.png?resize=417%2C61&#038;ssl=1\" data-image-id=\"1*fN22x5OO7zdNxakIwWFtOA.png\" data-width=\"417\" data-height=\"61\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন এই এররটা হয়তো কোডে তেমন ইফেক্ট ফেলবে না। কিন্তু আমাদের আসল ওয়েব অ্যাপ্লিকেশনে হয়তো কোনো এররের কারণে পুরো অ্যাপ্লিকেশনই ঠিকমতো কাজ করা বন্ধ করে দিতে পারে, ক্র্যাশ করতে পারে। আর তাই আমাদের এরকম লাল লাল এররগুলোকে হ্যান্ডল করতে হয় যাতে ওয়েব অ্যাপ্লিকেশন এরকম এরর সম্পর্কে আগেভাগে তৈরী থাকতে পারে। তাহলে অ্যাপ্লিকেশন ঠিকঠাক মতো কাজ করতে পারবে। এরর আসলেও সেটা হ্যান্ডল করে ফেলায় আর ক্র্যাশ করবে না। আর তাই নিচের এগুলো দিয়ে আমরা এরর হ্যান্ডল করতে পারিঃ</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">১। </strong><code class=\"markup--code markup--p-code\"><strong class=\"markup--strong markup--p-strong\">try</strong></code><strong class=\"markup--strong markup--p-strong\"> স্টেটমেন্টঃ</strong> যেখানে এররের সম্ভাবনা আছে, সেটা পুরোটাকে এই <code class=\"markup--code markup--p-code\">try</code> ব্লকের ভিতরে রাখতে হয়। যদি কোড ঠিকঠাক রান করে তাহলে তো করলোই। কিন্তু যদি কোনো এরর আসে, তাহলে এটা নিজে থেকেই একটা এরর থ্রো করবেঃ</p>\n<pre class=\"graf graf--pre\">try {\r\n   console.aula('This is an error');\r\n}</pre>\n<p class=\"graf graf--p\">এখন শুধু এই ট্রাই ব্লকের কোড একা রান করবে না, এর সাথে আপনার আরেকটা স্টেটমেন্টও থাকা লাগবে।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">২। </strong><code class=\"markup--code markup--p-code\"><strong class=\"markup--strong markup--p-strong\">catch</strong></code><strong class=\"markup--strong markup--p-strong\"> স্টেটমেন্টঃ</strong> ক্যাচ স্টেটমেন্ট এর কাজ হচ্ছে সেই থ্রো করা এররটাকে ক্যাচ করা। যদি কোনো এরর না হয় তাহলে এই ব্লকের ভিতরের কোড কাজ করবে না। মূলত কোনো এরর আসলে এখানেই সেটাকে হ্যান্ডল করতে হয়। আগের ট্রাই এর উদাহরণে ট্রাই স্টেটমেন্ট একা কাজ করতে পারে না, সেটার সাথে এই ক্যাচ স্টেটমেন্টও লাগবেঃ</p>\n<pre class=\"graf graf--pre\">try {\r\n   console.aula('This is an error');\r\n} catch(err) {\r\n   console.log('Do anything here');\r\n   console.log(err);\r\n}</pre>\n<p class=\"graf graf--p\">এবার দেখবেন কত সুন্দর করে আউটপুট এসেছে সরাসরি কোনো এরর না দেখিয়েঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*7nw5Lc_pjP3Yuopr3IbGUg.png?resize=334%2C155&#038;ssl=1\" data-image-id=\"1*7nw5Lc_pjP3Yuopr3IbGUg.png\" data-width=\"334\" data-height=\"155\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">catch</code> ব্লকে এরকম এরর প্রিন্ট করার জন্যে নয় বরং আপনি এখানে ইউজারকে সুন্দর করে কিছু লেখা বা ম্যাসেজ দিতে পারেন যে আসলে এভাবে হচ্ছে না অন্যকিছু করতে হবে। মোট কথা এখানে এররটা হ্যান্ডল করে ইউজারকে ভালো এক্সপেরিয়েন্স দেওয়া যাবে।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৩। </strong><code class=\"markup--code markup--p-code\"><strong class=\"markup--strong markup--p-strong\">throw</strong></code><strong class=\"markup--strong markup--p-strong\"> স্টেটমেন্টঃ</strong> এই স্টেটমেন্ট দিয়ে আমরা কাস্টম এরর থ্রো করতে পারি। আমাদের কোডে কোনো কন্ডিশনের উপরে ভিত্তি করে আমরা কাস্টম এরর দেখাতে পারিঃ</p>\n<pre class=\"graf graf--pre\">const age = 17;\r\ntry {\r\n   if(age &lt; 18) {\r\n      throw 'You are too young';\r\n   } else {\r\n      console.log('You are adult');\r\n   }\r\n} catch(err) {\r\n   console.log(err);\r\n}</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*ArDAqNEALG6IGaj5_qrXXw.png?resize=292%2C179&#038;ssl=1\" data-image-id=\"1*ArDAqNEALG6IGaj5_qrXXw.png\" data-width=\"292\" data-height=\"179\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৪। </strong><code class=\"markup--code markup--p-code\"><strong class=\"markup--strong markup--p-strong\">finally</strong></code><strong class=\"markup--strong markup--p-strong\"> স্টেটমেন্টঃ</strong> এই স্টেটমেন্ট এর ভিতরের কোড সবসময়েই রান করবে, এরর হউক বা নাই হউকঃ</p>\n<pre class=\"graf graf--pre\">try {\r\n   throw 'An error'\r\n} catch(err) {\r\n   console.log(err);\r\n} finally {\r\n   console.log('I will run always');\r\n}</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*CVLD_FJ6GoBE_KlkiAUsFg.png?resize=295%2C155&#038;ssl=1\" data-image-id=\"1*CVLD_FJ6GoBE_KlkiAUsFg.png\" data-width=\"295\" data-height=\"155\" data-recalc-dims=\"1\" /></figure>\n<pre class=\"graf graf--pre\">try {\r\n   console.log('No error');\r\n} catch(err) {\r\n   console.log(err);\r\n} finally {\r\n   console.log('I will run always');\r\n}</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*PHAbEpO3pfFaocQT8k92YQ.png?resize=291%2C155&#038;ssl=1\" data-image-id=\"1*PHAbEpO3pfFaocQT8k92YQ.png\" data-width=\"291\" data-height=\"155\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এই <code class=\"markup--code markup--p-code\">finally</code> সাধারণত ব্যবহার করা হয় আমাদের একটা কোড ট্রাই করার পর কোনো বাধ্যতামূলক অ্যাকশন নেওয়ার জন্যে। কোড রান করলে তো করলোই, এরর দিলে সেটা তো <code class=\"markup--code markup--p-code\">catch</code> করা হচ্ছেই, কিন্তু আমার সব কাজ শেষ করার পর অমুক কাজটা অবশ্যই করতে হবে। আর এরকম পরিস্থিতিতেই এই <code class=\"markup--code markup--p-code\">finally</code> কাজে লাগে।</p>\n<h4 class=\"graf graf--h4\"><strong class=\"markup--strong markup--h4-strong\">এরর অবজেক্টঃ</strong></h4>\n<p class=\"graf graf--p\">জাভাস্ক্রিপ্ট এ বিল্ট-ইন এরর অবজেক্টও আছে। আর অবজেক্ট মানে সেটার প্রপার্টিও আছে। আমরা চাইলে এরকম এরর অবজেক্ট তৈরী করতে পারি <code class=\"markup--code markup--p-code\">Error()</code> কন্সট্রাকটর মেথড থেক। আমরা একটু আগে <code class=\"markup--code markup--p-code\">throw</code> ব্যবহার করে কাস্টম একটা টেক্সট থ্রো করেছিলাম এরর দেখানোর জন্যে। কিন্তু এররকে আরো বাস্তব রূপ দেওয়ার জন্যে এই <code class=\"markup--code markup--p-code\">Error()</code> কন্সট্রাকটর ব্যবহার করে আরো সুন্দর এরর অবজেক্ট তৈরী করা যাবে।</p>\n<p class=\"graf graf--p\">তো এটা দিয়ে এভাবে কাস্টমভাবে আরো বাস্তবসম্মত এরর তৈরী করা যাবেঃ</p>\n<pre class=\"graf graf--pre\">const anError = new Error('This is a error object');</pre>\n<p class=\"graf graf--p\">এখন যদি আমাদের নতুন বানানো এই <code class=\"markup--code markup--p-code\">anError</code> এরর অবজেক্ট টা দেখেন রান করেঃ</p>\n<pre class=\"graf graf--pre\">console.log(anError);</pre>\n<p class=\"graf graf--p\">এটা সত্যিকারের এররের মতো করে এসেছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*esjjLavSZaBSj4HfvhL4nQ.png?resize=263%2C57&#038;ssl=1\" data-image-id=\"1*esjjLavSZaBSj4HfvhL4nQ.png\" data-width=\"263\" data-height=\"57\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন এটা কোথায় কাজে লাগাবো? হ্যা, উপরের <code class=\"markup--code markup--p-code\">throw</code> তে আমরা একটা কাস্টম এরর থ্রো করেছিলাম। যদিও ঐটা জাস্ট একটা মাত্র টেক্সট ছিলো। কিন্তু এখন আমরা এই এরর কন্সট্রাক্টর মেথড ব্যবহার করে আরো সুন্দর করে এররের মতো করে এরর থ্রো করতে পারবোঃ</p>\n<pre class=\"graf graf--pre\">const ageNew = 17;\r\ntry {\r\n   if(ageNew &lt; 18) {\r\n      throw new Error('You are too young');\r\n   } else {\r\n      console.log('You are adult');\r\n   }\r\n} catch(err) {\r\n   console.log(err);\r\n}</pre>\n<p class=\"graf graf--p\">এবারেরটা সত্যিকারের এররের মতো এরর থ্রো করেছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*D4cjd-rOaT8BbAJZj6x5rA.png?resize=344%2C193&#038;ssl=1\" data-image-id=\"1*D4cjd-rOaT8BbAJZj6x5rA.png\" data-width=\"344\" data-height=\"193\" data-recalc-dims=\"1\" /></figure>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d9cbd4493204-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d9cbd4493204-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>এরর আমাদের নিত্যদিনের সঙ্গী। কোড লিখলে এরর হবেই। তবে আমরা অনেকে মনে করি এরর মানে তো এররই, এগুলোর উপর আর আমাদের কোনো কন্ট্রোল নাই। হ্যা, ব্যাপারটা আংশিক সত্য হলেও ঠিক পুরোপুরি না। তাছাড়া একটা ভালো অ্যাপ্লিকেশনে কোনো এরর আসলে সেটা ইউজারদের বুঝতে না দেওয়াটাও অন্যতম একটা বৈশিষ্ট্য। ইউজার আমাদের মতো ডেভেলপার কন্সোল ওপেন করে দেখবেও [&hellip;]</p>\n","protected":false},"author":1,"featured_media":576,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[54,50,60],"tags":[84,94,108,168,78,86,106],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/599"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=599"}],"version-history":[{"count":1,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/599/revisions"}],"predecessor-version":[{"id":600,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/599/revisions/600"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/576"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=599"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=599"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=599"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}