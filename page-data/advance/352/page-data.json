{"componentChunkName":"component---src-templates-post-page-js","path":"/advance/352","webpackCompilationHash":"9c8e12923f39949c0264","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":352,"date":"2018-07-06T14:51:49","date_gmt":"2018-07-06T14:51:49","guid":{"rendered":"https://with.zonayed.me/?p=352"},"modified":"2019-08-16T16:57:51","modified_gmt":"2019-08-16T16:57:51","slug":"%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a1%e0%a6%ad%e0%a6%be%e0%a6%a8%e0%a7%8d","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a7%87%e0%a6%8f%e0%a6%b8-%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a1%e0%a6%ad%e0%a6%be%e0%a6%a8%e0%a7%8d/","title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-divider\"></div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">জাভাস্ক্রিপ্ট এ সবচেয়ে ট্রিকি এবং কনফিউজিং একটা টপিক বা ওয়ার্ড হচ্ছে <code class=\"markup--code markup--p-code\">this</code> তবে আজকে আমি আমার এই লেখায় সেটাকে পানির মতো সোজা করে দিবো। কিন্তু তারপরেও আপনাকে প্রথম প্রথম ফিফটি-ফিফটি চান্স নিয়ে কোডে <code class=\"markup--code markup--p-code\">this</code> ইউজ করতে হবে। কয়েকবার প্র্যাকটিস করার পর, রুলসগুলো জানার পর আস্তে আস্তে <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডটা পুরোপুরি ধরতে পারবেন।</p>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">this</code> জাভাস্ক্রিপ্ট এ একটা রিসার্ভড কীওয়ার্ড, মানে এই নামটা আর কোনো ভ্যারিয়েবল বা ফাংশনের জন্যে ইউজ করতে পারবেন না। আর এই <code class=\"markup--code markup--p-code\">this</code> অনেকভাবে অনেকরকম জায়গায় ব্যবহার করা হয়। তাই আপনি যে প্রথমদিকেই সবজায়গায় বুঝে ফেলবেন <code class=\"markup--code markup--p-code\">this</code> টা আসলে কি ব্যাপারটা এরকম নয়। কিন্তু যদি ব্যাসিক রুলসগুলো জানা থাকে <code class=\"markup--code markup--p-code\">this</code> কিভাবে কাজ করে তাহলে আশা করি আরো বড়, জটিল কোডেও আপনার বুঝতে বেশী টাইম লাগবে না।</p>\n<p class=\"graf graf--p\">সাধারণত একটা ফাংশনকে কিভাবে কল করা হচ্ছে সেটার উপর ভিত্তি করে <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু ডিটারমাইন করা হয়। আর এটার ভ্যালু ডিটারমাইন করা হয় এক্সিকিউশনের সময়। কি? কনফিউজিং লাগছে? হ্যাঁ তাহলে আজকে থেকে সব বাদ। শুধুমাত্র নিচের এই চারটা রুলস মনে রাখবেন যেগুলো দিয়ে <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু ডিটারমাইন করা যাবেঃ</p>\n<p class=\"graf graf--p\">১। গ্লোবাল রুলস</p>\n<p class=\"graf graf--p\">২। অবজেক্ট রুলস</p>\n<p class=\"graf graf--p\">৩। স্পষ্ট রুলস</p>\n<p class=\"graf graf--p\">৪। <code class=\"markup--code markup--p-code\">new</code> কীওয়ার্ড রুলস</p>\n<blockquote class=\"graf graf--blockquote\"><p><em class=\"markup--em markup--blockquote-em\">আমার এখানে বলা রুলসগুলো অফিশিয়ালভাবে কোথাও বলা নেই, কিন্তু </em><code class=\"markup--code markup--blockquote-code\"><em class=\"markup--em markup--blockquote-em\">this</em></code><em class=\"markup--em markup--blockquote-em\"> কীওয়ার্ড বুঝতে এই রুলসগুলো বেশ কাজে লাগে তাই আমি এভাবে লিখেছি…</em></p></blockquote>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">১। গ্লোবাল রুলসঃ </strong>যদি আপনি <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ড যেকোনো জায়গায় ইউজ করেন, আপনার কাস্টমভাবে ডিফাইন করা কোনো অবজেক্ট এর ভিতরে ছাড়া, তাহলে সেটা সবসময় আপনার গ্লোবাল অবজেক্টকে ইন্ডিকেট করবে। ব্রাউজারের ক্ষেত্রে গ্লোবাল অবজেক্ট হচ্ছে <code class=\"markup--code markup--p-code\">window</code> অবজেক্ট। অন্য এনভারোমেন্ট এ যেমন নোড জেএস এ গ্লোবাল অবজেক্ট হচ্ছে <code class=\"markup--code markup--p-code\">global</code></p>\n<p class=\"graf graf--p\">ধরুন আমরা <code class=\"markup--code markup--p-code\">this</code> কে <code class=\"markup--code markup--p-code\">console.log</code> করলামঃ</p>\n<pre class=\"graf graf--pre\">console.log(this);</pre>\n<p class=\"graf graf--p\">দেখবেন এটা <code class=\"markup--code markup--p-code\">window</code> অবজেক্টই দেখাচ্ছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*MNMZWD80bfRObUV6wIJhEA.png?resize=543%2C67&#038;ssl=1\" data-image-id=\"1*MNMZWD80bfRObUV6wIJhEA.png\" data-width=\"543\" data-height=\"67\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">আরো ভালোভাবে দেখতে এটা দিয়েও দেখতে পারেনঃ</p>\n<pre class=\"graf graf--pre\">console.log(this === window);</pre>\n<p class=\"graf graf--p\">এটা সত্য দেখাবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*WkOwUP_u5PlT-IicqBLIVg.png?resize=235%2C60&#038;ssl=1\" data-image-id=\"1*WkOwUP_u5PlT-IicqBLIVg.png\" data-width=\"235\" data-height=\"60\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">মানে সেইম জিনিসই এরা। গ্লোবাল কন্টেক্সট এ স্ট্রিক্ট(Strict Mode) মোড বা নন-স্ট্রিক্ট মোডে <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু সবসময়ই একরকম থাকবে।</p>\n<p class=\"graf graf--p\">এবার সেইমভাবে যদি আমাদের কোনো ডিফাইন করা ফাংশনের ভিতরেও <code class=\"markup--code markup--p-code\">this</code> ইউজ করি, তাহলে সেটার ভ্যালু কি হবে সেটা সম্পূর্ণ ডিপেন্ড করবে আপনি উক্ত ফাংশনটাকে কিভাবে কল করছেন সেটার উপর। এখন এখানে স্ট্রিক্ট মোড ও নন-স্ট্রিক্ট মোডে ভ্যালু ডিফারেন্ট হতে পারেঃ</p>\n<p class=\"graf graf--p\">যেমন এই উদাহরণে যদি দেখিঃ</p>\n<pre class=\"graf graf--pre\">function helloThis(){\r\n   console.log(this);\r\n}</pre>\n<pre class=\"graf graf--pre\">helloThis();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*GNAiXbWB2erZGU1v6PG2DQ.png?resize=522%2C103&#038;ssl=1\" data-image-id=\"1*GNAiXbWB2erZGU1v6PG2DQ.png\" data-width=\"522\" data-height=\"103\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখানে <code class=\"markup--code markup--p-code\">this</code> গ্লোবাল অবজেক্ট(ব্রাউজারের ক্ষেত্রে <code class=\"markup--code markup--p-code\">window</code> অবজেক্ট দেখাচ্ছে)। কারণটা আগেই বলেছি যে <code class=\"markup--code markup--p-code\">this</code> ফাংশনের ভিতরে ইউজ করা হলেও <a class=\"markup--anchor markup--p-anchor\" href=\"https://medium.com/%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82-%E0%A6%AA%E0%A6%BE%E0%A6%A4%E0%A6%BE/%E0%A6%9C%E0%A6%BE%E0%A6%AD%E0%A6%BE%E0%A6%B8%E0%A7%8D%E0%A6%95%E0%A7%8D%E0%A6%B0%E0%A6%BF%E0%A6%AA%E0%A7%8D%E0%A6%9F%E0%A6%83-%E0%A6%AC%E0%A6%BF%E0%A6%B9%E0%A7%8D%E0%A6%AF%E0%A6%BE%E0%A6%87%E0%A6%A8%E0%A7%8D%E0%A6%A1-%E0%A6%A6%E0%A7%8D%E0%A6%AF%E0%A6%BE-%E0%A6%B8%E0%A7%80%E0%A6%A8-4857f19f4059\" target=\"_blank\" rel=\"noopener\" data-href=\"https://medium.com/%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82-%E0%A6%AA%E0%A6%BE%E0%A6%A4%E0%A6%BE/%E0%A6%9C%E0%A6%BE%E0%A6%AD%E0%A6%BE%E0%A6%B8%E0%A7%8D%E0%A6%95%E0%A7%8D%E0%A6%B0%E0%A6%BF%E0%A6%AA%E0%A7%8D%E0%A6%9F%E0%A6%83-%E0%A6%AC%E0%A6%BF%E0%A6%B9%E0%A7%8D%E0%A6%AF%E0%A6%BE%E0%A6%87%E0%A6%A8%E0%A7%8D%E0%A6%A1-%E0%A6%A6%E0%A7%8D%E0%A6%AF%E0%A6%BE-%E0%A6%B8%E0%A7%80%E0%A6%A8-4857f19f4059\">গ্লোবাল এক্সিকিউশন কন্টেক্সট</a> এর কারণে সেটা গ্লোবাল অবজেক্টকেই ইন্ডিকেট করবে।</p>\n<p class=\"graf graf--p\">সেইম জিনিসটা স্ট্রিক্ট মোডে কাজ করবে নাঃ</p>\n<pre class=\"graf graf--pre\">function helloThis(){\r\n   'use strict';\r\n    console.log(this);\r\n}</pre>\n<pre class=\"graf graf--pre\">helloThis();</pre>\n<p class=\"graf graf--p\">এখানে দেখবেন আপনার রেজাল্ট <code class=\"markup--code markup--p-code\">undefined</code> আসবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*Kg8b_Y4kllDPnuifwdE6IQ.png?resize=217%2C98&#038;ssl=1\" data-image-id=\"1*Kg8b_Y4kllDPnuifwdE6IQ.png\" data-width=\"217\" data-height=\"98\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন এখানে এক মোডে কাজ করে আর আরেক মোডে না করার আসল কারণ হচ্ছে এখানে আমাদের <code class=\"markup--code markup--p-code\">‘use strict’;</code> ইউজ করায়। এই স্ট্রিক্ট মোড আসলে এসেছে ব্যাড প্র্যাক্টিস অ্যাভয়েড করার জন্যে। জাভাস্ক্রিপ্ট এ অনেক কিছু নিয়মের বাইরে পরে যায়। আমরা এখানে ফাংশনের ভিতরে <code class=\"markup--code markup--p-code\">this</code> চাচ্ছি। এখন স্বভাবতই এটা ফাংশন কলের সময় একটা অবজেক্ট খুঁজবে। কিন্তু পাবে গ্লোবাল অবজেক্ট (ব্রাউজারের ক্ষেত্রে <code class=\"markup--code markup--p-code\">window</code>), যেহেতু আমরা জানি বাইরের সবকিছুই গ্লোবাল অবজেক্ট এর আন্ডারে। আর তাই যখন আমরা নন-স্ট্রিক্ট মোডে রেজাল্ট দেখি, তখন গ্লোবাল অবজেক্টই দেখি। কিন্তু স্ট্রিক্ট মোড ইউজ করায় আর সেটা হচ্ছে না। এটা স্বভাবতই ঐ ফাংশনের ভিতরে কল করায় একটা অবজেক্ট খুঁজবে। কিন্তু পাবে গ্লোবাল অবজেক্ট(<a class=\"markup--anchor markup--p-anchor\" href=\"https://medium.com/%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82-%E0%A6%AA%E0%A6%BE%E0%A6%A4%E0%A6%BE/%E0%A6%9C%E0%A6%BE%E0%A6%AD%E0%A6%BE%E0%A6%B8%E0%A7%8D%E0%A6%95%E0%A7%8D%E0%A6%B0%E0%A6%BF%E0%A6%AA%E0%A7%8D%E0%A6%9F%E0%A6%83-%E0%A6%AC%E0%A6%BF%E0%A6%B9%E0%A7%8D%E0%A6%AF%E0%A6%BE%E0%A6%87%E0%A6%A8%E0%A7%8D%E0%A6%A1-%E0%A6%A6%E0%A7%8D%E0%A6%AF%E0%A6%BE-%E0%A6%B8%E0%A7%80%E0%A6%A8-4857f19f4059\" target=\"_blank\" rel=\"noopener\" data-href=\"https://medium.com/%E0%A6%AA%E0%A7%8D%E0%A6%B0%E0%A7%8B%E0%A6%97%E0%A7%8D%E0%A6%B0%E0%A6%BE%E0%A6%AE%E0%A6%BF%E0%A6%82-%E0%A6%AA%E0%A6%BE%E0%A6%A4%E0%A6%BE/%E0%A6%9C%E0%A6%BE%E0%A6%AD%E0%A6%BE%E0%A6%B8%E0%A7%8D%E0%A6%95%E0%A7%8D%E0%A6%B0%E0%A6%BF%E0%A6%AA%E0%A7%8D%E0%A6%9F%E0%A6%83-%E0%A6%AC%E0%A6%BF%E0%A6%B9%E0%A7%8D%E0%A6%AF%E0%A6%BE%E0%A6%87%E0%A6%A8%E0%A7%8D%E0%A6%A1-%E0%A6%A6%E0%A7%8D%E0%A6%AF%E0%A6%BE-%E0%A6%B8%E0%A7%80%E0%A6%A8-4857f19f4059\">গ্লোবাল এক্সিকিউশন কন্টেক্সট</a> এর কারণে) <code class=\"markup--code markup--p-code\">window.helloThis()</code>, যেটা হয়তো আমরা চাচ্ছি না। আমরা কোনো গ্লোবাল অবজেক্ট এর আন্ডারে <code class=\"markup--code markup--p-code\">window.helloThis()</code> চাচ্ছি না, বরং আমরা শুধুমাত্র <code class=\"markup--code markup--p-code\">helloThis()</code> চাচ্ছি। তাই সেটা <code class=\"markup--code markup--p-code\">undefined</code> দেখাবে। এখন এখান থেকেই কন্সট্রাকটর ফাংশনের আইডিয়া আসছে, আর সেই সাথে <code class=\"markup--code markup--p-code\">new</code> কীওয়ার্ডের। যেটা আমাদের চার নাম্বার রুলস এ পড়বে। তাই এ সম্পর্কে বিস্তারিত পরে আরেকটা পর্বে আলোচনা করা হবে।</p>\n<p class=\"graf graf--p\">আর অনেকসময় দেখবেন এভাবে একটা ভ্যারিয়েবল নিলেও সেটা কাজ করে অন্যান্য গ্লোবাল ভ্যারিয়েবলের মতোইঃ</p>\n<pre class=\"graf graf--pre\">function unNamed() {\r\n   this.name = 'Zonayed Ahmed';\r\n}</pre>\n<pre class=\"graf graf--pre\">unNamed();</pre>\n<p class=\"graf graf--p\">এখন এই ফাংশনের বাইরে <code class=\"markup--code markup--p-code\">name</code> নামে কোনো ভ্যারিয়েবল কল করলে দেখবেন সেটা কাজ করছে!</p>\n<pre class=\"graf graf--pre\">console.log(name);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*662cSLOxDF6dezVcI48oUg.png?resize=242%2C123&#038;ssl=1\" data-image-id=\"1*662cSLOxDF6dezVcI48oUg.png\" data-width=\"242\" data-height=\"123\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কারণটা কি? হ্যাঁ কারণ হচ্ছে আপনি যখন ফাংশন এর ভিতরে <code class=\"markup--code markup--p-code\">this.name</code> লিখলেন এবং সেই ফাংশনটা গ্লোবাল কন্টেক্সট এ কল করলেন তখন এই <code class=\"markup--code markup--p-code\">this.name </code>আসলে গ্লোবাল অবজেক্ট এর আন্ডারে <code class=\"markup--code markup--p-code\">name</code> এ অ্যাসাইন(<code class=\"markup--code markup--p-code\">window.name</code>) হয়ে যাচ্ছে। তাই সিম্পলি আপনি এটা বাইরে যেকোনো জায়গায় অ্যাক্সেস পাচ্ছেন। <strong class=\"markup--strong markup--p-strong\"><em class=\"markup--em markup--p-em\">‘strict mode’ এ এটা কাজ করবে না।</em></strong></p>\n<p class=\"graf graf--p\">এবার কাস্টমভাবে ডিফাইন করা অবজেক্ট এর ভিতরে যদি <code class=\"markup--code markup--p-code\">this</code> ইউজ করি তাহলে কি হবে? হ্যাঁ তাহলে আমাদের দ্বিতীয় রুলস চলে আসবে।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">২। অবজেক্ট রুলসঃ</strong> এখন কাস্টমভাবে কোনো অবজেক্ট ডিফাইন করে সেটার ভিতর <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ড ইউজ করলে সেটার ভ্যালু আর গ্লোবাল অবজেক্টকে ইন্ডিকেট করবে না। এখানে এটার ভ্যালু চেঞ্জ হয়ে যাবে।</p>\n<p class=\"graf graf--p\">আমরা এভাবে কাস্টমভাবে অবজেক্ট ডিফাইন করিঃ</p>\n<pre class=\"graf graf--pre\">var myCustomObj = {\r\n   name: 'Zonayed Ahmed',\r\n   age: 21,\r\n   job: 'Student'\r\n}</pre>\n<p class=\"graf graf--p\">এখানে <code class=\"markup--code markup--p-code\">myCustomObj</code> হচ্ছে কাস্টমভাবে ডিফাইনকৃত অবজেক্ট। এটার ভিতরে <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের ভ্যালু চেঞ্জ হয়ে যাবে। এখানে <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ড সবসময় কাছের কাস্টমভাবে ডিফাইনকৃত অবজেক্টটাকে ইন্ডিকেট করবে। যেমন নিচের এই অবজেক্ট টাকে রান করলেঃ</p>\n<pre class=\"graf graf--pre\">var myCustomObj = {\r\n   name: 'Zonayed Ahmed',\r\n   age: 21,\r\n   job: 'Student',\r\n   msg: function() {\r\n        console.log('My name is '+ this.name);\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এবার ভিতরের ফাংশনটাকে যদি এভাবে কল করিঃ</p>\n<pre class=\"graf graf--pre\">myCustomObj.msg();</pre>\n<p class=\"graf graf--p\">তাহলে এবার ভাবেন তো এখানে ফাংশনের ভিতরের <code class=\"markup--code markup--p-code\">console.log</code> এ <code class=\"markup--code markup--p-code\">this.name</code> কাকে ইন্ডিকেট করবে? প্রথম রুলস(গ্লোবাল রুলস) এ এটা পড়বে না, কারণ এটা একটা কাস্টমভাবে ডিফাইনকৃত অবজেক্ট এর ভিতরে রয়েছে। এখানে দ্বিতীয় রুলস(অবজেক্ট রুলস) অনুযায়ী এটা কাছের কাস্টমভাবে ডিফাইনকৃত অবজেক্ট কেই ইন্ডিকেট করবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*iSA3omClJ9S20P0snc6R5w.png?resize=347%2C186&#038;ssl=1\" data-image-id=\"1*iSA3omClJ9S20P0snc6R5w.png\" data-width=\"347\" data-height=\"186\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">সে হিসাবে <code class=\"markup--code markup--p-code\">this.name</code> <code class=\"markup--code markup--p-code\">myCustomObj</code> এর ভিতরের <code class=\"markup--code markup--p-code\">name</code> কেই ইন্ডিকেট করবে। এখন আমরা তাহলে আসলে একটা কাস্টমভাবে ডিফাইনকৃত অবজেক্ট এর ভিতরে <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের ভ্যালু কি হয় সেটা দেখবোঃ</p>\n<pre class=\"graf graf--pre\">var myCustomObj = {\r\n   name: 'Zonayed Ahmed',\r\n   age: 21,\r\n   job: 'Student',\r\n   isTrue: function() {\r\n        console.log(this === myCustomObj);\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">this</code> আর আমাদের ডিফাইনকৃত অবজেক্ট <code class=\"markup--code markup--p-code\">myCustomObj</code> কি সেইম জিনিসই?</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*-lUh_E3wQ-YY7kH9QdRyqQ.png?resize=330%2C197&#038;ssl=1\" data-image-id=\"1*-lUh_E3wQ-YY7kH9QdRyqQ.png\" data-width=\"330\" data-height=\"197\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">হ্যাঁ এটা সত্য বলছে, তার মানে এটা আমাদের কাস্টম অবজেক্ট টাকেই ইন্ডিকেট করছে এখানে।</p>\n<p class=\"graf graf--p\">এখন অবজেক্ট এর ভিতরে যদি আরেকটা অবজেক্ট থাকে আর সেখানে <code class=\"markup--code markup--p-code\">this</code> ইউজ করা হয় তাহলে কি হবে? হ্যাঁ তাহলে দেখে নেই ঐরকম একটা উদাহরনঃ</p>\n<pre class=\"graf graf--pre\">var myCustomObj = {\r\n   name: 'Zonayed Ahmed',\r\n   age: 21,\r\n   job: 'Student',\r\n   anotherObj: {\r\n      name: 'Ahmed Zonayed',\r\n      msg: function() {\r\n         console.log('My name is: ' + this.name);\r\n      }\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এখন দ্বিতীয় অবজেক্ট এর <code class=\"markup--code markup--p-code\">msg</code> ফাংশনটাকে কল করিঃ</p>\n<pre class=\"graf graf--pre\">myCustomObj.anotherObj.msg();</pre>\n<p class=\"graf graf--p\">এখন বলেন তো দেখি এখানে <code class=\"markup--code markup--p-code\">this</code> কাকে ইন্ডিকেট করবে? <code class=\"markup--code markup--p-code\">myCustomObj</code> নাকি <code class=\"markup--code markup--p-code\">anotherObj</code> কে? দ্বিতীয় রুলসটা আবার মনে করার চেষ্টা করুন। <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের ভ্যালু ডিটারমাইন করা হয় কাছের অবজেক্টটাকে দেখে। এখানে কাছের অবজেক্ট <code class=\"markup--code markup--p-code\">anotherObj</code> , তাই এখানে <code class=\"markup--code markup--p-code\">this.name</code> <code class=\"markup--code markup--p-code\">anotherObj</code> এর <code class=\"markup--code markup--p-code\">name</code> টাকেই ইন্ডিকেট করবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*6Ey0YWxJ9eUuwrc_bmPKdA.png?resize=382%2C224&#038;ssl=1\" data-image-id=\"1*6Ey0YWxJ9eUuwrc_bmPKdA.png\" data-width=\"382\" data-height=\"224\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">আরো ক্লিয়ায়লি দেখতেঃ</p>\n<pre class=\"graf graf--pre\">var myCustomObj = {\r\n   name: 'Zonayed Ahmed',\r\n   age: 21,\r\n   job: 'Student',\r\n   anotherObj: {\r\n      name: 'Ahmed Zonayed',\r\n      value: function() {\r\n         console.log(this);\r\n      }\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এখন এখানে দ্বিতীয় অবজেক্ট এর <code class=\"markup--code markup--p-code\">value</code> ফাংশনটাকে কল করলেঃ</p>\n<pre class=\"graf graf--pre\">myCustomObj.anotherObj.value();</pre>\n<p class=\"graf graf--p\">তাহলে দেখবেন এটা দ্বিতীয় অবজেক্ট অর্থাৎ <code class=\"markup--code markup--p-code\">anotherObj</code> কেই প্রিন্ট করছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*Ns2ggbMfyfTPEdn7HSFuRw.png?resize=295%2C228&#038;ssl=1\" data-image-id=\"1*Ns2ggbMfyfTPEdn7HSFuRw.png\" data-width=\"295\" data-height=\"228\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন আপনি চাইলে এখানে <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু কাস্টমভাবেই ডিফাইন করে দিতে পারবেন, কোন অবজেক্ট কে ইন্ডিকেট করবে সেটা বলে দিতে পারবেন। এখানেই আসবে তৃতীয় রুলস(স্পষ্ট রুলস)</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৩। স্পষ্ট রুলসঃ</strong> আপনারা হয়তো <code class=\"markup--code markup--p-code\">call</code>, <code class=\"markup--code markup--p-code\">bind</code>, <code class=\"markup--code markup--p-code\">apply</code> মেথডের কথা শুনেছেন। এগুলোই আসলে স্পষ্টভাবে <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের ভ্যালু সেট করতে ইউজ করা হয়। কোথাও যদি দেখেন এগুলো ইউজ হয়েছে তাহলে খুব সহজেই সেখানে <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ড কাকে ইন্ডিকেট করছে সেটা ধরে ফেলতে পারবেন। কারণ এই <code class=\"markup--code markup--p-code\">call</code>, <code class=\"markup--code markup--p-code\">bind</code>, <code class=\"markup--code markup--p-code\">apply</code> মেথডগুলো ইউজ করে প্রথম প্যারামিটারেই <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ড কাকে ইন্ডিকেট করবে সেটা সেট করা যায়। এগুলো প্রত্যেকটা নিয়ে আলাদা আলাদা পর্ব লেখা হবে তাই এখানে বিস্তারিত আলোচনা করা হবে না। তবে আগের উদাহরণটায় আমরা একটা ইউজ করে দেখবো। আমাদের অবজেক্ট টা এরকম ছিলো দেখতেঃ</p>\n<pre class=\"graf graf--pre\">var myCustomObj = {\r\n   name: 'Zonayed Ahmed',\r\n   age: 21,\r\n   job: 'Student',\r\n   anotherObj: {\r\n      name: 'Ahmed Zonayed',\r\n      value: function() {\r\n         console.log(this);\r\n      }\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এখন <code class=\"markup--code markup--p-code\">value</code> ফাংশনটাকে কল করলে এরকম প্রিন্ট হবেঃ</p>\n<pre class=\"graf graf--pre\">myCustomObj.anotherObj.value();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*dqyyZBztmLDy5afQIdnheQ.png?resize=263%2C224&#038;ssl=1\" data-image-id=\"1*dqyyZBztmLDy5afQIdnheQ.png\" data-width=\"263\" data-height=\"224\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">মানে এখানে <code class=\"markup--code markup--p-code\">this</code> <code class=\"markup--code markup--p-code\">anotherObj</code> কে ইন্ডিকেট করছে। কিন্তু আমরা যদি কাস্টমভাবে বলে দিতে চাই <code class=\"markup--code markup--p-code\">anotherObj</code> না বরং আমরা চাই এখানে <code class=\"markup--code markup--p-code\">this</code> <code class=\"markup--code markup--p-code\">myCustomObj</code> কে ইন্ডিকেট করুক তাহলে এভাবে call মেথড ইউজ করে বলে দিতে পারিঃ</p>\n<pre class=\"graf graf--pre\">var myCustomObj = {\r\n   name: 'Zonayed Ahmed',\r\n   age: 21,\r\n   job: 'Student',\r\n   anotherObj: {\r\n      name: 'Ahmed Zonayed',\r\n      value: function() {\r\n         console.log(this);\r\n      }\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এখন এখানে <code class=\"markup--code markup--p-code\">this</code> আমাদের কথামতো যাতে <code class=\"markup--code markup--p-code\">myCustomObj</code> কেই ইন্ডিকেট করে সেটা call মেথড ইউজ করে বলে দিবোঃ</p>\n<pre class=\"graf graf--pre\">myCustomObj.anotherObj.value.call(myCustomObj);</pre>\n<figure class=\"graf graf--figure\"><img src=\"https://i0.wp.com/miro.medium.com/max/476/1*FizGPzzFdk1-SvrmPZQu7g.png?w=767&#038;ssl=1\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">call</code>, <code class=\"markup--code markup--p-code\">bind</code>, <code class=\"markup--code markup--p-code\">apply</code> এই মেথডগুলো শুধুমাত্র ফাংশনের সাথে ইউজ করা যায় যেমনটা আমরা উদাহরণটায় করেছি। অন্য কোনো ডাটা টাইপ যেমন অবজেক্ট, স্ট্রিং, নাম্বার বা বুলিয়ানের সাথে ইউজ করা যাবে না। এগুলো নিয়ে বিস্তারিত পরের পর্বগুলোয় আলোচনা করা হবে। এখানে জাস্ট আমি ধারণা দিলাম। এভাবেই <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু কাস্টমভাবে বা স্পষ্টভাবে বলে দেওয়া যায়।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৪। </strong><code class=\"markup--code markup--p-code\"><strong class=\"markup--strong markup--p-strong\">new</strong></code><strong class=\"markup--strong markup--p-strong\"> কীওয়ার্ড রুলসঃ</strong> শেষ কিন্তু বহুল ব্যবহৃত আরেকটা কীওয়ার্ড <code class=\"markup--code markup--p-code\">new</code> ও <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের ভ্যালু ডিটারমাইন করতে পারে। কোথাও <code class=\"markup--code markup--p-code\">this</code> কোনোভাবে এই <code class=\"markup--code markup--p-code\">new</code> কীওয়ার্ডের আওতায় থাকলে সেটার ভ্যালুও অন্যরকম হতে পারে। এ নিয়ে আমি পরে বিস্তারিত পর্ব লিখবো। এর জন্যে আমাদের আরো কিছু কনসেপ্ট ক্লিয়ার করে নিতে হবে আগে।এখানে জাস্ট ধারণা দিয়ে রাখলাম এই কীওয়ার্ডও <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু ডিটারমাইন করতে পারে।</p>\n<p class=\"graf graf--p\">আশা করি এখন থেকে আর এই <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ড নিয়ে আর কনফিউশন সৃষ্টি হবেনা।</p>\n<p class=\"graf graf--p\">তবে সবসময় মনে রাখবেনঃ</p>\n<ul class=\"postList\">\n<li class=\"graf graf--li\">গ্লোবালি যেকোনো জায়গায়, কাস্টমভাবে তৈরীকৃত অবজেক্ট এর ভিতরে ছাড়া <code class=\"markup--code markup--li-code\">this</code> সবসময় গ্লোবাল অবজেক্টকেই ইন্ডিকেট করবে।</li>\n<li class=\"graf graf--li\">এটা নরমাল রেগুলার ফাংশন কলেও গ্লোবাল অবজেক্ট কে পয়েন্ট করে</li>\n<li class=\"graf graf--li\">এটার ভ্যালু অ্যাসাইন হয় না যতক্ষন না পর্যন্ত আপনি ডিক্ল্যেয়ারকৃত ফাংশনটাকে কল না করছেন বা এটা যেখানে ইউজ করা হয়েছে সেটাকে কল না করছেন।</li>\n</ul>\n<p class=\"graf graf--p\">তো আজকে এই পর্যন্তই, ভালো থাকবেন আর পাশের মানুষটিকে ভালো রাখবেন।</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d80d8f0cfefb-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d80d8f0cfefb-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>জাভাস্ক্রিপ্ট এ সবচেয়ে ট্রিকি এবং কনফিউজিং একটা টপিক বা ওয়ার্ড হচ্ছে this তবে আজকে আমি আমার এই লেখায় সেটাকে পানির মতো সোজা করে দিবো। কিন্তু তারপরেও আপনাকে প্রথম প্রথম ফিফটি-ফিফটি চান্স নিয়ে কোডে this ইউজ করতে হবে। কয়েকবার প্র্যাকটিস করার পর, রুলসগুলো জানার পর আস্তে আস্তে this কীওয়ার্ডটা পুরোপুরি ধরতে পারবেন। this জাভাস্ক্রিপ্ট এ একটা [&hellip;]</p>\n","protected":false},"author":1,"featured_media":354,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[54,50,60],"tags":[84,94,158,108,78,86,160,106],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/352"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=352"}],"version-history":[{"count":8,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/352/revisions"}],"predecessor-version":[{"id":717,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/352/revisions/717"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/354"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=352"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=352"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=352"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}