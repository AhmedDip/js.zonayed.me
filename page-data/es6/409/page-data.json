{"componentChunkName":"component---src-templates-post-page-js","path":"/es6/409","webpackCompilationHash":"6cfd4e5916fa0746c332","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":409,"date":"2018-07-20T12:56:57","date_gmt":"2018-07-20T12:56:57","guid":{"rendered":"https://with.zonayed.me/?p=409"},"modified":"2018-07-20T12:59:52","modified_gmt":"2018-07-20T12:59:52","slug":"%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%87%e0%a6%8f%e0%a6%b8-%e0%a7%aces6-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be-2","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a7%87%e0%a6%8f%e0%a6%b8-%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%87%e0%a6%8f%e0%a6%b8-%e0%a7%aces6-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be-2/","title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"},"content":{"rendered":"<p class=\"graf graf--p\">অ্যারে জাভাস্ক্রিপ্ট এ নতুন কিছু নয়। কিন্তু ইএস৬ এ নতুন অ্যারের কিছু মেথড এসেছে। আগেই বলেছিলাম ইএস৬ এর কাজ হচ্ছে ডেভেলপারের লাইফ ইজি করে দেওয়া। আর তাই লাইফ ইজি করতেই নতুন কিছু পাওয়ারফুল মেথড এবং সেই সাথে টেকনিক এসেছে। আজকের পর্বে আমি সেগুলো নিয়েই আলোচনা করবো।</p>\n<p class=\"graf graf--p\">জাভাস্ক্রিপ্ট এ অ্যারের মতো দেখতে আরেক ধরনের অবজেক্ট আছে নোডলিস্ট(nodeList) নামে। এখন এই নোডলিস্ট টাইপের অবজেক্ট দেখতে পুরো অ্যারের মতোই, এমনকি এটার অ্যারের মতো <code class=\"markup--code markup--p-code\">length</code> প্রপার্টিও আছে। ডম ম্যানিপুলেশনের সময় আমাদের অনেকসময় এই নোডলিস্ট টাইপের অবজেক্ট এর সাথে কাজ করতে হয়। এরা দেখতে হুবহুব অ্যারের মতো হলেও অ্যারে আর নোডলিস্ট সম্পূর্ন দুইটা ভিন্ন জিনিস। আর তাই আপনি অ্যারের মতো ভেবে, বিশেষ করে <code class=\"markup--code markup--p-code\">length</code> প্রপার্টি আছে ভেবে অ্যারের আরো অন্যান্য মেথড ইউজ করতে চাইতে পারেন। কিন্তু নোডলিস্ট আর অ্যারে একই টাইপের না হওয়ায় সেক্ষেত্রে আপনার এরর আসতে পারে। তাই এই অবস্থায় করণীয় হচ্ছে এই নোডলিস্টকে অ্যারেতে কনভার্ট করে নিয়ে তারপর কাজ করা।</p>\n<p class=\"graf graf--p\">নিচে আমাদের এই একটা ডিমো আছে। এখানে কয়েকটা বক্স আছে। সবগুলো বক্সেরই একটা কমন ক্লাশ আছে <code class=\"markup--code markup--p-code\">box-content</code> নামে।</p>\n<p class=\"codepen\" data-height=\"648\" data-theme-id=\"0\" data-slug-hash=\"zLKLJQ\" data-default-tab=\"result\" data-user=\"zonayedpca\" data-embed-version=\"2\" data-pen-title=\"Array in ES6 with.zonayed.me\">See the Pen <a href=\"https://codepen.io/zonayedpca/pen/zLKLJQ/\">Array in ES6 with.zonayed.me</a> by Zonayed Ahmed (<a href=\"https://codepen.io/zonayedpca\">@zonayedpca</a>) on <a href=\"https://codepen.io\">CodePen</a>.</p>\n<p><script async src=\"https://static.codepen.io/assets/embed/ei.js\"></script></p>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">এখন এই <code class=\"markup--code markup--p-code\">box-content</code> কে জাভাস্ক্রিপ্ট এর <code class=\"markup--code markup--p-code\">document.querySelectorAll</code> দিয়ে সিলেক্ট করলে আমরা একটা নোডলিস্ট পাবোঃ</p>\n<pre class=\"graf graf--pre\">const nodeList = document.querySelectorAll('.box-content');</pre>\n<p class=\"graf graf--p\">এখন এটার টাইপ দেখলে দেখবেন এটা একটা অবজেক্ট(নোডলিস্ট অবজেক্ট)ঃ</p>\n<pre class=\"graf graf--pre\">typeof nodeList</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*PZ7y2ooNjqOX6CfhQczdxQ.png?resize=424%2C82&#038;ssl=1\" data-image-id=\"1*PZ7y2ooNjqOX6CfhQczdxQ.png\" data-width=\"424\" data-height=\"82\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কিন্তু এটা ওপেন করলে দেখবেন এটা অনেকটা অ্যারের মতোইঃ</p>\n<pre class=\"graf graf--pre\">console.dir(nodeList);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*M-VvSnOKMYDYSQ8u1azxwA.png?resize=249%2C162&#038;ssl=1\" data-image-id=\"1*M-VvSnOKMYDYSQ8u1azxwA.png\" data-width=\"249\" data-height=\"162\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এটার এমনকি অ্যারের মতো <code class=\"markup--code markup--p-code\">length</code> প্রপার্টিও আছে, তাই নোডলিস্টকে অ্যারে ভেবে আমরা অনেকে কাজ শুরু করি, কিন্তু কাঙ্ক্ষিত ফলাফল পাই না। আরেকটু নিচে তাকালে দেখতে পাবেন এটার ডান্ডার প্রোটো <code class=\"markup--code markup--p-code\">NodeList</code> মানে এটা <code class=\"markup--code markup--p-code\">NodeList</code> থেকে মেথডগুলো ইনহেরিট করেছে, তাই আপনি অ্যারের সব মেথড পাবেন না। এটাকে নিয়ে অ্যারের মতোও কাজ করতে পারবে না। তাই অ্যারেতে কনভার্ট করার প্রয়োজন হতে পারে। ইএস৫ এ এই <code class=\"markup--code markup--p-code\">nodeList</code> কে অ্যারেতে কনভার্ট করতে চাইলেঃ</p>\n<pre class=\"graf graf--pre\">const nodeToArr = Array.prototype.slice.call(nodeList);</pre>\n<p class=\"graf graf--p\">এখন এবার এই <code class=\"markup--code markup--p-code\">nodeToArr</code> টা খুলে দেখবেন এটার মেথডগুলো Array থেকে ইনহেরিট হয়েছে। মানে এখন আপনি চাইলে অ্যারের সব মেথড ইউজ করতে পারবেন এখানেঃ</p>\n<pre class=\"graf graf--pre\">const nodeToArr = Array.prototype.slice.call(nodeList);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*xyYRTnY-xhocxeiCSMdXXg.png?resize=400%2C194&#038;ssl=1\" data-image-id=\"1*xyYRTnY-xhocxeiCSMdXXg.png\" data-width=\"400\" data-height=\"194\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">ব্যাস এভাবেই আপনি নোডলিস্টকে অ্যারেতে কনভার্ট করতে পারবেন। কিন্তু কনভার্ট করার কোডটা বেশ বড় আর কনফিউজিংও। কি হচ্ছে না হচ্ছে কিছুই বুঝা গেলো না…। তাই ইএস৬ এ এতো ঝামেলা না করে সরাসরি অ্যারের নতুন একটা মেথড এসেছে যার কাজ হচ্ছে এরকম অ্যারের মতো দেখতে অবজেক্ট কে অ্যারেতে কনভার্ট করে ফেলাঃ</p>\n<pre class=\"graf graf--pre\">const nodeToArr6 = Array.from(nodeList);</pre>\n<p class=\"graf graf--p\">ব্যাস! হয়ে গেলো আপনার কাজঃ</p>\n<pre class=\"graf graf--pre\">console.dir(nodeToArr6);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*KQp0qvK6ZE-ahuPe78Ji9g.png?resize=302%2C190&#038;ssl=1\" data-image-id=\"1*KQp0qvK6ZE-ahuPe78Ji9g.png\" data-width=\"302\" data-height=\"190\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">একটা অ্যারে থেকে প্রত্যেকটা আইটেমে লুপ করে অপারেশন করার জন্যে যদিও আমাদের স্মার্ট <code class=\"markup--code markup--p-code\">forEach</code> ,<code class=\"markup--code markup--p-code\">map</code> বা এরকম আরো অনেক মেথড আছে। কিন্তু স্পেশাল কিছু সিচুয়েশনে হয়তো এগুলো আমাদের কাজে নাও লাগতে পারে। যেমন আমরা চাইলেও <code class=\"markup--code markup--p-code\">break</code> অথবা <code class=\"markup--code markup--p-code\">continue</code> স্টেটমেন্ট ইউজ করতে পারি না <code class=\"markup--code markup--p-code\">forEach</code> , <code class=\"markup--code markup--p-code\">map</code> বা এরকম মেথডগুলোয়। তাই আমাদের এরজন্যে <code class=\"markup--code markup--p-code\">for</code> লুপ ইউজ করা লাগতে পারে।</p>\n<p class=\"graf graf--p\">ধরি আমাদের নিচে একটা অ্যারে আছেঃ</p>\n<pre class=\"graf graf--pre\">var numbers = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];</pre>\n<p class=\"graf graf--p\">এখন এখানে নাম্বার <code class=\"markup--code markup--p-code\">5</code> পর্যন্ত একটা অপারেশন করতে চাচ্ছি, তারপর <code class=\"markup--code markup--p-code\">break</code> করে দিতে চাচ্ছি। ইএস৫ এর <code class=\"markup--code markup--p-code\">for</code> লুপঃ</p>\n<pre class=\"graf graf--pre\">for(var i = 0; i &lt; numbers.length; i++) {\r\n   if(numbers[i] === 5) break;\r\n   console.log('Number printed: ' + numbers[i]);\r\n}</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*swBJw9SXio3kRq-GbgzQKA.png?resize=364%2C162&#038;ssl=1\" data-image-id=\"1*swBJw9SXio3kRq-GbgzQKA.png\" data-width=\"364\" data-height=\"162\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">অনেক কাজ করতে হলো সিম্পল একটা জিনিসের জন্যে। তাই ইএস৬ এ এটার একটা সহজ সলুশ্যান চলে এসেছেঃ</p>\n<pre class=\"graf graf--pre\">for(const number of numbers) {\r\n   if(number === 5) break;\r\n   console.log(`Number printed ${number}`);\r\n}</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*_nHTfwu9ZNIrIM1abaY1oA.png?resize=333%2C159&#038;ssl=1\" data-image-id=\"1*_nHTfwu9ZNIrIM1abaY1oA.png\" data-width=\"333\" data-height=\"159\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন একইরকমভাবে কোনো অ্যারে থেকে কোনো ইলিমেন্ট খুঁজতে চাইলে ইএস৫ এ আমাদের অনেক কোড লিখতে হয়। যেমন ধরি আমি উপরের অ্যারেটাথেকে নাম্বার <code class=\"markup--code markup--p-code\">65</code> খুজতেছি। অ্যারেতে কি আছে সেই নাম্বার, নাকি নাই সেটা জানতে চাচ্ছি। ধরি আমাদের আরেকটা অ্যারে আছেঃ</p>\n<pre class=\"graf graf--pre\">var numbers = [19, 23, 14, 56, 32, 65, 10, 45];</pre>\n<p class=\"graf graf--p\">ইএস৫ এ যা করতে হতোঃ</p>\n<pre class=\"graf graf--pre\">var findNum = numbers.map(function(theNum) {\r\n   return theNum === 65;\r\n})</pre>\n<p class=\"graf graf--p\">এখন findNum প্রিন্ট করলে দেখবেন এখানে <code class=\"markup--code markup--p-code\">65</code> যেখানে ছিলো সেটা সত্য দেখাচ্ছেঃ</p>\n<pre class=\"graf graf--pre\">console.log(findNum)</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*bHDIgRJVmheo8-xkmUJh6Q.png?resize=442%2C126&#038;ssl=1\" data-image-id=\"1*bHDIgRJVmheo8-xkmUJh6Q.png\" data-width=\"442\" data-height=\"126\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন অ্যারের <code class=\"markup--code markup--p-code\">indexOf</code> মেথড ইউজ করে এটার ইন্ডেক্স নাম্বার বের করতে পারবোঃ</p>\n<pre class=\"graf graf--pre\">findNum.indexOf(true);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*iG9jODx36JIJIpIsanKPgA.png?resize=183%2C39&#038;ssl=1\" data-image-id=\"1*iG9jODx36JIJIpIsanKPgA.png\" data-width=\"183\" data-height=\"39\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন সেইমভাবে ইন্ডেক্স নাম্বার থেকে আবার উক্ত ইলিমেন্টটাকেও খুঁজে বের করতে পারবোঃ</p>\n<pre class=\"graf graf--pre\">numbers[findNum.indexOf(true)]</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*tZm12uhuP6aOjpOBWUb8pg.png?resize=256%2C43&#038;ssl=1\" data-image-id=\"1*tZm12uhuP6aOjpOBWUb8pg.png\" data-width=\"256\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন এরকমভাবে ইন্ডেক্স নাম্বার বের করা বা আসল ইলিমেন্ট বের করা অনেকটাই হাস্যকর… এখন নতুন নতুন আরো অনেক মেথড যেমন <code class=\"markup--code markup--p-code\">filter</code> , <code class=\"markup--code markup--p-code\">some</code> , <code class=\"markup--code markup--p-code\">every</code> ইত্যাদি ইত্যাদি চলে আসছে। কিন্তু তাও আমি দেখালাম ব্যাপারগুলো গভীরভাবে অনুধাবন করার জন্যে।</p>\n<p class=\"graf graf--p\">এখন গেলো তো ইএস৫ এর কোড, কিন্তু ইএস৬ এ সেইম কাজের জন্যে, মানে ইন্ডেক্স নাম্বার খোঁজার জন্যে নতুন অ্যারের মেথড এসেছে। যেমন ঠিক উপরের অ্যারে থেকে নাম্বার <code class=\"markup--code markup--p-code\">65</code> এর ইন্ডেক্স নাম্বার খুঁজতে চাইলেঃ</p>\n<pre class=\"graf graf--pre\">numbers.findIndex(number =&gt; number === 65);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*legRjb_mj4Y0wuwRCIkZWA.png?resize=333%2C43&#038;ssl=1\" data-image-id=\"1*legRjb_mj4Y0wuwRCIkZWA.png\" data-width=\"333\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">তো আজকে এই পর্যন্তই, আশা করি অ্যারে নিয়ে কাজ করতে আর বেশী লাইনের কোড লিখতে হবে না। একলাইনেই সব কাজ সেরে ফেলা যাবে এখন থেকে।</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d7fc463d19ab-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d7fc463d19ab-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>অ্যারে জাভাস্ক্রিপ্ট এ নতুন কিছু নয়। কিন্তু ইএস৬ এ নতুন অ্যারের কিছু মেথড এসেছে। আগেই বলেছিলাম ইএস৬ এর কাজ হচ্ছে ডেভেলপারের লাইফ ইজি করে দেওয়া। আর তাই লাইফ ইজি করতেই নতুন কিছু পাওয়ারফুল মেথড এবং সেই সাথে টেকনিক এসেছে। আজকের পর্বে আমি সেগুলো নিয়েই আলোচনা করবো। জাভাস্ক্রিপ্ট এ অ্যারের মতো দেখতে আরেক ধরনের অবজেক্ট আছে [&hellip;]</p>\n","protected":false},"author":1,"featured_media":323,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[54,50,60],"tags":[84,154,150,94,108,78,152,156,86,106],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/409"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=409"}],"version-history":[{"count":3,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/409/revisions"}],"predecessor-version":[{"id":412,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/409/revisions/412"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/323"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=409"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=409"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=409"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}