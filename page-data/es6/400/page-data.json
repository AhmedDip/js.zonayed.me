{"componentChunkName":"component---src-templates-post-page-js","path":"/es6/400","webpackCompilationHash":"6b77de058c2721301f28","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":400,"date":"2018-07-11T14:00:29","date_gmt":"2018-07-11T14:00:29","guid":{"rendered":"https://with.zonayed.me/?p=400"},"modified":"2018-07-11T14:11:01","modified_gmt":"2018-07-11T14:11:01","slug":"%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%87%e0%a6%8f%e0%a6%b8-%e0%a7%aces6-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a7%87%e0%a6%8f%e0%a6%b8-%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%87%e0%a6%8f%e0%a6%b8-%e0%a7%aces6-%e0%a6%85%e0%a7%8d%e0%a6%af%e0%a6%be/","title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-divider\"></div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">জাভাস্ক্রিপ্ট এর ইএস৬ এ নতুন আরেক সংযোজন হচ্ছে অ্যারো ফাংশন। অনেকের কাছে ফ্যাট অ্যারো(Fat Arrow) ফাংশন বলেও পরিচিত। এটা আসলে নতুন কিছু নয়, জাস্ট সিন্ট্যাক্টিক্যালি দেখতে সুন্দর এবং অনেকটা ক্লিন। প্রোগ্রামিং ল্যাংগুয়েজের ওয়ার্ল্ডে সিন্ট্যাক্টিক শুগ্যার(Syntactic Sugar) বলে একটা কথা আছে। এর মানে হচ্ছে দেখতে সুন্দর লাগে, ক্লিন মনে হয় এরকম সিনট্যাক্স। যদিও অ্যারো ফাংশনের ফাংশানালিটি <a href=\"https://with.zonayed.me/%e0%a6%ac%e0%a7%8d%e0%a6%b2%e0%a6%97/%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f%e0%a6%83-%e0%a6%ab%e0%a6%be%e0%a6%82%e0%a6%b6%e0%a6%a8-%e0%a6%a8%e0%a6%bf%e0%a7%9f/\">ইএস৫ এর ফাংশনের</a> মতোই অনেকটা, কিন্তু কিছু পার্থক্য আছে। সেগুলো আমি একটা একটা করে এই পর্বে আলোচনা করবো।</p>\n<p class=\"graf graf--p\">ইএস৫ এ ফাংশন এক্সপ্রেশন আমরা এভাবে লিখিঃ</p>\n<pre class=\"graf graf--pre\">var aFunc = function() {\r\n   console.log('A Demo ES5 Function Expression');\r\n}</pre>\n<p class=\"graf graf--p\">এবার এই ফাংশনকে কল করলেঃ</p>\n<pre class=\"graf graf--pre\">aFunc();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*Gur52SEDmEAOJELiS6W63w.png?resize=368%2C109&#038;ssl=1\" data-image-id=\"1*Gur52SEDmEAOJELiS6W63w.png\" data-width=\"368\" data-height=\"109\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন সেই ফাংশনটাকেই অ্যারো ফাংশনে লিখলেঃ</p>\n<pre class=\"graf graf--pre\">const aFunc6 = () =&gt; console.log('A Demo ES6 Arrow Function');</pre>\n<p class=\"graf graf--p\">এবার এই ফাংশন রান করাতে চাইলেঃ</p>\n<pre class=\"graf graf--pre\">aFunc6();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*-MWCIOSpC2uC4azsSrzgwQ.png?resize=462%2C99&#038;ssl=1\" data-image-id=\"1*-MWCIOSpC2uC4azsSrzgwQ.png\" data-width=\"462\" data-height=\"99\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখানে দেখুন এদের মধ্যে পার্থক্যগুলো। ইএস৬ এর অ্যারো ফাংশনে আমাদের <code class=\"markup--code markup--p-code\">function</code> কীওয়ার্ড লাগতেছে না। আবার অন্যদিকে নতুন একটা সিনট্যাক্স <code class=\"markup--code markup--p-code\">=&gt;</code> লাগতেছে। এজন্যেই এটাকে অ্যারো ফাংশন বলা হয়। আর কোড অনেকটাই ক্লিন মনে হচ্ছে অ্যারো ফাংশনের বেলায়। যে জায়গায় ইএস৫ এর ফাংশনে কয়েকলাইন লিখতে হয়েছে, বা আমাদের <code class=\"markup--code markup--p-code\">{}</code> এই ব্র্যাকেটসগুলো ইউজ করতে হয়েছে, সেখানে অ্যারো ফাংশনের বেলায় লাগতেছে না। অ্যারো ফাংশন অনেকটাই স্মার্ট। নিচে কিছু উদাহরণ দিয়ে অ্যারো ফাংশনের স্মার্টনেস দেখানো হলো।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">অটোম্যাটিক রিটার্নঃ</strong> ধরি আমাদের এরকম একটা অ্যারে আছেঃ</p>\n<pre class=\"graf graf--pre\">const dob = [1996, 1986, 2017, 1989];</pre>\n<p class=\"graf graf--p\">এখন আমি <a href=\"https://with.zonayed.me/bn/%E0%A6%AC%E0%A7%8D%E0%A6%B2%E0%A6%97/%E0%A6%A8%E0%A6%BF%E0%A6%A4%E0%A7%8D%E0%A6%AF%E0%A6%A6%E0%A6%BF%E0%A6%A8%E0%A7%87%E0%A6%B0-%E0%A6%9C%E0%A6%BE%E0%A6%AD%E0%A6%BE%E0%A6%B8%E0%A7%8D%E0%A6%95%E0%A7%8D%E0%A6%B0%E0%A6%BF%E0%A6%AA-2/\"><code class=\"markup--code markup--p-code\">map()</code> ইউজ করে</a> প্রত্যেকটার জন্যে বর্তমান বয়স বের করতে চাই। মানে এখানে থাকা বছরের সাথে আমাদের বর্তমান বছর(এই লেখার সময় 2018) তুলনা করে কার কতো বয়স সেটার আরেকটা অ্যারে করতে চাই। প্রথমে ইএস৫ এঃ</p>\n<pre class=\"graf graf--pre\">const currentAge5 = dob.map(function(oneDob) {  \r\n   return 2018 - oneDob;\r\n})</pre>\n<p class=\"graf graf--p\">এবার <code class=\"markup--code markup--p-code\">currentAge5</code> এ আমরা সবার বর্তমান বয়সের আরেকটা অ্যারে পাবো। map() কিভাবে কাজ করে না জেনে থাকলে <a href=\"https://with.zonayed.me/bn/%E0%A6%AC%E0%A7%8D%E0%A6%B2%E0%A6%97/%E0%A6%A8%E0%A6%BF%E0%A6%A4%E0%A7%8D%E0%A6%AF%E0%A6%A6%E0%A6%BF%E0%A6%A8%E0%A7%87%E0%A6%B0-%E0%A6%9C%E0%A6%BE%E0%A6%AD%E0%A6%BE%E0%A6%B8%E0%A7%8D%E0%A6%95%E0%A7%8D%E0%A6%B0%E0%A6%BF%E0%A6%AA-2/\">এখান থেকে</a> দেখে নিতে পারেন।</p>\n<pre class=\"graf graf--pre\">currentAge5;</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*QUOgTgqvykx9APVbt0-L6g.png?resize=337%2C117&#038;ssl=1\" data-image-id=\"1*QUOgTgqvykx9APVbt0-L6g.png\" data-width=\"337\" data-height=\"117\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন সেইম কোডটা যদি আমি ইএস ৬ এর আরো ফাংশন দিয়ে লিখিঃ</p>\n<pre class=\"graf graf--pre\">const currentAge6 = dob.map(oneDob =&gt; 2018 - oneDob);</pre>\n<p class=\"graf graf--p\">এবার এটা প্রিন্ট করলে সেইম রেজাল্টই আসবেঃ</p>\n<pre class=\"graf graf--pre\">currentAge6;</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*9sSvRMEVGc6Sik9LCM76aQ.png?resize=399%2C82&#038;ssl=1\" data-image-id=\"1*9sSvRMEVGc6Sik9LCM76aQ.png\" data-width=\"399\" data-height=\"82\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন এখানে দেখেন অ্যারো ফাংশন ইউজ করাতে কোড কত ছোটো এবং ক্লিন দেখাচ্ছে। আরো একটা জিনিস খেয়াল করবেন। অ্যারো ফাংশনের ক্ষেত্রে আমাদের <code class=\"markup--code markup--p-code\">return</code> ইউজ করতে হয়নি। কারণ এরকম একলাইনের এক্সপ্রেশন থাকলে, সেখানে রিটার্ণ করার মতো কিছু থাকলে, অ্যারো ফাংশন সেটাকে অটোম্যাটিক্যালি <code class=\"markup--code markup--p-code\">return</code> করে।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">একাধিক আর্গুমেন্টঃ</strong> উপরের উদাহরণে দেখবেন আমাদের শুধুমাত্র একটা আর্গুমেন্টই ছিলো। এখন আমরা জানি <code class=\"markup--code markup--p-code\">map()</code> তিনটা আর্গুমেন্ট নেয়। এখন একাধিক আর্গুমেন্ট থাকলে অ্যারো ফাংশনে আর্গুমেন্ট গুলো অবশ্যই <code class=\"markup--code markup--p-code\">()</code> ব্র্যাকেটস এর ভিতরে থাকতে হবে। এখন একটা থাকলেও সেটাকে ব্র্যাকেটস এ ঢুকাতে পারবেন, কিন্তু কোড যত কম লেখা যায় ততোই তো ভালো! আগের উদাহরণটায় দুইটা আর্গুমেন্ট থাকলেঃ</p>\n<pre class=\"graf graf--pre\">const currentAge62 = dob.map((oneDob, index) =&gt; `${index}: ${2018 - oneDob}`);</pre>\n<p class=\"graf graf--p\">এবার এটা রান করালেঃ</p>\n<pre class=\"graf graf--pre\">currentAge62;</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*0bmo9rF_AfDKBIRyvALE5Q.png?resize=543%2C82&#038;ssl=1\" data-image-id=\"1*0bmo9rF_AfDKBIRyvALE5Q.png\" data-width=\"543\" data-height=\"82\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">একাধিক লাইনঃ</strong> এখন আমাদের একাধিক লাইনের কোড থাকলে কি হবে? হ্যাঁ তখন আর অটো রিটার্ন হবে না, আমাদের বলে দিতে হবে <code class=\"markup--code markup--p-code\">return</code> কীওয়ার্ড ইউজ করে জাস্ট ইএস৫ এর মতোইঃ</p>\n<pre class=\"graf graf--pre\">const currentAge622 = dob.map(oneDob =&gt; {\r\n   const age = 2018 - oneDob;\r\n      return age;\r\n});</pre>\n<p class=\"graf graf--p\">এবার এটা রান করালেঃ</p>\n<pre class=\"graf graf--pre\">currentAge622;</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*mPhviavifEkyQg1HmHJAEQ.png?resize=312%2C127&#038;ssl=1\" data-image-id=\"1*mPhviavifEkyQg1HmHJAEQ.png\" data-width=\"312\" data-height=\"127\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন এখানে আরেকটা জিনিস খেয়াল করবেন। অ্যারে ফাংশনের ক্ষেত্রে আমাদের <a href=\"https://with.zonayed.me/%e0%a6%ac%e0%a7%8d%e0%a6%b2%e0%a6%97/%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f%e0%a6%83-%e0%a6%b8%e0%a7%8d%e0%a6%9f%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%9f%e0%a6%ae/\">ফাংশন এক্সপ্রেশন</a> ইউজ করতে হচ্ছে। এখন ইএস৫ এর ফাংশন এক্সপ্রেশনের ক্ষেত্রেও আমরা <a href=\"https://js.zonayed.me/js-basic/290\">হোইস্টিং</a> এর কারণে একটা ফাংশন ডিফাইন করার আগে সেটাকে কল করতে পারি না। ইএস৫ এর ফাংশন স্টেটমেন্ট এ সেটা সম্ভব ছিলো হোইস্টিং এর কারণে। আর ইএস৬ এর অ্যারো ফাংশন ইউজ করতে হলে অবশ্যই আমাদের ফাংশন এক্সপ্রেশন ইউজ করতে হবে। সেজন্যে এখানে ফাংশন ডিফাইন করার আগে কল করতে পারবেন না। যেমন ইএস৫ এর ফাংশন স্টেটমেন্ট এঃ</p>\n<pre class=\"graf graf--pre\">myName();</pre>\n<pre class=\"graf graf--pre\">function myName() {\r\n   console.log('Zonayed Ahmed');\r\n}</pre>\n<p class=\"graf graf--p\">পুরোটা কোড একসাথে রান করলে দেখবেন কাজ করছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*z65iKFaz5tl5zHjHmQ0_2w.png?resize=270%2C107&#038;ssl=1\" data-image-id=\"1*z65iKFaz5tl5zHjHmQ0_2w.png\" data-width=\"270\" data-height=\"107\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন সেইমভাবে ফাংশন এক্সপ্রেশনেঃ</p>\n<pre class=\"graf graf--pre\">myName();</pre>\n<pre class=\"graf graf--pre\">const myName = function() {\r\n   console.log('My name is Zonayed Ahmed');\r\n}</pre>\n<p class=\"graf graf--p\">এটা এরর আসবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*P1nhzw3XJKl3np-FwNSawA.png?resize=501%2C124&#038;ssl=1\" data-image-id=\"1*P1nhzw3XJKl3np-FwNSawA.png\" data-width=\"501\" data-height=\"124\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন ইএস ৬ এর অ্যারো ফাংশন যেহেতু ফাংশন এক্সপ্রেশন, তাই হোইস্টিং এর কারণে সেইমভাবেই আপনি ফাংশন ডিফাইন করার আগে সেটাকে কল করতে পারবেন নাঃ</p>\n<pre class=\"graf graf--pre\">myName6();</pre>\n<pre class=\"graf graf--pre\">const myName6 = () =&gt; console.log('My name is Zonayed');</pre>\n<p class=\"graf graf--p\">সেইমভাবে এররঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*ettA8dKt-ukQbaxU7t9WuQ.png?resize=413%2C89&#038;ssl=1\" data-image-id=\"1*ettA8dKt-ukQbaxU7t9WuQ.png\" data-width=\"413\" data-height=\"89\" data-recalc-dims=\"1\" /></figure>\n<blockquote class=\"graf graf--blockquote\"><p>এখানে আমি <code class=\"markup--code markup--blockquote-code\">const</code> ইউজ করেছি ভ্যারিয়েবল ডিক্লেয়ারেশনের বেলাতে, আপনি চাইলে <code class=\"markup--code markup--blockquote-code\">let</code> বা <code class=\"markup--code markup--blockquote-code\">var</code> যেকোনো কিছু ইউজ করতে পারবেন। এতে ফলাফলে কোনো পার্থক্য হবে না।</p></blockquote>\n<h4 class=\"graf graf--h4\">লেক্সিক্যাল(Lexical) &#8216;<code class=\"markup--code markup--h4-code\">this’</code> কীওয়ার্ডঃ</h4>\n<p class=\"graf graf--p\">এতক্ষন পর্যন্ত যা আলোচনা করলাম, এগুলো সিন্ট্যাক্টিক শ্যুগার ছাড়া তেমন কিছুই না। অ্যারো ফাংশনের সবচেয়ে বড় ডিফারেন্সটা যেখানে সেটা হচ্ছে <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের সাথে। আমরা জানি, ইএস৫ এর বেলায় একটা ফাংশন কিভাবে কল করা হচ্ছে সেটার উপর <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের ভ্যালু অনেকটা নির্ভর করে। ইএস৫ এ প্রত্যেকটা ডিফাউনকৃত ফাংশনের নিজস্ব <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু থাকে। কিন্তু ইএস৬ এর এই অ্যারো ফাংশনের নিজস্ব কোনো প্রভাব থাকে না <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের উপর। বরং এই অ্যারে ফাংশন এর আশেপাশে যেটা থাকে, ঠিক সেখানকার <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালুই অ্যারো ফাংশনের ভিতরেও থাকে।</p>\n<p class=\"graf graf--p\">যেমন আমরা এই উদাহরণটা নিলে দেখতে পাবো ভালো করে। প্রথমে ইএস৫ এর ফাংশন ইউজ করেঃ</p>\n<pre class=\"graf graf--pre\">const lex5 = {\r\n   aFunc: function() {\r\n      console.log(this);\r\n      return function() {\r\n         console.log(this);\r\n      }\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এই কোডে একটা অবজেক্ট এর ভিতরে মাল্টিপল ফাংশন রয়েছে। প্রথম ফাংশনে <code class=\"markup--code markup--p-code\">this</code> ঠিকঠাকা <code class=\"markup--code markup--p-code\">lex5</code> কেই ইন্ডিকেট করবে। কিন্তু দ্বিতীয় ফাংশন গ্লোবাল অবজেক্ট কে ইন্ডিকেট করবে। দুইটা ফাংশন কল করলেঃ</p>\n<pre class=\"graf graf--pre\">lex5.aFunc()();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*CD5Od5c7TOzNS0zRD_Bfyw.png?resize=526%2C222&#038;ssl=1\" data-image-id=\"1*CD5Od5c7TOzNS0zRD_Bfyw.png\" data-width=\"526\" data-height=\"222\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">দেখুন প্রথমটা ঠিকই এর অবজেক্ট <code class=\"markup--code markup--p-code\">lex5</code> কে ইন্ডিকেট করছে। কিন্তু ভিতরের ফাংশনটা আবার গ্লোবাল অবজেক্টকে ইন্ডিকেট করেছে। এখন ইএস৫ এর ফাংশন কলের উপর <code class=\"markup--code markup--p-code\">this</code> ভ্যালু ডিপেন্ড করায় এটা হয়েছে। কিন্তু সেইম কোড এখন ইএস৬ এর অ্যারো ফাংশন ইউজ করে করলেঃ</p>\n<pre class=\"graf graf--pre\">const lex6 = {\r\n   aFunc: () =&gt; {\r\n      console.log(this);\r\n      return () =&gt; console.log(this);\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এখন এটা রান করালে দেখবেনঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*NXR08gPCuKgvEJxR4jzbwQ.png?resize=532%2C176&#038;ssl=1\" data-image-id=\"1*NXR08gPCuKgvEJxR4jzbwQ.png\" data-width=\"532\" data-height=\"176\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এগুলো দুইটাই গ্লোবাল অবজেক্ট দেখাচ্ছে। এদের <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের উপর কোনো প্রভাবই নেই।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">আশেপাশের </strong><code class=\"markup--code markup--p-code\"><strong class=\"markup--strong markup--p-strong\">this</strong></code><strong class=\"markup--strong markup--p-strong\"> অ্যারো ফাংশনের ভিতরেও সেইমঃ</strong> যেমন সেইম এই উদাহরনটাতেই আমরা দুইটা ফাংশন মিক্স করে লিখলে দেখতে পাবোঃ</p>\n<pre class=\"graf graf--pre\">const lex56 = {\r\n   aFunc: function(){\r\n      console.log(this);\r\n      return () =&gt; console.log(this);\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এটা রান করালেঃ</p>\n<pre class=\"graf graf--pre\">lex56.aFunc()();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*b0X7YHxJG6xIRuPsB-h5lQ.png?resize=278%2C190&#038;ssl=1\" data-image-id=\"1*b0X7YHxJG6xIRuPsB-h5lQ.png\" data-width=\"278\" data-height=\"190\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">অ্যারো ফাংশনের বাইরের ইএস৫ এর ফাংশনে <code class=\"markup--code markup--p-code\">this</code> ঠিক যা ছিলো, অ্যারো ফাংশনের ভিতরেও সেইম তাই আছে। একেই অ্যারো ফাংশনের লেক্সিক্যাল <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ড বলে। আর এটা অনেক কাজের। প্রত্যেকবেলা একটা নতুন ফাংশন নিলে আগে যেখানে আমাদের এই <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের ভ্যালু কি হবে সেটা নিয়ে ভাবতে হতো এখন সেটা করতে হবে না। কারণ আমরা জানি অ্যারো ফাংশনের নিজস্ব কোনো প্রভাব নাই <code class=\"markup--code markup--p-code\">this</code> এর উপর।</p>\n<p class=\"graf graf--p\">এখন ইএস৫ এ আমরা <code class=\"markup--code markup--p-code\">this</code> কীওয়ার্ডের ভ্যালু স্পষ্টভাবে বলে দিতে পারতাম <code class=\"markup--code markup--p-code\">call()</code>, <code class=\"markup--code markup--p-code\">bind()</code> অথবা <code class=\"markup--code markup--p-code\">apply()</code> মেথড ইউজ করে। কিন্তু আমরা ইএস৬ এর অ্যারো ফাংশনে এর ভিতরের <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু এভাবে স্পষ্টভাবে বলে দিতে পারবো না। লেক্সিক্যাল স্কোপিং এর মাধ্যমে এটা এর আশেপাশে থাকা <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালুই ইউজ করবে। এটাকে এক দিক থেকে খারাপ মনে হলেও এটা আসলে অনেক ফ্লেক্সিবল, আস্তে আস্তে ইউজ করতে করতেই দেখবেন।</p>\n<p class=\"graf graf--p\">আমরা চাইলে <a href=\"https://with.zonayed.me/%e0%a6%95%e0%a6%ae%e0%a7%8d%e0%a6%aa%e0%a6%bf%e0%a6%89%e0%a6%9f%e0%a6%be%e0%a6%b0-%e0%a6%b8%e0%a6%be%e0%a6%87%e0%a6%a8%e0%a7%8d%e0%a6%b8/%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f%e0%a6%83-%e0%a6%87%e0%a6%ab%e0%a6%bf-immediately-invoked-function-expressions-ii/\">ইফির</a> সাহায্যে অ্যারো ফাংশন এভাবেও লিখতে পারিঃ</p>\n<pre class=\"graf graf--pre\">(() =&gt; {\r\n   console.log('My name is Zonayed Ahmed');\r\n})();</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*caTkKZmKzc8s_1MgqwsJDQ.png?resize=323%2C92&#038;ssl=1\" data-image-id=\"1*caTkKZmKzc8s_1MgqwsJDQ.png\" data-width=\"323\" data-height=\"92\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">আজকে এই পর্যন্তই 🙂 আশা করি অ্যারো ফাংশন নিয়ে আর কোনো কনফিউশন থাকবে না…</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d80d691c1df0-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d80d691c1df0-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>জাভাস্ক্রিপ্ট এর ইএস৬ এ নতুন আরেক সংযোজন হচ্ছে অ্যারো ফাংশন। অনেকের কাছে ফ্যাট অ্যারো(Fat Arrow) ফাংশন বলেও পরিচিত। এটা আসলে নতুন কিছু নয়, জাস্ট সিন্ট্যাক্টিক্যালি দেখতে সুন্দর এবং অনেকটা ক্লিন। প্রোগ্রামিং ল্যাংগুয়েজের ওয়ার্ল্ডে সিন্ট্যাক্টিক শুগ্যার(Syntactic Sugar) বলে একটা কথা আছে। এর মানে হচ্ছে দেখতে সুন্দর লাগে, ক্লিন মনে হয় এরকম সিনট্যাক্স। যদিও অ্যারো ফাংশনের ফাংশানালিটি [&hellip;]</p>\n","protected":false},"author":1,"featured_media":323,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[54,50,60],"tags":[84,154,150,94,108,78,152,156,86],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/400"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=400"}],"version-history":[{"count":4,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/400/revisions"}],"predecessor-version":[{"id":404,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/400/revisions/404"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/323"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=400"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=400"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=400"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}