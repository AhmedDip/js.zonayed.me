{"componentChunkName":"component---src-templates-post-page-js","path":"/daily/255","webpackCompilationHash":"6780da8aa55bacfef1d9","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":255,"date":"2018-04-02T16:21:08","date_gmt":"2018-04-02T16:21:08","guid":{"rendered":"https://with.zonayed.me/?p=255"},"modified":"2018-08-22T16:12:02","modified_gmt":"2018-08-22T16:12:02","slug":"%e0%a6%a8%e0%a6%bf%e0%a6%a4%e0%a7%8d%e0%a6%af%e0%a6%a6%e0%a6%bf%e0%a6%a8%e0%a7%87%e0%a6%b0-%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa-2","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%ac%e0%a7%8d%e0%a6%b2%e0%a6%97/%e0%a6%a8%e0%a6%bf%e0%a6%a4%e0%a7%8d%e0%a6%af%e0%a6%a6%e0%a6%bf%e0%a6%a8%e0%a7%87%e0%a6%b0-%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa-2/","title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-divider\"></div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">আমি আজকে নিত্যদিনের জাভাস্ক্রিপ্ট হিসেবে তিনটা মেথডের কথা আলোচনা করবো। এখনকার সময়ে আমার মনে হয় এই তিনটা মেথড সবচেয়ে বেশী ব্যবহৃত হয়। তাই ভাবলাম আমি এই তিনটা নিয়ে আলোচনা করি সবার সাথে।</p>\n<p class=\"graf graf--p\">এখানে তিনটা মেথডের কাজই প্রায় একই টাইপের। এরা অ্যারের, <code class=\"markup--code markup--p-code\">Array</code>র মেথড, এদের মেইন কাজ হলো অ্যাপ্লাইকৃত অ্যারের প্রত্যেকটা আইটেমের উপর একটা ফাংশন অ্যাপ্লাই করা। অনেকটা লুপের মতো কাজ করে, কিন্তু লুপের মতো অর্থহীন বা জটিল টাইপের না। প্রথমে বুঝতে হয়তো একটু সমস্যা হতে পারে। তবে একবার বুঝে গেলে তখন মনে হবে এগুলাই সবচেয়ে বেস্ট।এরা ফাংশনাল প্রোগ্রামিং এর অন্যতম উদাহরণ। আমি ফাংশনাল প্রোগ্রামিং নিয়ে আগে লিখেছি। চাইল সেটা পড়তে পারেন।</p>\n<p class=\"graf graf--p\">আপনি যদি ক্রোমের কন্সোলে লিখেনঃ</p>\n<pre class=\"graf graf--pre\">Array()</pre>\n<p class=\"graf graf--p\">এখন <code class=\"markup--code markup--p-code\">__proto__</code> এর ভিতরে দেখলে এই তিনটা মেথড খুঁজে পাবেনঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*g0kcDmZrfD2vjLFoOdU7sQ.jpeg?resize=299%2C621&#038;ssl=1\" data-image-id=\"1*g0kcDmZrfD2vjLFoOdU7sQ.jpeg\" data-width=\"299\" data-height=\"621\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখানে উল্লেখিত মেথডগুলোর মধ্যে <code class=\"markup--code markup--p-code\">map()</code> আর <code class=\"markup--code markup--p-code\">reduce()</code> প্রথম আর্গুমেন্ট হিসেবে একটা কলব্যাক ফাংশন আর দ্বিতীয় আর্গুমেন্ট হিসেবে এই কলব্যাক ফাংশনের ভিতরে <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু কি হবে সেটা সেট করা যায়। যেমন <code class=\"markup--code markup--p-code\">map()</code> এর ক্ষেত্রেঃ</p>\n<pre class=\"graf graf--pre\">anArray.map(callbackFunction, thisArg);</pre>\n<p class=\"graf graf--p\">তবে মনে রাখবেন এখানে <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু ডিটারমাইন করা আর্গুমেন্টটা অ্যারো ফাংশনে অ্যারো ফাংশনের লেক্সিক্যাল স্কোপিং এর কারণে একটু অন্যরকমভাবে কাজ করবে। এটা খুব বেশী কাজে লাগে না, তবে এরকম কিছু একটা আছে জেনে রাখা ভালো।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">ম্যাপ()ঃ</strong></p>\n<p class=\"graf graf--p\">The <code class=\"markup--code markup--p-code\"><strong class=\"markup--strong markup--p-strong\">map()</strong></code> method creates a new array with the results of calling a provided function on every element in the calling array.</p>\n<p class=\"graf graf--p\">আপনি ম্যাপ কোনো অ্যারেতে কল করলে সেটা সেই অ্যারের প্রত্যেকটা আইটেমের উপর আপনারই দেওয়া একটা ফাংশন অ্যাপ্লাই করবে, এবং সবশেষে সবগুলো আবার আরেকটা অ্যারে হিসেবে রিটার্ন করবে।</p>\n<p class=\"graf graf--p\">ধরুন আপনার কাছে একটা অ্যারে আছেঃ</p>\n<pre class=\"graf graf--pre\">var arr = [1, 2, 3, 4, 5, 6, 7, 8, 9];</pre>\n<p class=\"graf graf--p\">এখন এই অ্যারের প্রত্যেকটা আইটেমের স্কয়ার বের করতে চান। তাহলে আপনি যে যেটা করতে পারেনঃ</p>\n<pre class=\"graf graf--pre\">var anotherArr = []\r\nfor(var i = 0; i &lt; arr.length; i++) {\r\n   anotherArr.push(arr[i] * arr[i])\r\n}</pre>\n<p class=\"graf graf--p\">এখন <code class=\"markup--code markup--p-code\">anotherArr</code> তে আপনার কাঙ্খিত রেজাল্ট পাবেন। কিন্তু যদিও এটাও সঠিক, তারপরেও এখানে দেখুন আমাদের নতুন একটা অ্যারে নিতে হয়েছে। আবার আরেকটা মেথড <code class=\"markup--code markup--p-code\">push</code> ইউজ করতে হয়েছে। আর ফর এর ভিতরে আরো কতো কিছু ইউজ করতে হচ্ছে যেগুলো আসলে মিনিংলেস। কোনো অর্থই নেই। সেইম কাজটাই আপনি যদি ম্যাপ এর মাধম্যে করতে চান। প্রথমে যে ফাংশন টা আপনার প্রত্যেকটা আইটেমের উপর অ্যাপ্লাই করতে চান। আপনি চান প্রত্যেকটা আইটেমের স্কয়ারঃ</p>\n<pre class=\"graf graf--pre\">function getSquare(item) {\r\n   return item * item\r\n}</pre>\n<p class=\"graf graf--p\">এখন এই ফাংশনটা আপনার অ্যারের প্রত্যেকটা আইটেমে অ্যাপ্লাই করতে চান। এখানেই আসে <code class=\"markup--code markup--p-code\">map()</code></p>\n<pre class=\"graf graf--pre\">arr.map(getSquare)</pre>\n<p class=\"graf graf--p\">এখন আমরা জানি এটাও একটা অ্যারে রিটার্ন করে। এখন সেই অ্যারেটা কোথায় স্টর করতে হবেঃ</p>\n<pre class=\"graf graf--pre\">var newArr = arr.map(getSquare);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*0_RXsAh6AxWwl0OhgxSnGA.png?resize=323%2C320&#038;ssl=1\" data-image-id=\"1*0_RXsAh6AxWwl0OhgxSnGA.png\" data-width=\"323\" data-height=\"320\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন পুরোটাকে এভাবেও লেখা যাবেঃ</p>\n<pre class=\"graf graf--pre\">var newArr = arr.map(function(item) {\r\n   return item * item;\r\n})</pre>\n<p class=\"graf graf--p\">এই পুরোটা সেইম আগের মতোই রেজাল্ট দিবে</p>\n<p class=\"graf graf--p\">এখন এখানে দেখবেন আমরা আর্গুমেন্ট হিসেবে একটা <code class=\"markup--code markup--p-code\">item</code> ইউজ করেছি। কিন্তু এখানে map() তিনটা আর্গুমেন্ট অ্যাক্সেপ্ট করে। প্রথমটা তো দেখলামি, এটা অ্যারের প্রত্যেকটা আইটেম সিলেক্ট করে, দ্বিতীয় আর্গুমেন্ট হচ্ছে অ্যারের আইটেমের ইন্ডেক্স নাম্বার, আর তৃতীয় নাম্বার টা সবসময়ই পুরো অ্যারে দিবে।</p>\n<pre class=\"graf graf--pre\">var newArr = arr.map(function(item, index, fullArr) {\r\n    console.log('Item: ' + item + ' and index: ' + index + '. Full Array: ' + fullArr)\r\n})</pre>\n<p class=\"graf graf--p\">রেজাল্টঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*OdADtk6_AWe_gIzOe_iJBQ.png?resize=452%2C183&#038;ssl=1\" data-image-id=\"1*OdADtk6_AWe_gIzOe_iJBQ.png\" data-width=\"452\" data-height=\"183\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">আর যদি ES6 সিনট্যাক্স ইউজ করেন তাহলে সেটা কিরকম হয় দেখুনঃ</p>\n<pre class=\"graf graf--pre\">const newArr = arr.map(item =&gt; item * item);</pre>\n<p class=\"graf graf--p\">এটা সেইম রেজাল্টই দেখাবে। কতো টা কম্প্যাক আর সুন্দর দেখুন।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">ফিল্টার()ঃ</strong></p>\n<p class=\"graf graf--p\">ফিল্টার সেইম ম্যাপের মতোই কিন্তু এখানে অ্যাপ্লাইকৃত ফাংশন যদি <code class=\"markup--code markup--p-code\">true</code> রিটার্ণ করে তাহলেই সেটা নতুন অ্যারেতে স্থান পাবে, নতুবা যদি ফাংশন <code class=\"markup--code markup--p-code\">false</code> রিটার্ণ করে তাহলে সেই আইটেম অ্যারেতে স্থান পাবে না।</p>\n<p class=\"graf graf--p\">ধরুন আমি নিচের অ্যারে থেকে শুধুমাত্র জোড় নাম্বার গুলো বের করে নতুন অ্যারেতে রাখতে চাচ্ছিঃ</p>\n<pre class=\"graf graf--pre\">var arr = [1, 2, 3, 4, 5, 6, 7, 8, 9]</pre>\n<p class=\"graf graf--p\">এখন ফিল্টার মেথড অ্যাপ্লাই করে সেটা ইজিলিই করতে পারিঃ</p>\n<pre class=\"graf graf--pre\">var newArr = arr.filter(function(item) {\r\n   return item % 2 == 0\r\n})</pre>\n<p class=\"graf graf--p\">প্রত্যেকটা আইটেমের উপর ফাংশন টা অ্যপ্লাই করা হয়েছে। এবং যেটা এখানে <code class=\"markup--code markup--p-code\">true</code> রিটার্ণ করেছে, সেটাই নতুন অ্যারেতে স্থান পেয়েছে। আর যেটা <code class=\"markup--code markup--p-code\">false</code> রিটার্ণ করেছে সেটা নতুন অ্যারেতে স্থান পায় নি।</p>\n<p class=\"graf graf--p\">এখানেও আপনি চাইলে অ্যানিনোমাস ফাংশন বা বাইরে ফাংশন নিয়ে এখানে কল করতে পারবেন ম্যাপের মতোই। রেজাল্ট দেখুনঃ</p>\n<pre class=\"graf graf--pre\">newArr</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*4I90yUfl7em9vV8CcnD4PA.png?resize=200%2C56&#038;ssl=1\" data-image-id=\"1*4I90yUfl7em9vV8CcnD4PA.png\" data-width=\"200\" data-height=\"56\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">ফিল্টারও ম্যাপের মতোই তিনটা আর্গুমেন্ট অ্যাক্সেপ্ট করেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*URueAnHvZ2Mgg8AjUtwxwg.png?resize=540%2C240&#038;ssl=1\" data-image-id=\"1*URueAnHvZ2Mgg8AjUtwxwg.png\" data-width=\"540\" data-height=\"240\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">ES6 সিনট্যাক্স ইউজ করলেঃ</p>\n<pre class=\"graf graf--pre\">const newArr = arr.filter(item =&gt; item % 2 === 0);</pre>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">রিডিউস()ঃ</strong></p>\n<p class=\"graf graf--p\">রিডিউস ও ম্যাপ, ফিল্টার এর মতো হলেও এটা একটা আর্গুমেন্ট বেশী নেয়। আমরা প্রোগ্রামিং ওয়ার্ল্ড এ স্ট্যাট ভ্যারিয়েবলের কথা জানি। এর কাজ হচ্ছে কোনো কিছুর কাউন্ট করা, বা ডিটেক্ট করে রাখা কোনো অপারেশনের চলার সময়। সহজ কথায় বললে আমরা যদি কোনো অ্যারে থেকে অ্যারের সব নাম্বারের টুটাল বের চাই, তাহলে সেক্ষেত্রে রিডিউস ইউজ করে সহজেই করে ফেলতে পারি। রিডিউসে যেহেতু স্ট্যাট ভ্যারিয়েবল আছে, তাই এটাই এধরণের অপারেশনের জন্য পার্ফেক্ট চয়েজ হতে পারে।</p>\n<p class=\"graf graf--p\">ধরি অ্যারেঃ</p>\n<pre class=\"graf graf--pre\">var arr = [1, 2, 3, 4]</pre>\n<p class=\"graf graf--p\">সব আইটেমের টুটাল জানতে চাই। রিডিউস অ্যাপ্লাই করলেঃ</p>\n<pre class=\"graf graf--pre\">var total = arr.reduce(function(sum, item){\r\n   return sum += item;\r\n}, 0);</pre>\n<p class=\"graf graf--p\">এখন এটার রেজাল্ট আসবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*JjKxckPhFovaqgBS6zQvqg.png?resize=543%2C110&#038;ssl=1\" data-image-id=\"1*JjKxckPhFovaqgBS6zQvqg.png\" data-width=\"543\" data-height=\"110\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখানে অনেককিছু নতুন দেখা যাচ্ছে। হ্যা, এটা শুধুমাত্র একটা আর্গুমেন্ট শুরুর দিক হতে বেশী নিচ্ছে। যেটা হচ্ছে স্ট্যাট ভ্যারিয়েবল। আর একদম শেষে সেই স্ট্যাট ভ্যারিয়েবলের ইনিশিয়াল ভ্যালু কতো হবে সেটা সেট করে দিতে পারবেন। আমার ক্ষেত্রে জিরো দিয়েছি। আপনি ১০ দিলে ১০ থেকে শুরু হতো। রেজাল্ট আসতো ২০। আর সবশেষে এই মেথড আপনার টুটাল রিটার্ণ করতেছে, অন্যগুলোর মতো অ্যারে না, বরং টুটালটাই রিটার্ণ করবে।</p>\n<p class=\"graf graf--p\">আর বাকি সব অন্যান্য দুইটার মতোইঃ</p>\n<pre class=\"graf graf--pre\">var total = arr.reduce(function(sum, item, index, fullArr) {\r\n   console.log('Item: ' + item + ' and index: ' + index + '. Full Array: ' + fullArr + ' and sum: ' + sum);\r\n   return sum += item\r\n}, 0)</pre>\n<p class=\"graf graf--p\">ES6 সিনট্যাক্স ইউজ করলেঃ</p>\n<pre class=\"graf graf--pre\">const t = arr.reduce((sum, item) =&gt; sum += item, 0)</pre>\n<p id=\"ec91\" class=\"graf graf--p graf-after--pre\"><strong class=\"markup--strong markup--p-strong\">this এর ভ্যালু ডিটারমাইন করাঃ</strong> উপরের তিনটা মেথডের মধ্যে <code class=\"markup--code markup--p-code\">map()</code> আর <code class=\"markup--code markup--p-code\">filter()</code> এ আমরা চাইলে এদের কলব্যাক ফাংশনের ভিতরে <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু কি হবে সেটা সেট করে দিতে পারি। এটা অপশনাল আর্গুমেন্ট, কিছু না দিলে যেটা আমরা উপরে করেছি, <code class=\"markup--code markup--p-code\">this</code> তার বাই ডিফল্ট বিহ্যেভিয়ারই দেখাবে। দুইটা মেথডেই এটা একইরকমভাবে কাজ করে। আর তাই আমি শুধুমাত্র <code class=\"markup--code markup--p-code\">map()</code> দিয়ে উদাহরণ দেখাবো। ধরি আমাদের একটা অবজেক্ট আছে এরকমঃ</p>\n<pre id=\"d3a2\" class=\"graf graf--pre graf-after--p\">const anObj = {\r\n   name: 'Zawad Ahmed',\r\n   age: 1\r\n}</pre>\n<p id=\"543b\" class=\"graf graf--p graf-after--pre\">এখন ধরি আমরা একটা অ্যারের উপর কিছু অপারেশন করবো। আমি ব্যাসিক একটা অ্যারে নিলামঃ</p>\n<pre id=\"3b9c\" class=\"graf graf--pre graf-after--p\">const anoArray = [1, 2, 4, 5, 6, 7, 9, 3];</pre>\n<p id=\"06e9\" class=\"graf graf--p graf-after--pre\">এখন এটার উপর <code class=\"markup--code markup--p-code\">map()</code> চালাবো, তবে জাস্ট <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু কি আসে সেটা দেখার জন্যেঃ</p>\n<pre id=\"288d\" class=\"graf graf--pre graf-after--p\">anoArray.map(function(single, index, fullArr) {\r\n   console.log(this)\r\n})</pre>\n<p id=\"5e44\" class=\"graf graf--p graf-after--pre\">এটা কন্সোলে রান করলেঃ</p>\n<figure id=\"9f4e\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*eEv2ljCZ8qYhGfdArpN4wg.png\" data-width=\"732\" data-height=\"260\" data-action=\"zoom\" data-action-value=\"1*eEv2ljCZ8qYhGfdArpN4wg.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"25\"></canvas><img class=\"progressiveMedia-image js-progressiveMedia-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*eEv2ljCZ8qYhGfdArpN4wg.png?w=767&#038;ssl=1\" data-src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*eEv2ljCZ8qYhGfdArpN4wg.png?w=767&#038;ssl=1\" data-recalc-dims=\"1\" /></div>\n</div>\n</figure>\n<p id=\"dfb2\" class=\"graf graf--p graf-after--figure\">পরিষ্কারভাবেই এখানে <code class=\"markup--code markup--p-code\">this</code> গ্লোবাল অবজেক্ট বা <code class=\"markup--code markup--p-code\">window</code> কেই ইন্ডিকেট করছে। এখন আমরা আমাদের <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু ডিটারমাইন করতে পারে সেই আর্গুমেন্টটা ইউজ করবো আর <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালু হিসেবে আমাদের বানানো <code class=\"markup--code markup--p-code\">anObj</code>অবজেক্টটাকে ইউজ করবোঃ</p>\n<pre id=\"f4a1\" class=\"graf graf--pre graf-after--p\">anoArray.map(function(single, index, fullArr) {\r\n   console.log(this)\r\n}, anObj)</pre>\n<p id=\"b585\" class=\"graf graf--p graf-after--pre\">এটা রান করে এবার কন্সোলে দেখুনঃ</p>\n<figure id=\"a802\" class=\"graf graf--figure graf-after--p\">\n<div class=\"aspectRatioPlaceholder is-locked\">\n<div class=\"aspectRatioPlaceholder-fill\"></div>\n<div class=\"progressiveMedia js-progressiveMedia graf-image is-canvasLoaded is-imageLoaded\" data-image-id=\"1*mfoubB4__Hn8INOT-k1yjg.png\" data-width=\"725\" data-height=\"264\" data-action=\"zoom\" data-action-value=\"1*mfoubB4__Hn8INOT-k1yjg.png\" data-scroll=\"native\"><canvas class=\"progressiveMedia-canvas js-progressiveMedia-canvas\" width=\"75\" height=\"27\"></canvas><img class=\"progressiveMedia-image js-progressiveMedia-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*mfoubB4__Hn8INOT-k1yjg.png?w=767&#038;ssl=1\" data-src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*mfoubB4__Hn8INOT-k1yjg.png?w=767&#038;ssl=1\" data-recalc-dims=\"1\" /></div>\n</div>\n</figure>\n<p id=\"3e7b\" class=\"graf graf--p graf-after--figure\">আমরা আমাদের কলব্যাক ফাংশনের ভিতরে <code class=\"markup--code markup--p-code\">this</code> এর ভ্যালুই চেঞ্জ করে ফেলেছি।</p>\n<p id=\"c424\" class=\"graf graf--p graf-after--p\">এখন সেইম কাজটাই অ্যারো ফাংশনের ক্ষেত্রে আবার কাজ করবে না। কারণ অ্যারো ফাংশনে লেক্সিক্যাল স্কোপিং রয়েছে। যেটা আমরা অ্যারো ফাংশনের লেখায় বলেছিলাম।</p>\n<p id=\"1693\" class=\"graf graf--p graf-after--p graf--trailing\">এখানে উল্লেখিত উদাহরণ ছাড়াও আরো অনেক জায়গায় অনেকভাবে এই তিনটা মেথড ইউজ করা হয়। বিশ্বাস করুন এগুলো জাভাস্ক্রিপ্ট এর মধ্যে সবচেয়ে ইউজফুল মেথড আমার মতে। আমি শুধুমাত্র ব্যাসিকটা দিলাম। কারণ ব্যাসিক ক্লিয়ার থাকলে পরে যেকোন পরিস্থিতিতেই এগুলো ইউজ করতে পারবেন।</p>\n<p class=\"graf graf--p\">এখানে উল্লেখিত উদাহরণ ছাড়াও আরো অনেক জায়গায় অনেকভাবে এই তিনটা মেথড ইউজ করা হয়। বিশ্বাস করুন এগুলো জাভাস্ক্রিপ্ট এর মধ্যে সবচেয়ে ইউজফুল মেথড আমার মতে। আমি শুধুমাত্র ব্যাসিকটা দিলাম। কারণ ব্যাসিক ক্লিয়ার থাকলে পরে যেকোন পরিস্থিতিতেই এগুলো ইউজ করতে পারবেন।</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d7fac368e6c2-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d7fac368e6c2-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>আমি আজকে নিত্যদিনের জাভাস্ক্রিপ্ট হিসেবে তিনটা মেথডের কথা আলোচনা করবো। এখনকার সময়ে আমার মনে হয় এই তিনটা মেথড সবচেয়ে বেশী ব্যবহৃত হয়। তাই ভাবলাম আমি এই তিনটা নিয়ে আলোচনা করি সবার সাথে। এখানে তিনটা মেথডের কাজই প্রায় একই টাইপের। এরা অ্যারের, Arrayর মেথড, এদের মেইন কাজ হলো অ্যাপ্লাইকৃত অ্যারের প্রত্যেকটা আইটেমের উপর একটা ফাংশন অ্যাপ্লাই [&hellip;]</p>\n","protected":false},"author":1,"featured_media":557,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[50,60,8],"tags":[84,94,108,168,78,86,106,110],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/255"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=255"}],"version-history":[{"count":5,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/255/revisions"}],"predecessor-version":[{"id":556,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/255/revisions/556"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/557"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=255"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=255"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=255"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}