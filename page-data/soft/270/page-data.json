{"componentChunkName":"component---src-templates-post-page-js","path":"/soft/270","webpackCompilationHash":"bb1b708645f75543030c","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":270,"date":"2018-05-03T16:44:46","date_gmt":"2018-05-03T16:44:46","guid":{"rendered":"https://with.zonayed.me/?p=270"},"modified":"2018-07-08T11:06:12","modified_gmt":"2018-07-08T11:06:12","slug":"%e0%a6%8f%e0%a6%95-%e0%a6%aa%e0%a6%b2%e0%a6%95%e0%a7%87-gulp-js%e2%80%8a-%e2%80%8a%e0%a6%9f%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95-%e0%a6%b8%e0%a7%8d%e0%a6%ac%e0%a6%af%e0%a6%bc%e0%a6%82%e0%a6%95","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%9f%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%b8-%e0%a6%8f%e0%a6%a8%e0%a7%8d%e0%a6%a1-%e0%a6%9f%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%95%e0%a7%8d%e0%a6%b8/%e0%a6%8f%e0%a6%95-%e0%a6%aa%e0%a6%b2%e0%a6%95%e0%a7%87-gulp-js%e2%80%8a-%e2%80%8a%e0%a6%9f%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95-%e0%a6%b8%e0%a7%8d%e0%a6%ac%e0%a6%af%e0%a6%bc%e0%a6%82%e0%a6%95/","title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-divider\"></div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">Gulp JS</strong> মূলত একটা <strong class=\"markup--strong markup--p-strong\">টুলস</strong> আপনার নিত্যপ্রয়োজনীয় টাস্ককে <strong class=\"markup--strong markup--p-strong\">অটোম্যাট</strong> করার জন্যে। আমাদের ওয়েব অ্যাপ্লিকেশন বা ওয়েব ডেভেলপমেন্ট এ অনেক কাজ আছে যেগুলো বারবার করতে হয়। ধরুন আপনি SASS দিয়ে স্টাইল করতেছেন, এখন প্রত্যেকবার আপনার ফাইল দেখার জন্যে SASS ফাইলটাকে কম্পাইল করে প্লেইন CSS এ নিতে হয়। এজন্যে আপনাকে প্রয়োজনীয় কমান্ড দিয়ে কম্পাইল করতে হয়। যদিও SASS এরও অটোম্যাট(watch) কম্পাইল কমান্ড দেওয়ার অপশন আছে। কিন্তু আপনার প্রোজেক্টে এই SASS কে CSS এ নেওয়া ছাড়াও আরো এরকম অনেক কাজ থাকতে পারে। যেমন আপনি চাচ্ছেন আপনার প্রোডাকশন ভার্শনে মিনিমাইজড স্ক্রিপ্ট ফাইলগুলো থাকবে, কিন্তু ডেভেলপমেন্ট এর সময় আপনি ডেভেলপমেন্ট ফাইলই রাখবেন। কিন্তু এক্ষেত্রে ডেভেলপমেন্ট এর সময় বারবার মিনিমাইজড করে করে কাজ করা বিরক্তকর, একই সাথে আপনি ডেভেলপমেন্ট ভার্শনে মডিউল আকারে অনেকগুলো ফাইলে স্ক্রিপ্ট লিখলেন, এখন প্রোডাকশন এ চাচ্ছেন সেগুলো একসাথে করে ফেলতে। আবার যদি আপনার প্রোজেক্টে অনেক মেম্বার থাকে, তাহলে তাদেরকেও আপনার কাজগুলো করতে হবে, প্রয়োজনীয় মিনিমাইজড ভার্শন করার টুলস, SASS থেকে CSS করার টুলস, কমান্ড সবই নতুন করে ইন্সটল করা, কমান্ড দেওয়া সব করতে হবে। এটা আসলে অনেক বিরক্তকর। আপনি আপনার আসল কাজই করবেন নাকি টুলস ইন্সটলেশন আর কমান্ড দিতে দিতেই দিন শেষ করে দিবেন? অবশ্যই চাইবেন এমন কোনো টুলস যেটা সবকিছু অটোম্যাট করে দিতে পারবে। হ্যাঁ, গাল্প এর কাজ এরকম কিছুই। তাই আমি আজকে Gulp নিয়ে কথা বলবো।</p>\n<p class=\"graf graf--p\">প্রথমেই আপনার ম্যাশিনে <strong class=\"markup--strong markup--p-strong\">নোড জেএস</strong> ইন্সটল করা থাকতে হবে। এবার একটি ডিরেক্টরি নিয়ে সেখানে আমরা Gulp এর ব্যাসিকগুলো দেখবো। আপনি যে কমান্ড লাইন ইউজ করেন সেটি ওপেন করুন। একটা ডিরেক্টরি ক্রিয়েট করুন। যেখানে আপনার Gulp এর জন্যে প্রয়োজনীয় সব ফাইলগুলো থাকবে।</p>\n<pre class=\"graf graf--pre\">mkdir gulp-practice</pre>\n<pre class=\"graf graf--pre\">cd gulp-practice</pre>\n<p class=\"graf graf--p\">এবার এই ডিরেক্টরিতে npm প্রোজেক্ট ইনিশিয়েট করুনঃ</p>\n<pre class=\"graf graf--pre\">npm init</pre>\n<p class=\"graf graf--p\">সবকিছু বাই ডিফল্ট ভাবেই রাখতে পারেন, চাইলে আপনি আপনার মনমতোও দিতে পারেন। এতে কোনো ইফেক্ট পড়বে না।</p>\n<p class=\"graf graf--p\">এখন আপনার আসল <strong class=\"markup--strong markup--p-strong\">Gulp </strong>সহ <strong class=\"markup--strong markup--p-strong\">Gulp CLI </strong>ও ইন্সটল করতে হবে। এখানে <code class=\"markup--code markup--p-code\">gulp</code> <strong class=\"markup--strong markup--p-strong\">ডেভ ডিপেন্ডেন্সি</strong> আর <code class=\"markup--code markup--p-code\">gulp-cli</code> <strong class=\"markup--strong markup--p-strong\">গ্লোবাললি </strong>ইন্সটল করতে হবেঃ</p>\n<pre class=\"graf graf--pre\">npm install -g <code class=\"markup--code markup--pre-code\">gulp-cli</code></pre>\n<pre class=\"graf graf--pre\"><code class=\"markup--code markup--pre-code\">npm install --save-dev gulp</code></pre>\n<p class=\"graf graf--p\">এখন প্রোজেক্টের রুট ডিরেক্টরিতে <code class=\"markup--code markup--p-code\">gulpfile.js</code> নামে একটি ফাইল ক্রিয়েট করতে হবে যেটাতেই মূলত Gulp এর অটোম্যাট টাস্ক রানারের কোডগুলো থাকবে। অনেকটা Config ফাইলের মতোই।</p>\n<pre class=\"graf graf--pre\">touch <code class=\"markup--code markup--pre-code\">gulpfile.js</code></pre>\n<p class=\"graf graf--p\">এবার আপনার <code class=\"markup--code markup--p-code\">gulpfile.js</code> ফাইলটি আপনার পছন্দের কোড এডিটরে ওপেন করুন।</p>\n<p class=\"graf graf--p\">Gulp এ মূলত নিচের এই মেথডগুলোই বেশী ইউজ করা হয়। সবকিছু অনেকটা এগুলোর উপরেই করা হয়।</p>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">gulp.task</code> টাস্ক বানানোর জন্যে ইউজ করা হয়।</p>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">gulp.src</code> যে ফাইলের উপর অ্যাকশন নেওয়া হবে সেটার লোকেশান…</p>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">gulp.dest</code> অ্যাকশন নেওয়া ফাইলটা যেখানে সেইভ করবেন…</p>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">gulp.watch</code> কোনো ফাইলকে নজরদারীতে রাখার জন্যে, ঐ ফাইলে কিছু চ্যাঞ্জ হলেই আপনার দেওয়া টাস্ক অটোম্যাটিকভাবেই অ্যাপ্লাই হয়ে যাবে।</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<h4 class=\"graf graf--h4\">টাস্ক তৈরী করাঃ</h4>\n<p class=\"graf graf--p\"><code class=\"markup--code markup--p-code\">gulp.task</code> দিয়ে টাস্ক ক্রিয়েট করা হয়। এটা সাধারণত দুইটা আর্গুমেন্ট নেয়। প্রথমটা আপনার টাস্কের নাম এবং দ্বিতীয়টায় একটা কলব্যাক ফাংশন। এই ফাংশনের ভিতরেই আপনি কি করতে চাচ্ছেন সেগুলোর কোড লিখবেন।</p>\n<pre class=\"graf graf--pre\">gulp.task('taskName', function() {\r\n  // What do you want to do\r\n});</pre>\n<p class=\"graf graf--p\">আমরা যেহেতু <code class=\"markup--code markup--p-code\">gulp</code> ইউজ করেছি তাই এটা অবশ্যই <code class=\"markup--code markup--p-code\">require</code> করিয়ে নিতে হবেঃ</p>\n<pre class=\"graf graf--pre\">const gulp = require('gulp');</pre>\n<p class=\"graf graf--p\">যেমন খুব সিম্পলভাবে একটা টেক্সট <code class=\"markup--code markup--p-code\">console.log</code> করাতে চাইলেঃ</p>\n<pre class=\"graf graf--pre\">gulp.task('hello', function() {\r\n   console.log('Hi! This is my First Task!!');\r\n});</pre>\n<p class=\"graf graf--p\">এখন Gulp এর এই টাক্স রান করাতে আপনাকে <code class=\"markup--code markup--p-code\">gulp-cli</code> ইউজ করতে হবে। যেহেতু আমরা এটা গ্লোবাললি ইন্সটল করে নিয়েছি তাই এখন আমরা কমান্ড লাইনে <code class=\"markup--code markup--p-code\">gulp</code> কমান্ড ইউজ করতে পারবো। প্রথমে কমান্ড লাইনে <code class=\"markup--code markup--p-code\">gulp</code> লিখে তারপর আপনার টাস্কের নাম লিখতে হবে। অবশ্যই মনে রাখবেন এই কমান্ড প্রোজেক্টের রুটে বা যেখানে <code class=\"markup--code markup--p-code\">gulpfile.js</code> ফাইলটা রয়েছে সেখান থেকে রান করাতে হবে। এবার আমরা উপরের ডিমো <code class=\"markup--code markup--p-code\">console.log</code> টা রান করাবো। আপনার কমান্ড লাইনে লিখুনঃ</p>\n<pre class=\"graf graf--pre\">gulp hello</pre>\n<p class=\"graf graf--p\">তারপর এন্টার চাপলে দেখবেন আপনার লেখা প্রিন্ট হয়েছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*W2wcNfIObWjUAlmooJTPLg.png?resize=575%2C113&#038;ssl=1\" data-image-id=\"1*W2wcNfIObWjUAlmooJTPLg.png\" data-width=\"575\" data-height=\"113\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">যদিও এটা এতোটা কাজের মনে হচ্ছে না, কিন্তু কিভাবে একটা টাস্ক বানানো হয় এবং রান করাতে হয় সেটা এখন আশা করি ক্লিয়ার।</p>\n<h4 class=\"graf graf--h4\">ফাইল কপি করাঃ</h4>\n<p class=\"graf graf--p\">এখন আমাদের ডেভেলমেন্ট এ অনেক সময় একটা ডেভেলপমেন্ট ভার্শন থাকে, আরেকটা প্রোডাকশন ভার্শন থাকে। ধরি আমাদের <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/zonayedpca/gulp-demo/archive/project-structure.zip\" target=\"_blank\" rel=\"noopener\" data-href=\"https://github.com/zonayedpca/gulp-demo/archive/project-structure.zip\">এরকম</a>(ডাউনলোড করে নিন) স্ট্রাকচার আছে মেইন প্রোজেক্ট এরঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*vDrlSGQIXeJCTYA0mzrcuA.png?resize=295%2C411&#038;ssl=1\" data-image-id=\"1*vDrlSGQIXeJCTYA0mzrcuA.png\" data-width=\"295\" data-height=\"411\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন <code class=\"markup--code markup--p-code\">src</code> এর ভিতরের সব ডেভেলপমেন্ট ভার্শন। এখন বাই কনভেনশন আমরা <code class=\"markup--code markup--p-code\">dist</code> নামে একটা ডিরেক্টরিতে প্রোডাকশন ভার্শনটা রাখি। এখন যদি আমরা ডেভেলপমেন্ট ভার্শন থেকে প্রোডাকশন ভার্শনে নেওয়ার জন্যে একটা টাস্ক ক্রিয়েট করতে চাচ্ছি। <code class=\"markup--code markup--p-code\">about.html</code> আর <code class=\"markup--code markup--p-code\">index.html</code> কে কপি করে <code class=\"markup--code markup--p-code\">dist</code> ডিরেক্টির ভিতরে নিতে চাচ্ছি। লক্ষ্য করুন আমাদের কিন্তু <code class=\"markup--code markup--p-code\">dist</code> নামে কোনো ডিরেক্টরিই নাই। সমস্যা নাই, <code class=\"markup--code markup--p-code\">gulp</code> ডিরেক্টরি না থাকলে ক্রিয়েট করে দিবেঃ</p>\n<pre class=\"graf graf--pre\">gulp.task('copy', function() {\r\n   gulp.src('./src/*.html').pipe(gulp.dest('./dist/'));\r\n});</pre>\n<p class=\"graf graf--p\">এখানে প্রথমে টাস্ক ক্রিয়েট করে তারপর সোর্স দেওয়া হয়েছে। <code class=\"markup--code markup--p-code\">*</code> দিয়ে বুঝানো হয়েছে আমরা সব নামের <code class=\"markup--code markup--p-code\">html</code> ফাইলগুলো চাচ্ছি কপি করতে। তারপর <code class=\"markup--code markup--p-code\">pipe()</code> এর ভিতরে ডেসটিনেশন দিয়েছি যেখানে আমরা ফাইলগুলো কপি করতে চাচ্ছি। এভাবেই <code class=\"markup--code markup--p-code\">pipe()</code> করে আপনি যে অ্যাকশন নিতে চাচ্ছেন নিতে হবে।</p>\n<p class=\"graf graf--p\">এবার টাস্ক রান করুনঃ</p>\n<pre class=\"graf graf--pre\">gulp copy</pre>\n<p class=\"graf graf--p\">দেখুন এবার <code class=\"markup--code markup--p-code\">dist</code> নামে একটা ডিরেক্টরি ক্রিয়েট হয়েছে এবং সব <code class=\"markup--code markup--p-code\">html</code> ফাইল সেখানে কপি হয়ে গেছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/800/1*iZC2095CFvwmHk6clsEe0Q.png?resize=298%2C456&#038;ssl=1\" data-image-id=\"1*iZC2095CFvwmHk6clsEe0Q.png\" data-width=\"298\" data-height=\"456\" data-recalc-dims=\"1\" /></figure>\n<h4 class=\"graf graf--h4\">SASS কে CSS এ নেওয়াঃ</h4>\n<p class=\"graf graf--p\">এজন্যে আমরা gulp এর <code class=\"markup--code markup--p-code\">gulp-sass</code> প্লাগিন ইউজ করবো। এরকম gulp এর অনেক প্লাগিন আছে বিভিন্ন টাস্ক কমপ্লিট করার জন্যে। gulp এর অফিশিয়াল ওয়েবসাইটের তথ্য অনুযায়ী এখন পর্যন্ত gulp এর ৩,৬৯৫+ প্লাগিন রয়েছে। অলমোস্ট ইউজ করা হয় এমন সব কাজ করার প্লাগিনই পাবেন। প্রথমে <code class=\"markup--code markup--p-code\">gulp-sass</code> ডেভ ডিপেন্ডেন্সি হিসেবে ইন্সটল করে নিনঃ</p>\n<pre class=\"graf graf--pre\">npm install --save-dev gulp-sass</pre>\n<p class=\"graf graf--p\">এখন আমাদের প্রোজেক্টের <code class=\"markup--code markup--p-code\">src/css/style.scss</code> ফাইলের ভিতরে কিছু SASS লিখা যাক, যেটা আমরা <code class=\"markup--code markup--p-code\">dist</code> এর ভিতরে আসল CSS এ কনভার্ট করে নিয়ে যাবোঃ</p>\n<pre class=\"graf graf--pre\">$bgColor: #333;\r\n$fontColor: #fff;</pre>\n<pre class=\"graf graf--pre\">body {\r\n  background: $bgColor;\r\n  color: $fontColor;\r\n}</pre>\n<p class=\"graf graf--p\">এবার এটাকে কনভার্ট করে জায়গামতো নেওয়ার জন্যে নতুন আরেকটা টাস্ক ক্রিয়েট করা যাকঃ</p>\n<pre class=\"graf graf--pre\">gulp.task('sass', function() {\r\n  gulp.src('./src/css/*.scss')\r\n    .pipe(sass())\r\n      .pipe(gulp.dest('./dist/css'));\r\n});</pre>\n<p class=\"graf graf--p\">এখানে যেহেতু <code class=\"markup--code markup--p-code\">sass()</code> ইউজ করেছি এটা অবশ্যই আগে <code class=\"markup--code markup--p-code\">require</code> করিয়ে নিতে হবেঃ</p>\n<pre class=\"graf graf--pre\">const sass = require('gulp-sass');</pre>\n<p class=\"graf graf--p\">এখানে দেখুন এভাবেই <code class=\"markup--code markup--p-code\">pipe()</code> ইউজ করে একটা অ্যাকশন (SASS কে CSS এ কনভার্ট করে) নিয়ে তারপর ডেসটিনেশন দিয়েছি। এবার এই টাস্ক রান করুনঃ</p>\n<pre class=\"graf graf--pre\">gulp sass</pre>\n<p class=\"graf graf--p\">আর দেখুন আপনার CSS ফাইল একদম যেভাবে দিয়েছেন সেভাবেই চলে গিয়েছে।</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*BNCjdzkRvaNx1GZC_wWiIQ.png?resize=301%2C509&#038;ssl=1\" data-image-id=\"1*BNCjdzkRvaNx1GZC_wWiIQ.png\" data-width=\"301\" data-height=\"509\" data-recalc-dims=\"1\" /></figure>\n<h4 class=\"graf graf--h4\">স্ক্রিপ্টকে মিনিমাইজ করাঃ</h4>\n<p class=\"graf graf--p\">আমাদের প্রোজেক্টে দুইটা স্ক্রিপ্ট ফাইল আছে। এবার এগুলোর ভিতরে কিছু লিখা যাক। <code class=\"markup--code markup--p-code\">alert.js</code> ওপেন করে লিখিঃ</p>\n<pre class=\"graf graf--pre\">// Alert a message on the browser window\r\n// Really Exciting\r\n//\r\n//</pre>\n<pre class=\"graf graf--pre\">alert('I am learning Gulp JS');</pre>\n<pre class=\"graf graf--pre\">//</pre>\n<pre class=\"graf graf--pre\">//</pre>\n<pre class=\"graf graf--pre\">console.log('Log Nothing');</pre>\n<p class=\"graf graf--p\">আবার <code class=\"markup--code markup--p-code\">log.js</code> ওপেন করে লিখিঃ</p>\n<pre class=\"graf graf--pre\">// Alert a message on the browser window\r\n// Really Exciting\r\nconsole.log('Log Something on the Console');\r\n//\r\n//</pre>\n<pre class=\"graf graf--pre\">console.log('Log Something Else');</pre>\n<pre class=\"graf graf--pre\">//\r\n//</pre>\n<pre class=\"graf graf--pre\">//</pre>\n<pre class=\"graf graf--pre\">console.log('Log Nothing');</pre>\n<p class=\"graf graf--p\">এখন আমরা এখানে gulp এর <code class=\"markup--code markup--p-code\">gulp-uglify</code> প্লাগিন ইউজ করে এই দুইটা স্ক্রিপ্টকে কম্প্রেসড করে <code class=\"markup--code markup--p-code\">dist</code> এ রাখবো। এজন্যে প্রথমে <code class=\"markup--code markup--p-code\">gulp-uglify</code> ডেভ ডিপেন্ডেসি হিসাবে ইন্সটল করে নেইঃ</p>\n<pre class=\"graf graf--pre\">npm install --save-dev gulp-uglify</pre>\n<p class=\"graf graf--p\">এখন <code class=\"markup--code markup--p-code\">gulpfile.js</code> এ এই প্লাগিনটা <code class=\"markup--code markup--p-code\">require</code> করিয়ে কাজ শুরু করবোঃ</p>\n<pre class=\"graf graf--pre\">const uglify = require('gulp-uglify');</pre>\n<p class=\"graf graf--p\">এখন নতুন একটা টাস্ক ক্রিয়েট করি যেটা আমাদের কাজ করবেঃ</p>\n<pre class=\"graf graf--pre\">gulp.task('compress', function() {\r\n  gulp.src('./src/js/*')\r\n    .pipe(uglify())\r\n      .pipe(gulp.dest('./dist/js'));\r\n});</pre>\n<p class=\"graf graf--p\">এখানে <code class=\"markup--code markup--p-code\">src/js</code> এর ভিতরের সব ফাইল নিয়ে <code class=\"markup--code markup--p-code\">dist/js</code> ডিরেক্টরিতে মিনিমাইজড করে রাখতে চাচ্ছি। এবার টাস্ক রান করুনঃ</p>\n<pre class=\"graf graf--pre\">gulp compress</pre>\n<p class=\"graf graf--p\">এবার <code class=\"markup--code markup--p-code\">dist/js</code> এর ভিতরে দেখুন আপনার কম্প্রেসড ফাইলগুলোঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/800/1*NCL51ctpGW3nPyZFoQrnKA.png?resize=299%2C578&#038;ssl=1\" data-image-id=\"1*NCL51ctpGW3nPyZFoQrnKA.png\" data-width=\"299\" data-height=\"578\" data-recalc-dims=\"1\" /></figure>\n<h4 class=\"graf graf--h4\">কয়েকটা ফাইলকে একটা ফাইলে নেওয়াঃ</h4>\n<p class=\"graf graf--p\">আমাদের এখানে দুইটা স্ক্রিপ্ট ফাইল <code class=\"markup--code markup--p-code\">alert.js</code> এবং <code class=\"markup--code markup--p-code\">log.js</code> আছে। এখন আমরা চাচ্ছি দুইটাকে একসাথে করে <code class=\"markup--code markup--p-code\">dist</code> ডিরেক্টরিতে একটা ফাইলে রাখতে। তাছাড়া আমাদের <strong class=\"markup--strong markup--p-strong\">html</strong> ফাইলগুলোয় দেখবেন আমি একটা স্ক্রিপ্ট লিঙ্ক করিয়েছি <code class=\"markup--code markup--p-code\">main.js</code> নামে। আমরা এখন সেটাই করবো gulp এর <code class=\"markup--code markup--p-code\">gulp-concat</code> প্লাগিন ইউজ করে। প্রথমে প্লাগিনটা ডেভ ডিপেন্ডেন্সি হিসাবে ইন্সটল করে ফেলিঃ</p>\n<pre class=\"graf graf--pre\">npm install --save-dev gulp-concat</pre>\n<p class=\"graf graf--p\">এখন <code class=\"markup--code markup--p-code\">gulpfile.js</code> এ এই প্লাগিনটা <code class=\"markup--code markup--p-code\">require</code> করিয়ে কাজ শুরু করবোঃ</p>\n<pre class=\"graf graf--pre\">const concat = require('gulp-concat');</pre>\n<p class=\"graf graf--p\">এবার ফাইল দুইটাকে একসাথে করে <code class=\"markup--code markup--p-code\">dist</code> এ একটা <code class=\"markup--code markup--p-code\">main.js</code> ফাইল ক্রিয়েট করবো। এর জন্যে নতুন টাস্ক লিখতে হবেঃ</p>\n<pre class=\"graf graf--pre\">gulp.task('concat', function() {\r\n  gulp.src('./src/js/*')\r\n    .pipe(concat('main.js'))\r\n      .pipe(gulp.dest('./dist/js'));\r\n});</pre>\n<p class=\"graf graf--p\">এখানে সব আগের মতো হলেও দেখবেন <code class=\"markup--code markup--p-code\">concat()</code> একটা আর্গুমেন্ট নিয়েছে যেটা আপনার ফাইলের নাম। এধরনের ব্যাপারগুলো শুধুমাত্র জানতে পারবেন প্লাগিনের <a class=\"markup--anchor markup--p-anchor\" href=\"https://www.npmjs.com/package/gulp-concat\" target=\"_blank\" rel=\"noopener\" data-href=\"https://www.npmjs.com/package/gulp-concat\">ডকুমেন্টেশন</a> থেকে। প্লাগিনের ডকুমেন্টশন দেখে দেখেই এখন যেকোনো প্লাগিন দিয়ে কাজ করতে পারবেন আশা করি। এবার এই টাস্কটা রান করুনঃ</p>\n<pre class=\"graf graf--pre\">gulp concat</pre>\n<p class=\"graf graf--p\">এবার দেখুন আপনার <code class=\"markup--code markup--p-code\">dist</code> ডিরেক্টরিতেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/800/1*Qs_5i2K3f9rRtd1vP-yI-A.png?resize=298%2C610&#038;ssl=1\" data-image-id=\"1*Qs_5i2K3f9rRtd1vP-yI-A.png\" data-width=\"298\" data-height=\"610\" data-recalc-dims=\"1\" /></figure>\n<h4 class=\"graf graf--h4\">একসাথে দুইটা অ্যাকশন পারফর্ম করাঃ</h4>\n<p class=\"graf graf--p\">এখন ধরি আগের উদাহরণটায় আমরা <code class=\"markup--code markup--p-code\">main.js</code> ফাইলটাকে কমপ্রেসড করতে চাচ্ছি <code class=\"markup--code markup--p-code\">gulp-uglify</code> দিয়ে। তাহলে একদম ইজি। জাস্ট আরো একটা <code class=\"markup--code markup--p-code\">pipe()</code> অ্যাড করতে হবে এরকমভাবেঃ</p>\n<pre class=\"graf graf--pre\">gulp.task('concatmin', function() {\r\n  gulp.src('./src/js/*')\r\n    .pipe(uglify())\r\n      .pipe(concat('main.js'))\r\n        .pipe(gulp.dest('./dist/js'));\r\n});</pre>\n<p class=\"graf graf--p\">এবার টাস্ক রান করিয়ে দেখুন আপনার <code class=\"markup--code markup--p-code\">main.js</code> একই সাথে কম্প্রেসডও হয়ে গেছে।</p>\n<h4 class=\"graf graf--h4\">কোনো ফাইলকে নজরদারীতে রাখাঃ</h4>\n<p class=\"graf graf--p\">আমরা চাইলে কোনো ফাইলকে নজরদারীতেও রাখতে পারি <code class=\"markup--code markup--p-code\">gulp.watch()</code> দিয়ে। এটার কাজ হলো আপনি যে ফাইলকে নজরদারীতে রাখবেন সেটাতে কোনোরকম চ্যাঞ্জ হলেই আপনার দেওয়া টাস্ক অটোম্যাটিকালি অ্যাপ্লাই হয়ে যাবে।</p>\n<p class=\"graf graf--p\">আমরা চাচ্ছি <code class=\"markup--code markup--p-code\">index.html</code> ও <code class=\"markup--code markup--p-code\">about.html</code> কে নজরদারীতে রাখতে। এগুলোতে কোনো চ্যাঞ্জ হওয়ার সাথে সাথেই <code class=\"markup--code markup--p-code\">dist</code> এর ভিতরে অটো কপি হয়ে যাবে, এর জন্যে নতুন আরেকটা টাস্ক স্কিয়েট করিঃ</p>\n<pre class=\"graf graf--pre\">gulp.task('watch', function() {\r\n  gulp.watch('./src/*.html', ['copy']);\r\n});</pre>\n<p class=\"graf graf--p\">এখানে <code class=\"markup--code markup--p-code\">gulp.watch()</code> দুইটা আর্গুমেন্ট নেয়। প্রথমটা কোন ফাইল বা ফাইলগুলোকে নজরদারীতে রাখতে চাচ্ছেন আর দ্বিতীয়টা একটা অ্যারে যেখানে আপনি কোন কোন অ্যাকশন অ্যাপ্লাই করতে চাচ্ছেন সেই অ্যাকশনের টাস্কের নাম একটার পর একটা। উল্লেখিত ফাইলে কোনোরূপ চ্যাঞ্জ হলেই এই অ্যারেতে ডিফাইন করা অ্যাকশনগুলো অ্যাপ্লাই হয়ে যাবে অটোম্যাটিকেলি। এবার এই টাস্ক রান করুনঃ</p>\n<pre class=\"graf graf--pre\">gulp watch</pre>\n<p class=\"graf graf--p\">এবার <code class=\"markup--code markup--p-code\">index.html</code> বা<code class=\"markup--code markup--p-code\"> about.html</code> তে কোনোকিছু চ্যাঞ্জ করতেই দেখবেন <code class=\"markup--code markup--p-code\">dist</code> এর ভিতরের <code class=\"markup--code markup--p-code\">index.html</code> বা <code class=\"markup--code markup--p-code\">about.html</code> ফাইলগুলোও অটোম্যাটিক চ্যাঞ্জ হয়ে যাচ্ছে। এভাবে আমরা চাইলে আরো অনেকগুলো জিনিস একইভাবে নজরদারীতে রাখতে পারিঃ</p>\n<pre class=\"graf graf--pre\">gulp.task('watch', function() {\r\n  gulp.watch('./src/*.html', ['copy']);\r\n  gulp.watch('./src/css/*.scss', ['sass']);\r\n  gulp.watch('./src/js/*', ['concatmin']);\r\n});</pre>\n<p class=\"graf graf--p\">এবার <code class=\"markup--code markup--p-code\">gulp watch</code> রান করার সাথে সাথেই দেখবেন এখানে উল্লেখিত সবগুলো ফাইলই নজরদারীতে রাখা হচ্ছে এবং এই ফাইলগুলোয় কোনো চ্যাঞ্জ অ্যাপ্লাই করার সাথে সাথেই আপনার উল্লেখিত অ্যাকশন অ্যাপ্লাই করা হচ্ছে। এখানেই gulp এর আসল মজা 😀</p>\n<h4 class=\"graf graf--h4\">ডিফল্ট টাস্কঃ</h4>\n<p class=\"graf graf--p\">gulp এ ডিফল্ট টাস্কও ক্রিয়েট করতে পারবেন এভাবেঃ</p>\n<pre class=\"graf graf--pre\">gulp.task('default', ['copy', 'sass', 'concatmin', 'watch']);</pre>\n<p class=\"graf graf--p\">এখানে দুইটা আর্গুমেন্ট নিয়েছে। প্রথমটা <code class=\"markup--code markup--p-code\">‘default’</code> ডিফল্ট টাস্কের জন্যে। আর দ্বিতীয়টা একটা অ্যারে বাই ডিফল্ট আপনি কোন কোন টাস্ক রান করাতে চাচ্ছেন সেগুলো। এই ডিফল্ট টাস্ক রান করাতে চাইলে সিম্পলি এভাবে লিখলেই রান করা শুরু করবেঃ</p>\n<pre class=\"graf graf--pre\">gulp</pre>\n<p class=\"graf graf--p\">এজন্যে এটাকে ডিফল্ট টাস্ক বলা হয়।</p>\n<p class=\"graf graf--p\">কমপ্লিট প্রোজেক্টটি আমার গিটহাব থেকে ডাউনলোড করতে পারবেনঃ</p>\n<div class=\"graf graf--mixtapeEmbed\"><a class=\"markup--anchor markup--mixtapeEmbed-anchor\" title=\"https://github.com/zonayedpca/gulp-demo\" href=\"https://github.com/zonayedpca/gulp-demo\" data-href=\"https://github.com/zonayedpca/gulp-demo\"><strong class=\"markup--strong markup--mixtapeEmbed-strong\">zonayedpca/gulp-demo</strong><br />\n<em class=\"markup--em markup--mixtapeEmbed-em\">Contribute to gulp-demo development by creating an account on GitHub.</em>github.com</a></div>\n<p class=\"graf graf--p\">আজকে এই পর্যন্তই। আশা করি gulp সম্পর্কে ক্লিয়ার ধারণা হয়ে গেছে। এখন শুধু প্লাগিনের ডকুমেন্টেশন দেখে দেখেই কাজ করতে পারবেন আশা করি। যদি আমার এই পোস্ট কোনোভাবে আপনার উপকারে লাগে, নিচে কমেন্ট করতে ভুলবেন না। এতোক্ষন সাথে থাকার জন্যে ধন্যবাদ!</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d80d7a793763-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d80d7a793763-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>Gulp JS মূলত একটা টুলস আপনার নিত্যপ্রয়োজনীয় টাস্ককে অটোম্যাট করার জন্যে। আমাদের ওয়েব অ্যাপ্লিকেশন বা ওয়েব ডেভেলপমেন্ট এ অনেক কাজ আছে যেগুলো বারবার করতে হয়। ধরুন আপনি SASS দিয়ে স্টাইল করতেছেন, এখন প্রত্যেকবার আপনার ফাইল দেখার জন্যে SASS ফাইলটাকে কম্পাইল করে প্লেইন CSS এ নিতে হয়। এজন্যে আপনাকে প্রয়োজনীয় কমান্ড দিয়ে কম্পাইল করতে হয়। যদিও [&hellip;]</p>\n","protected":false},"author":1,"featured_media":271,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[54,50,13,60,28],"tags":[124,128,126,94,108,166,86,106],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/270"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=270"}],"version-history":[{"count":2,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/270/revisions"}],"predecessor-version":[{"id":362,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/270/revisions/362"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/271"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=270"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=270"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=270"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}