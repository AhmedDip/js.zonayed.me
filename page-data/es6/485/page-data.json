{"componentChunkName":"component---src-templates-post-page-js","path":"/es6/485","webpackCompilationHash":"633388a87d59423f3384","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":485,"date":"2018-08-18T16:21:52","date_gmt":"2018-08-18T16:21:52","guid":{"rendered":"https://with.zonayed.me/?p=485"},"modified":"2018-08-18T16:21:52","modified_gmt":"2018-08-18T16:21:52","slug":"%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%87%e0%a6%8f%e0%a6%b8-%e0%a7%aces6-%e0%a6%95%e0%a7%8d%e0%a6%b2%e0%a6%be-2","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%95%e0%a6%ae%e0%a7%8d%e0%a6%aa%e0%a6%bf%e0%a6%89%e0%a6%9f%e0%a6%be%e0%a6%b0-%e0%a6%b8%e0%a6%be%e0%a6%87%e0%a6%a8%e0%a7%8d%e0%a6%b8/%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%87%e0%a6%8f%e0%a6%b8-%e0%a7%aces6-%e0%a6%95%e0%a7%8d%e0%a6%b2%e0%a6%be-2/","title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">গত পর্বে আমরা জাভাস্ক্রিপ্ট এ নতুন সিন্ট্যাক্টিক শ্যুগার ক্লাস (Class) সম্পর্কে জেনেছি। এটা যেহেতু আসলে নতুন সিনট্যাক্স ছাড়া কিছুই না, তাই ফাংশন কন্সট্রাকটরের মতো করেও অনেক কিছু করা যাবে এটাতে। এগুলো সম্পর্কে আমরা অলরেডি জেনেছি। কিন্তু আজকের এই পর্বে ক্লাস দিয়ে আরো কি কি করা যায় সেগুলো দেখবো।</p>\n<p class=\"graf graf--p\">কিন্তু এখন আমাদের যদি এরকম সিচুয়েশান আসে যেখানে আমাদের দুইটা অনেকটা একইরকম ক্লাস থাকতে পারে। যেটা আমি ইএস৫ এ <a class=\"markup--anchor markup--p-anchor\" href=\"https://js.zonayed.me/#/js-advance/458\" target=\"_blank\" rel=\"noopener\" data-href=\"https://js.zonayed.me/#/js-advance/458\">উদাহরণ</a> দিয়েছিলাম কন্সট্রাকটর ফাংশনের ক্ষেত্রে। ধরি আমাদের একটা ক্লাস আছে <code class=\"markup--code markup--p-code\">PersonClassDemo</code> নামেঃ</p>\n<pre class=\"graf graf--pre\">class PersonClassDemo {\r\n   constructor(name, age, job) {\r\n      this.name = name;\r\n      this.age = age;\r\n      this.job = job;\r\n      this.dateOfBirth = () =&gt; {\r\n         console.log(`${this.name} is born in ${2018 - this.age}`);\r\n      }\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">আরেকটা আছে <code class=\"markup--code markup--p-code\">TeacherClassDemo</code> নামে, যেখানে টিচারের পার্সনের মতোই সব বৈশিষ্ট্য আছে, কিন্তু একটা বেশী আছেঃ</p>\n<pre class=\"graf graf--pre\">class TeacherClassDemo {\r\n   constructor(name, age, job, dateOfBirth, subject) {\r\n      this.name = name;\r\n      this.age = age;\r\n      this.job = job;\r\n      this.subject = subject;  \r\n      this.dateOfBirth = dateOfBirth;\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">তো এক্ষেত্রে আমাদের দুইটা আলাদা আলাদা ক্লাস বানানোর কোনো দরকার নাই। আমরা প্রথমটা থেকে প্রথমটার বৈশিষ্ট্যগুলো ইনহেরিট করতে পারবো। ধরি আমাদের প্রথম ক্লাস এটা আছেঃ</p>\n<pre class=\"graf graf--pre\">class PersonClass {\r\n   constructor(name, age, job) {\r\n      this.name = name;\r\n      this.age = age;\r\n      this.job = job;\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এখন আমরা টিচারের জন্যে আরেকটা বানাবো যেটাতে পার্সনের সব বৈশিষ্ট্য তো আছেই, সাথে অতিরিক্ত একটা আছে। আমরা ইনহেরিট করবো সবগুলো, আর অতিরিক্ত টা ডিফাইন করে দিবো এভাবেঃ</p>\n<pre class=\"graf graf--pre\">class TeacherClass extends PersonClass {\r\n   constructor(name, age, job, subject) {\r\n      super(name, age, job);\r\n      this.subject = subject;\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">ব্যাস হয়ে গেলো আমাদের ইনহেরিট্যান্স। আমরা এখানে একটা স্পেশাল কীওয়ার্ড ইউজ করেছি <code class=\"markup--code markup--p-code\">super</code> নামে। বাকি সব সেইম। <code class=\"markup--code markup--p-code\">constructor</code> মেথডে ঠিক কি কি থাকবে সবগুলোই ডিফাইন করেছি, তারপর <code class=\"markup--code markup--p-code\">super</code> কীওয়ার্ড দিয়ে আমরা এর মধ্যে যেগুলো <code class=\"markup--code markup--p-code\">PersonClass</code> থেকে ( এখানে <code class=\"markup--code markup--p-code\">name</code>, <code class=\"markup--code markup--p-code\">age</code>, <code class=\"markup--code markup--p-code\">job</code>) ইনহেরিট হবে সেগুলো বলে দিয়েছি। ব্যাস এভাবেই ইনহেরিট হয়ে গেলো। এখন এখানে আমরা নতুন অবজেক্ট তৈরী করে সেটা ইউজ করতে পারবোঃ</p>\n<pre class=\"graf graf--pre\">const ourSir = new TeacherClass('Shafiq Sir', 46, 'Assistant Teacher', 'Physics');</pre>\n<p class=\"graf graf--p\">এখন এই নতুন অবজেক্ট তৈরী হয়ে গেলো। পরীক্ষা করে দেখি সব ঠিক আছে কিনাঃ</p>\n<pre class=\"graf graf--pre\">console.log(ourSir.name);\r\nconsole.log(ourSir.age);\r\nconsole.log(ourSir.job);\r\nconsole.log(ourSir.subject);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*7uYNu5Xu54wi2aHhIO5P8A.png?resize=239%2C152&#038;ssl=1\" data-image-id=\"1*7uYNu5Xu54wi2aHhIO5P8A.png\" data-width=\"239\" data-height=\"152\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন সেইমভাবে আমাদের ক্লাসে যদি কোনো মেথডও থাকে তাহলে সেটাও ইনহেরিট করা যাবে সহজেই। ধরি আমাদের একটা ক্লাস আছে মেথডসহঃ</p>\n<pre class=\"graf graf--pre\">class PersonClassMeth {\r\n   constructor(name, age, job) {\r\n      this.name = name;\r\n      this.age = age;\r\n      this.job = job;\r\n   }\r\n   dateOfBirth() {\r\n      console.log(`${this.name} born in ${2018 - this.age}`);\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এখন আরেকটা ক্লাস তৈরী করি যেটাতে আমরা উপরের সবকিছু ইনহেরিট করবোঃ</p>\n<pre class=\"graf graf--pre\">class TeacherClassMeth extends PersonClassMeth {\r\n   constructor(name, age, job, subject) {\r\n      super(name, age, job);\r\n      this.subject = subject;\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">আসলে প্যারেন্ট ক্লাস থেকে মেথড আনতে অতিরিক্ত কিছু করা লাগবে না, <code class=\"markup--code markup--p-code\">super</code> কীওয়ার্ডটাই সব করে দিবে আমাদের হয়ে। এখন এই ক্লাস থেকে নতুন অবজেক্ট তৈরী করিঃ</p>\n<pre class=\"graf graf--pre\">const ourSirMeth = new TeacherClassMeth('Shafiq Sir', 46, 'Assistant Teacher', 'Physics');</pre>\n<p class=\"graf graf--p\">এখন আমরা বাকি সবগুলো প্রপার্টির অ্যাক্সেস তো পাবোই, সে সাথে আমাদের সেই মেথডটাও অ্যাক্সেস করতে পারবোঃ</p>\n<pre class=\"graf graf--pre\">console.log(ourSirMeth.dateOfBirth());</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*AlxcPRfcu_5LUK292fTARQ.png?resize=319%2C46&#038;ssl=1\" data-image-id=\"1*AlxcPRfcu_5LUK292fTARQ.png\" data-width=\"319\" data-height=\"46\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন আমরা এরকম কিছু মেথডও চাইতে পারি যেগুলো শুধুমাত্র আমাদের ক্লাসে থাকবে। কিন্তু ক্লাস থেকে যে অবজেক্ট তৈরী করবো, সেগুলো সেই মেথডের অ্যাক্সেস পাবে না। হ্যাঁ একটা স্পেশাল কীওয়ার্ড <code class=\"markup--code markup--p-code\">static</code> দিয়ে আমরা এই ধরনের মেথড নিতে পারিঃ</p>\n<pre class=\"graf graf--pre\">class StaticMethod {\r\n   constructor(name) {\r\n      this.name = name;\r\n   }\r\n   <strong class=\"markup--strong markup--pre-strong\">static </strong>aSpecMeth() {\r\n      console.log('I am A Special Method!');\r\n   }\r\n}</pre>\n<p class=\"graf graf--p\">এখন এইখানে এই মেথডটাকে আমরা ক্লাস দিয়ে সরাসরি অ্যাক্সেস করতে পারবোঃ</p>\n<pre class=\"graf graf--pre\">console.log(StaticMethod.aSpecMeth());</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*HSFvHIJJoI1sW2YU281Qxg.png?resize=316%2C43&#038;ssl=1\" data-image-id=\"1*HSFvHIJJoI1sW2YU281Qxg.png\" data-width=\"316\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কিন্তু, এখন যদি আমরা একটা অবজেক্ট তৈরী করি এই ক্লাস থেকেঃ</p>\n<pre class=\"graf graf--pre\">const aMeth = new StaticMethod('Zonayed Ahmed');</pre>\n<p class=\"graf graf--p\">এবার অন্যান্য সবগুলোর মতো যদি আমরা এই <code class=\"markup--code markup--p-code\">static</code> মেথডটাকে অ্যাক্সেস করতে চাইঃ</p>\n<pre class=\"graf graf--pre\">console.log(aMeth.aSpecMeth());</pre>\n<p class=\"graf graf--p\">এরর আসবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*ieDYX5ybptYKrQoCoDlDJw.png?resize=441%2C61&#038;ssl=1\" data-image-id=\"1*ieDYX5ybptYKrQoCoDlDJw.png\" data-width=\"441\" data-height=\"61\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কারণ এটা <code class=\"markup--code markup--p-code\">static</code> মেথড। এটা শুধুমাত্র উক্ত ক্লাস দিয়েই অ্যাক্সেস করা যাবে, কিন্তু সেই ক্লাস দিয়ে তৈরী কোনো অবজেক্ট দিয়ে অ্যাক্সেস করা যাবে না।</p>\n<p class=\"graf graf--p\">তবে ডেভেলপার হিসেবে আমরা হয়তো <code class=\"markup--code markup--p-code\">private</code> মেথডও চাইতে পারি(যদি আপনি অন্য কোনো ল্যাঙ্গুয়েজে অভ্যস্ত হয়ে থাকেন, এই পর্যায়ে এসে এই কীওয়ার্ডটা মিস করতেও পারেন)। চিন্তা কারণ নাই সামনে এটাও পাবেন হয়তো। আপাতত <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/tc39/proposal-class-fields\" target=\"_blank\" rel=\"noopener\" data-href=\"https://github.com/tc39/proposal-class-fields\">প্রপোজালে</a> আছে, আমিও চাই এটা অ্যাড হউক।</p>\n<p class=\"graf graf--p\">আরেকটা জিনিস মনে রাখবেন, ক্লাসের ভিতরে সব কোড কিন্তু স্ট্রিক্ট মোডে চলবে। আর ক্লাস নিয়ে যথেষ্ট প্র্যাক্টিস করতে হবে কিভাবে কাজ করে সেটা বুঝতে চাইলে। সব কিছুই প্র্যাক্টিস করতে হবে, তবে এই একটা জিনিস আমারও বুঝতে একটু প্রব্লেম হইছিলো প্রথম দিকে।</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d7fb8a9724ca-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d7fb8a9724ca-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>গত পর্বে আমরা জাভাস্ক্রিপ্ট এ নতুন সিন্ট্যাক্টিক শ্যুগার ক্লাস (Class) সম্পর্কে জেনেছি। এটা যেহেতু আসলে নতুন সিনট্যাক্স ছাড়া কিছুই না, তাই ফাংশন কন্সট্রাকটরের মতো করেও অনেক কিছু করা যাবে এটাতে। এগুলো সম্পর্কে আমরা অলরেডি জেনেছি। কিন্তু আজকের এই পর্বে ক্লাস দিয়ে আরো কি কি করা যায় সেগুলো দেখবো। কিন্তু এখন আমাদের যদি এরকম সিচুয়েশান আসে [&hellip;]</p>\n","protected":false},"author":1,"featured_media":323,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[26,50,60],"tags":[84,154,150,94,108,78,152,156,86,106],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/485"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=485"}],"version-history":[{"count":1,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/485/revisions"}],"predecessor-version":[{"id":487,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/485/revisions/487"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/323"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=485"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=485"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=485"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}