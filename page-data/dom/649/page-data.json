{"componentChunkName":"component---src-templates-post-page-js","path":"/dom/649","webpackCompilationHash":"e5023dd592dd2581cc14","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":649,"date":"2018-10-03T16:03:11","date_gmt":"2018-10-03T16:03:11","guid":{"rendered":"https://with.zonayed.me/?p=649"},"modified":"2018-10-03T16:03:11","modified_gmt":"2018-10-03T16:03:11","slug":"%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%a1%e0%a6%ae-%e0%a6%ae%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a8%e0%a6%bf-4","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a7%87%e0%a6%8f%e0%a6%b8-%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa%e0%a7%8d%e0%a6%9f-%e0%a6%a1%e0%a6%ae-%e0%a6%ae%e0%a7%8d%e0%a6%af%e0%a6%be%e0%a6%a8%e0%a6%bf-4/","title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-divider\"></div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">ইভেন্ট হচ্ছে সোজা কথায় কোনো ঘটনা। আমি আমার একটা HTML ডকুমেন্ট এর কোথাও ক্লিক করলাম, এটা একটা ইভেন্ট। অথবা আমি একটা ইলিমেন্ট এর উপর মাউস পয়েন্টার নিলাম, অথবা আমি কী-বোর্ডের কোনো কী-তে চাপলাম, এগুলো সবই ইভেন্টের অন্তর্ভুক্ত। এমনিতে একটা পেজ লোড করা, পেজকে রিসাইজ করা এগুলোও ইভেন্টের মধ্যে পড়ে। এরকম আরো অনেক রকমের ইভেন্ট আছে যেগুলো আমাদের HTML ডকুমেন্ট এ, ডকুমেন্ট এর বিভিন্ন ইলিমেন্টে বিভিন্নভাবে ঘটতে পারে।</p>\n<p class=\"graf graf--p\">এখন এরকম কোনো ইভেন্ট এ আমরা হয়তো কোনো অ্যাকশন নিতে চাইতে পারি। যেমন আমরা হয়তো চাইতে পারি কেউ অমুক বাটনে ক্লিক করলে একটা ম্যাসেজ শো করাবো। অথবা আমাদের পেজটা পুরোপুরি লোড না হওয়া পর্যন্ত আমরা একটা লোডার শো করাবো। অথবা আমরা ফর্ম সাবমিট করার সময় ইনপুট ফিল্ডগুলো ভ্যালিড কিনা দেখবো। এগুলো সবই ইভেন্ট এর সাহায্যে করা হয়।</p>\n<p class=\"graf graf--p\">জাভাস্ক্রিপ্ট এর ইভেন্ট এর সাহায্যে একটা পেজ অনেকটা ডায়নামিক পেজের মতো করা ফেলা যায়। আমরা পেজ রিলোড না করেও অনেকসময় ইনস্ট্যান্ট ফলাফল, অ্যাকশন দেখতে পারি জাভাস্ক্রিপ্ট এর ইভেন্ট ব্যবহার করার মাধ্যমে। এর ফলে আমাদের একটা ওয়েবসাইটের ওভারল ইউজার এক্সপেরিয়েন্স ভালো লেভেলে নেওয়া যায়।</p>\n<p class=\"graf graf--p\">আমরা এই লেখায় প্র্যাক্টিসের সুবিধার্থে একটা প্রোজেক্টটা ব্যবহার করবো। তো এটা <a class=\"markup--anchor markup--p-anchor\" href=\"https://github.com/practicalJavaScript/javascript-dom/archive/event-handling.zip\" target=\"_blank\" rel=\"noopener\" data-href=\"https://github.com/practicalJavaScript/javascript-dom/archive/event-handling.zip\">এখান থেকে</a> ডাউনলোড করে আনজিপ করে আপনার পছন্দের কোড এডিটরে ওপেন করুন। আমরা আমাদের স্ক্রিপ্ট/কোডগুলো <code class=\"markup--code markup--p-code\">script.js</code> ফাইলের ভিতরে লিখবো যেটা আমাদের <code class=\"markup--code markup--p-code\">index.html</code> এর সাথে লিঙ্ক করা আছে।আর <code class=\"markup--code markup--p-code\">index.html</code> টা ক্রোমে ওপেন করে ডেভেলপার কন্সোল ওপেন করে প্র্যাক্টিস করা শুরু করুন। প্রত্যেকবার স্ক্রিপ্ট ফাইলে নতুন কোনো কোড অ্যাড করলে সেটা ইফেক্ট দেখতে আমাদের ব্রাউজারে খুলে রাখা ডকুমেন্টটা অবশ্যই রিলোড করতে হবে। আমাদের প্র্যাক্টিস ডকুমেন্টটাতে কয়েকটা বক্স আছে। সেই সাথে কয়েকটা বাটন, একটা ফর্ম, কয়েকটা ইনপুট ফিল্ডসহ আরো কিছু ইলিমেন্ট আছে যেগুলো আমরা বিভিন্ন পর্যায়ে ব্যবহার করবোঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*Ia7a8VOGsga4E-VFl-Dnvg.png?resize=767%2C431&#038;ssl=1\" data-image-id=\"1*Ia7a8VOGsga4E-VFl-Dnvg.png\" data-width=\"1366\" data-height=\"768\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">অ্যালার্ট বক্সঃ</strong> শুরু করার আগে আমরা একটা স্পেশাল ফাংশন দেখে নেই। এই ফাংশনের কাজ হচ্ছে আমাদের ব্রাউজারে অ্যালার্ট দেখানো। যেমন কন্সোলে সরাসরি যদি এরকম কোড লিখিঃ</p>\n<pre class=\"graf graf--pre\">alert('Hello World!');</pre>\n<p class=\"graf graf--p\">এটা রান করার সাথে সাথেই আপনার ব্রাউজারে এরকম অ্যালার্ট বক্স দেখবেনঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*Ar3qeR8u-ESs6jF2zvqeXA.png?resize=463%2C144&#038;ssl=1\" data-image-id=\"1*Ar3qeR8u-ESs6jF2zvqeXA.png\" data-width=\"463\" data-height=\"144\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">১। কমন ডম ইভেন্টঃ</strong> আমাদের ডমে কমন কিছু ইভেন্ট আছে। আমরা সেই ইভেন্ট দুইরকমভাবে হ্যান্ডেল করতে পারি। প্রথমত ইনলাইন স্টাইলে, আমাদের কাঙ্খিত ইলিমেন্টের সাথেই অ্যাট্রিবিউটস হিসেবে। আর দ্বিতীয়ত আমাদের HTML ডমের সাহায্যে পুরোপুরি জাভাস্ক্রিপ্ট দিয়ে, ইলিমেন্টকে টাচ না করেই।</p>\n<p class=\"graf graf--p\"> — <strong class=\"markup--strong markup--p-strong\">HTML ইভেন্ট অ্যাট্রিবিউটঃ</strong> আমরা চাইলে আমাদের ইলিমেন্ট এ অ্যাট্রিবিউট হিসেবেও সরাসরি ইভেন্ট হ্যান্ডেল করতে পারি। যেমন আমাদের ডকুমেন্টটায় বক্স ৪ এর প্রথম লিস্ট আইটেমে এরকম সরাসরি অ্যাট্রিবিউটের মাধ্যমে ক্লিক ইভেন্ট লাগাতে চাইঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*lniPwm-bLuNAwjzQ_i7j1w.png?resize=288%2C57&#038;ssl=1\" data-image-id=\"1*lniPwm-bLuNAwjzQ_i7j1w.png\" data-width=\"288\" data-height=\"57\" data-recalc-dims=\"1\" /></figure>\n<pre class=\"graf graf--pre\">&lt;li <strong class=\"markup--strong markup--pre-strong\">onclick=\"alert('This Document is Created for https://js.zonayed.me')\"</strong>&gt;About this document&lt;/li&gt;</pre>\n<p class=\"graf graf--p\">এটা লিখে ফাইল সেইভ করে, ব্রাউজারে আমাদের ডকুমেন্টটা রিলোড দিয়ে এই ইলিমেন্ট এর উপরে ক্লিক করলে একটা অ্যালার্ট বক্সে কিছু দেখতে পাবেনঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/880/1*bNpGMrtt3AErlzUuLhf-4A.png?resize=463%2C141&#038;ssl=1\" data-image-id=\"1*bNpGMrtt3AErlzUuLhf-4A.png\" data-width=\"463\" data-height=\"141\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন আমরা এখানেই সব লিখে দিয়েছি, কিন্তু চাইলে একটা ফাংশন আলাদা করে তৈরী করে সেটা ক্লিকে কল হবে এরকমটাও বলে দিতে পারি। যেমন আমাদের ডকুমেন্টটার <code class=\"markup--code markup--p-code\">script.js</code> ফাইলটা ওপেন করে এরকম একটা ফাংশন লিখুনঃ</p>\n<pre class=\"graf graf--pre\">function showAlert() {\r\n   alert('Alert by Function Call');\r\n}</pre>\n<p class=\"graf graf--p\">এখন আবার আমাদের সেই লিস্ট আইটেমে গিয়ে <code class=\"markup--code markup--p-code\">onclick</code> এর ভিতরের সব মুছে শুধুমাত্র এই ফাংশনটা কল করুনঃ</p>\n<pre class=\"graf graf--pre\">&lt;li onclick=\"<strong class=\"markup--strong markup--pre-strong\">showAlert()</strong>\"&gt;About this document&lt;/li&gt;</pre>\n<p class=\"graf graf--p\">এখন ক্রোমে ওপেন করা ডকুমেন্টটা রিলোড দিয়ে যদি আবার সেই ইলিমেন্ট উপর ক্লিক করেন তাহলে দেখবেন এরকম কিছু আসছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*wEmgjeJfh-DLKxh64aiMgQ.png?resize=459%2C141&#038;ssl=1\" data-image-id=\"1*wEmgjeJfh-DLKxh64aiMgQ.png\" data-width=\"459\" data-height=\"141\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">তারমানে আমরা সফলভাবে অন্য একটা ফাইলে ফাংশন তৈরী করে সেটা অ্যাট্রিবিউটের মাধ্যমে কল করতে পেরেছি। এরকম বড় কোনো ফাংশানালিটি থাকলে এক লাইনে তো আর হয় না, এভাবেই আলাদা ফাইল নিয়ে সেখানে সেটা হ্যান্ডেল করতে হয়। এরকম অ্যাট্রিবিউটের মাধ্যমে আরো কিছু টাইপের ইভেন্ট নিয়ে কাজ করতে পারবেনঃ</p>\n<ul class=\"postList\">\n<li class=\"graf graf--li\"> <code class=\"markup--code markup--li-code\"><strong class=\"markup--strong markup--li-strong\">onchange</strong></code><strong class=\"markup--strong markup--li-strong\">:</strong> আপনার ইলিমেন্ট এ কোনো ধরনের পরিবর্তন আসলে এই ইভেন্ট ঘটবে। সাধারণত আমরা যখন ফর্মের ইনপুট ফিল্ডে ডাটা দেই, তখন সেই ইনপুট ফিল্ডের ভ্যালু চেঞ্জ হয়। আর সেই চেঞ্জের সময়ের ইভেন্টটা এটা দিয়ে হ্যান্ডেল করতে পারবেন।</li>\n<li class=\"graf graf--li\"> <code class=\"markup--code markup--li-code\"><strong class=\"markup--strong markup--li-strong\">onclick</strong></code><strong class=\"markup--strong markup--li-strong\">:</strong> ইলিমেন্ট এর উপর ক্লিক করলে এই ইভেন্ট ঘটবে।</li>\n<li class=\"graf graf--li\"> <code class=\"markup--code markup--li-code\"><strong class=\"markup--strong markup--li-strong\">onmouseover</strong></code><strong class=\"markup--strong markup--li-strong\">:</strong> খালি পয়েন্টারটা আপনার কাঙ্খিত ইলিমেন্ট এর উপরে নিলেই এই ইভেন্ট ঘটবে।</li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\"><strong class=\"markup--strong markup--li-strong\">onmouseout</strong></code><strong class=\"markup--strong markup--li-strong\">:</strong> কোনো ইলিমেন্ট থেকে আপনার মাউসের পয়েন্টার সরালে এই ইভেন্ট ঘটবে।</li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\"><strong class=\"markup--strong markup--li-strong\">onkeydown</strong></code><strong class=\"markup--strong markup--li-strong\">:</strong> কী-বোর্ডের কোনো কী চাপলে এই ইভেন্ট ঘটবে।</li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\"><strong class=\"markup--strong markup--li-strong\">onload</strong></code><strong class=\"markup--strong markup--li-strong\">:</strong> ব্রাউজার আপনার ইলিমেন্ট লোড শেষ করলে এই ইভেন্ট ঘটে।</li>\n</ul>\n<p class=\"graf graf--p\">এখানে আমি প্রত্যেকটা নিয়ে পৃথক পৃথকভাবে আলোচনা করলাম না, কারণ পরে এদেরকেই আবার বিভিন্ন জায়গায় দেখাবো। তাছাড়া এভাবে ইনলাইন, অ্যাট্রিবিউটের মাধ্যমে ইভেন্ট হ্যান্ডেল করাটাও খুব ভালো প্র্যাক্টিস না। আমরা সম্পূর্ণ জাভাস্ক্রিপ্ট দিয়েই সব করবো, আমাদের HTML ইলিমেন্ট টাচ না করেই।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\"> — HTML ডমের সাহায্যেঃ</strong> উপরে আমরা HTML এ অ্যাট্রিবিউট হিসেবে যে ইভেন্টগুলো দেখলাম, সেগুলোসহ আরো বেশ কিছু ইভেন্ট আছে আমাদের যেগুলো পুরোপুরি জাভাস্ক্রিপ্ট দিয়েও হ্যান্ডেল করতে পারবো HTML ইলিমেন্ট টাচ না করেই।</p>\n<p class=\"graf graf--p\">আমরা আমাদের বক্স ১ এ একটা বাটন আছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*mSome3y3rH1QEnBaEzGJCw.png?resize=241%2C108&#038;ssl=1\" data-image-id=\"1*mSome3y3rH1QEnBaEzGJCw.png\" data-width=\"241\" data-height=\"108\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">বাটনে একটা ইভেন্ট লাগাবো। প্রথমে বাটনটা সিলেক্ট করে নিইঃ</p>\n<pre class=\"graf graf--pre\">const clickMeBtn = document.getElementById('btn-click-me');</pre>\n<p class=\"graf graf--p\">এখন এভাবে প্রথমে ইলিমেন্ট সিলেক্ট করে ভ্যারিয়েবলে নিয়ে তারপর কাজ করা ভালো প্র্যাক্টিস। এখন এখানে <code class=\"markup--code markup--p-code\">clickMeBtn</code> টাই হচ্ছে আমাদের বাটন। ব্রাউজারের কন্সোল থেকে এটা সরাসরি খুলে দেখলেও ভিতরে আপনি অনেকগুলো মেথড, প্রপার্টিসহ ইভেন্টগুলোও দেখতে পাবেনঃ</p>\n<pre class=\"graf graf--pre\">console.dir(clickMeBtn);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*VMdCllMofzofO3BVzu2YcA.png?resize=179%2C295&#038;ssl=1\" data-image-id=\"1*VMdCllMofzofO3BVzu2YcA.png\" data-width=\"179\" data-height=\"295\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখানে আরো অনেকরকমের ইভেন্ট আছে। কিন্তু আমরা তারমধ্যে ক্লিকের ইভেন্ট দেখবো। এখানে এই ইভেন্টগুলোতে আমরা ফাংশন অ্যাসাইন করে দিলে প্রত্যেকবার এই ইভেন্ট ঘটলেই সেই ফাংশন রান করবেঃ</p>\n<pre class=\"graf graf--pre\">clickMeBtn.onclick = function() {\r\n   console.log('Button Clicked');\r\n}</pre>\n<p class=\"graf graf--p\">আমরা এখানে ক্লিকে একটা ফাংশন অ্যাসাইন করেছি যেটার কাজ হচ্ছে একটা লেখা প্রিন্ট করা কন্সোলে। এখন প্রত্যেকবার আমাদের সেই বাটনে ক্লিক করলেই দেখবেন কন্সোলে উক্ত লেখা প্রিন্ট হচ্ছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*NWVE1J6QHXwdxTeJGnCbdw.png?resize=147%2C22&#038;ssl=1\" data-image-id=\"1*NWVE1J6QHXwdxTeJGnCbdw.png\" data-width=\"147\" data-height=\"22\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এরকম সেইম টাইপের আরো অনেক ইভেন্ট আছে। যেমনঃ <code class=\"markup--code markup--p-code\">onmouseover</code>, <code class=\"markup--code markup--p-code\">onchange</code>, <code class=\"markup--code markup--p-code\">onblur</code> , <code class=\"markup--code markup--p-code\">onload</code> , <code class=\"markup--code markup--p-code\">onresize</code> সহ আরো অনেক। সবগুলো একইভাবে কাজ করবে। যেমন আমরা চাইলে আরো একটা দেখতে পারি। আমরা যদি চাই আমাদের ইলিমেন্ট এর উপ মাউস নিলেই কিছু একটা অ্যাকশন নিবোঃ</p>\n<pre class=\"graf graf--pre\">clickMeBtn.onmouseover = function() {\r\n   console.log('Mouse Over');\r\n}</pre>\n<p class=\"graf graf--p\">এখন সেই বাটনের উপরে মাউস বা পয়েন্টারটা নিলেই দেখবেন আমাদের ফাংশন রান করছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/880/1*OHqPGfYZget9EWnDV1OAlw.png?resize=105%2C25&#038;ssl=1\" data-image-id=\"1*OHqPGfYZget9EWnDV1OAlw.png\" data-width=\"105\" data-height=\"25\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">২। ইভেন্টের লিসেনারঃ</strong> উপরে আমরা যেভাবে ইভেন্ট হ্যান্ডেলিং দেখলাম সেটা খুব বেশী ব্যবহার করা হয় না। বরং আমাদের আরেকটা মেথড আছে, একটা মেথড দিয়েই আমরা বিভিন্নরকমের ইভেন্ট হ্যান্ডেল করতে পারবো। তাছাড়া এই মেথডের বিশেষ কিছু সুবিধাও আছে যেমন আমরা এটার মাধ্যমে আনলিমিটেড ইভেন্ট অ্যাড করতে পারবো একটা ইলিমেন্ট এ। যেখানে একটু আগে উল্লেখ করা পদ্ধতিতে আমরা এক সাথে দুইটা ক্লিক ইভেন্ট অ্যাড করতে পারবো না, পরেরটা আগের ইভেন্টকে রিপ্লেস করে ফেলবে। এছাড়াও বাকী পার্থ্যক্যগুলো পরে আস্তে আস্তে আলোচনা করবো। সেই মেথডটা হচ্ছে <code class=\"markup--code markup--p-code\">addEventListener()</code> । এটাও আমরা আমাদের ইলিমেন্ট এর সাথে ব্যবহার করতে পারবো।</p>\n<p class=\"graf graf--p\">এই <code class=\"markup--code markup--p-code\">addEventListener</code> প্রধানত দুইটা প্যারামিটার নেয়। প্রথমটা হচ্ছে কোন টাইপের ইভেন্ট হবে সেটা, আর দ্বিতীয়টা একটা ফাংশন(হ্যান্ডেলার) যেটা ইভেন্ট ঘটলে রান হবেঃ</p>\n<pre class=\"graf graf--pre\">yourElement.addEventListener(typeofEvent, handler);</pre>\n<p class=\"graf graf--p\">এখন আমরা আমাদের বক্স ১ সিলেক্ট করবোঃ</p>\n<pre class=\"graf graf--pre\">const box1 = document.getElementById('box1');</pre>\n<p class=\"graf graf--p\">এখন আমরা এই বক্স ১ এ আমাদের ইভেন্ট লিসেনারটা লাগাবো। আর একই সাথে আমরা ক্লিক টাইপের ইভেন্ট চাচ্ছিঃ</p>\n<pre class=\"graf graf--pre\">box1.addEventListener('click', function() {\r\n   console.log('Clicked on Box 1');\r\n})</pre>\n<p class=\"graf graf--p\">ব্যাস, এখন বক্স ১ এর উপরে গিয়ে ক্লিক করলেই দেখবেন আপনার ফাংশন রান হচ্ছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*aU3rMzMJkEbmjFKP_voB1A.png?resize=148%2C25&#038;ssl=1\" data-image-id=\"1*aU3rMzMJkEbmjFKP_voB1A.png\" data-width=\"148\" data-height=\"25\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এরকম আপনি চাইলে এখানে ইভেন্ট টাইপে প্যারামিটার হিসেবে <code class=\"markup--code markup--p-code\">load</code>, <code class=\"markup--code markup--p-code\">focus</code>, <code class=\"markup--code markup--p-code\">blur</code>, <code class=\"markup--code markup--p-code\">submit</code>, <code class=\"markup--code markup--p-code\">resize</code>, <code class=\"markup--code markup--p-code\">cut</code>, <code class=\"markup--code markup--p-code\">copy</code>, <code class=\"markup--code markup--p-code\">keydown</code>, <code class=\"markup--code markup--p-code\">keypress</code>, <code class=\"markup--code markup--p-code\">keyup</code> সহ আরো অনেক টাইপের ইভেন্ট দিতে পারবেন।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৩। ইভেন্ট মডিফাইঃ</strong> আমাদের বক্স ১ এ এখন পুরো বক্সের উপর একটা ক্লিক ইভেন্ট লাগানো আছে, আবার সেই সাথে বক্সের ভিতরের বাটনেও দুইটা ইভেন্ট লাগানো আছে। এখন আপনি যদি জাস্ট সেই বাটনে ক্লিক করেন, তাহলে দেখবেন সবগুল ইভেন্টই একসাথে কাজ করছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*-DikIJoF3nwxVaCcxRFHQg.png?resize=172%2C63&#038;ssl=1\" data-image-id=\"1*-DikIJoF3nwxVaCcxRFHQg.png\" data-width=\"172\" data-height=\"63\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এটা বাই ডিফল্ট আচরণ, কিন্তু আমরা চাইলে এটা মডিফাই করতে পারবো।</p>\n<p class=\"graf graf--p\"> — <strong class=\"markup--strong markup--p-strong\">বাবল আপ(Bubble Up):</strong> বাটনে ক্লিক করাতে আমাদের বক্সের ইভেন্টও রান করছে, এটাই মূলত বাবল আপ। আমাদের ক্লিক ইভেন্টটা বাটন থেকে বাবল আপ করে এর প্যারেন্ট ইলিমেন্ট বক্স ১ এও চলে গেছে। আর তাই সেই ইভেন্টও রান করেছে। এখন আমরা চাইলে এই আচরণটা অফ করে দিতে পারি, যদিও এই বাবল আপেরও বিশেষ সুবিধা আছে যেটা আমরা একটু পরেই আলোচনা করবো। সেজন্যে আমাদের বাটনের ইভেন্টটা মডিফাই করতে হবে এরকমভাবেঃ</p>\n<pre class=\"graf graf--pre\">clickMeBtn.onclick = function(event) {\r\n   <strong class=\"markup--strong markup--pre-strong\">event.stopPropagation();</strong>\r\n   console.log('Button Clicked');\r\n}</pre>\n<p class=\"graf graf--p\">এখানে আমাদের হ্যান্ডেলার ফাংশনটা <code class=\"markup--code markup--p-code\">event</code> নামে একটা প্যারামিটার নিয়েছে, আপনি চাইলে যেকোনো নামেই নিতে পারবেন এই প্যারামিটার। এটার ভিতরে আপনার ইভেন্ট সম্পর্কে আরো অনেক মেথড, প্রপার্টি পাবেন। ঐখান থেকেই আমরা একটা মেথড <code class=\"markup--code markup--p-code\"><strong class=\"markup--strong markup--p-strong\">stopPropagation()</strong></code> ব্যবহার করেছি এখানে। এটার কাজই হচ্ছে এরকম বাবল-আপ বন্ধ করা। ব্যাস, এখন ডকুমেন্টটা রিলোড দিয়ে বাটনে ক্লিক করলে দেখবেন শুধুমাত্র বাটনের ক্লিক ইভেন্ট হ্যান্ডেলারটাই চলছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*niRyomEcgy1hcsoaA0hbHQ.png?resize=133%2C39&#038;ssl=1\" data-image-id=\"1*niRyomEcgy1hcsoaA0hbHQ.png\" data-width=\"133\" data-height=\"39\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"> — <strong class=\"markup--strong markup--p-strong\">সেইম ইলিমেন্ট এ একই রকম আরেকটা ইভেন্টঃ</strong> ধরি আমাদের বক্স ১ এর বাটনে আরেকটা ক্লিক ইভেন্ট আছেঃ</p>\n<pre class=\"graf graf--pre\">clickMeBtn.addEventListener('click', function() {\r\n   console.log('Another Click Event');\r\n});</pre>\n<p class=\"graf graf--p\">এটা লিখে সেইভ করে ব্রাউজার রিলোড দিয়ে আমাদের বাটনে ক্লিক করলে দেখবেন ক্লিক ইভেন্ট দুইটাই কাজ করছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/880/1*7j6P4-MFHQata7glT-pXpA.png?resize=161%2C61&#038;ssl=1\" data-image-id=\"1*7j6P4-MFHQata7glT-pXpA.png\" data-width=\"161\" data-height=\"61\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"> এখন যদি আমরা চাই যে না আমরা শুধুমাত্র একটা ইভেন্ট রান করবে। তাহলে যে ইভেন্টটা রাখবেন সেখানে হ্যান্ডেলারে <code class=\"markup--code markup--p-code\">event</code> প্যারামিটার পাস করে দিয়ে এটারই স্পেশাল আরেকটা মেথড আছে, সেটা কল করে দিতে হবেঃ</p>\n<pre class=\"graf graf--pre\">clickMeBtn.onclick = function(<strong class=\"markup--strong markup--pre-strong\">event</strong>) {\r\n   event.stopPropagation();\r\n   <strong class=\"markup--strong markup--pre-strong\">event.stopImmediatePropagation();</strong>\r\n   console.log('Button Clicked');\r\n}</pre>\n<p class=\"graf graf--p\">তবে মনে রাখবেন যে ইভেন্ট থেকে এটা বন্ধ করতে চাচ্ছেন সেটা বাকী ইভেন্টগুলো থেকে আপনার স্ক্রিপ্ট ফাইলে আগে থাকতে হবে। নতুবা সে ইভেন্টগুলো রান করার পর আপনার ব্রাউজার দেখতে পাবে যে আপনি ইভেন্ট রান করাতে না করেছেন। কিন্তু ততক্ষনে কোড উপরে থাকার কারণে আগেই রান হয়ে গেছে। তাই এটা দিয়েও কোনো লাভ হবে না।</p>\n<p class=\"graf graf--p\">ব্যাস, এখন সেইভ করে রিলোড দিয়ে আবার বাটনে ক্লিক করলে দেখবেন আগের ক্লিক ইভেন্টটা আর কাজ করছে নাঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*qX-4ZZOgbmh6OJHLKBTPTw.png?resize=144%2C46&#038;ssl=1\" data-image-id=\"1*qX-4ZZOgbmh6OJHLKBTPTw.png\" data-width=\"144\" data-height=\"46\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">— <strong class=\"markup--strong markup--p-strong\">ডিফল্ট আচরনঃ</strong> আমাদের বক্স ৪ এ কিছু লিঙ্ক আছে। এগুলোতে ক্লিক করলে আপনাকে কাঙ্ক্ষিত ওয়েবসাইটে নিয়ে যাবে। এরা লিঙ্ক, তাই ক্লিক করলে আপনাকে লিঙ্কের রেফারেন্স অনুযায়ী সে জায়গায় নিয়ে যাবে।</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/880/1*ktap67aCpnf0A6_00YQ7zQ.png?resize=471%2C180&#038;ssl=1\" data-image-id=\"1*ktap67aCpnf0A6_00YQ7zQ.png\" data-width=\"471\" data-height=\"180\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"> এটাই ব্রাউজারের ডিফল্ট আচরণ। এখন আমরা চাইলে এই আচরণটাকেও মডিফাই করে দিতে পারবো। আমাদের এখানে প্রথম লিঙ্কটা <strong class=\"markup--strong markup--p-strong\">JavaScript DOM Manipulation</strong> নামে ইলিমেন্টটার লিস্ট ট্যাগের একটা আইডি আছেঃ</p>\n<pre class=\"graf graf--pre\">&lt;li id=\"<strong class=\"markup--strong markup--pre-strong\">link</strong>\"&gt;&lt;a href=\"https://with.zonayed.me\"&gt;JavaScript DOM Manipulation&lt;/a&gt;&lt;/li&gt;</pre>\n<p class=\"graf graf--p\">আমরা এই আইডি দিয়ে এটা সিলেক্ট করবো। তারপর ক্লিক ইভেন্টটাকে মডিফাই করবো। ক্লিক করলে যাতে বাই ডিফল্ট আচরণ না করে ব্রাউজার সেটা বলে দিবো। প্রথমে লিঙ্ক ট্যাগটা সিলেক্ট করে নেইঃ</p>\n<pre class=\"graf graf--pre\">const link = document.getElementById('link');</pre>\n<p class=\"graf graf--p\">ব্যাস এখন সেই আগের মতো করে <code class=\"markup--code markup--p-code\">event</code> প্যারামিটারেরই এরকম ডিফল্ট আচরণ অফ করার জন্যে একটা স্পেশাল মেথড আছে, সেটা আমরা ব্যবহার করতে পারবোঃ</p>\n<pre class=\"graf graf--pre\">link.addEventListener('click', function(<strong class=\"markup--strong markup--pre-strong\">event</strong>) {\r\n   <strong class=\"markup--strong markup--pre-strong\">event.preventDefault();</strong>\r\n});</pre>\n<p class=\"graf graf--p\">ব্যাস, এখন ডকুমেন্টটা সেইভ করে ব্রাউজারে রিলোড দিয়ে সেই কাঙ্ক্ষিত লিঙ্কে ক্লিক করে দেখবেন সেটা আর বাই ডিফল্ট আচরণ করছে না। এখানে একটা জিনিস খেয়াল করবেন যে আমরা ঠিক <code class=\"markup--code markup--p-code\">a</code> ট্যাগটাকে সিলেক্ট করি নাই, বরং আমরা এর প্যারেন্ট <code class=\"markup--code markup--p-code\">li</code> কে সিলেক্ট করেছি। আমরা এটা নিয়ে একটু পরেই বিস্তারিত আলোচনা করবো।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৪। নেটিভ(Native) ডম ইভেন্টঃ</strong> আমরা তো এতক্ষন নিজেরা নিজেরা ইভেন্ট ঘটালাম। নিজেরাই গিয়ে বাটনে ক্লিক করেছি, ক্লিক ইভেন্ট ঘটেছে। কিন্তু আমরা চাইলে কোড দিয়েও এরকম ইভেন্ট ঘটাতে পারি। ধরি আমরা আমাদের বক্স ১ এর বাটনে একটা ক্লিক ইভেন্ট ঘটাতে চাচ্ছি। আর তাই ব্রাউজারের কন্সোল ওপেন করে নিচের এই কোডটা লিখবো[এটা স্ক্রিপ্ট ফাইলের ভিতরে লেখার দরকার নাই]:</p>\n<pre class=\"graf graf--pre\">clickMeBtn.click();</pre>\n<p class=\"graf graf--p\">এই কোডটা দেওয়ার সাথে সাথে দেখবেন বাটনের উপর একটা ক্লিক ইভেন্ট ঘটেছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*zJObeKEgKIcddDtk7gUM9A.png?resize=155%2C42&#038;ssl=1\" data-image-id=\"1*zJObeKEgKIcddDtk7gUM9A.png\" data-width=\"155\" data-height=\"42\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">আমাদের বাটনে ক্লিক ইভেন্ট হ্যান্ডেলার যেহেতু লাগানো আছে, তাই ঐটাই রান হয়েছে।</p>\n<p class=\"graf graf--p\">এরকম আরো ইভেন্ট যেমন <code class=\"markup--code markup--p-code\">focus</code> , <code class=\"markup--code markup--p-code\">blur</code> অথবা ফর্মের <code class=\"markup--code markup--p-code\">submit</code> ইভেন্টও এভাবে ঘটানো যাবে।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৫। ইভেন্ট ডেলিগেশন(Delegation):</strong> একটু আগে আমরা ইভেন্ট বাবল-আপ নিয়ে কথা বলেছি। আমরা বাবল-আপ কিভাবে বন্ধ করবো সেটা দেখেছি। আর তাই মানে বাবল-আপ যে খারাপ জিনিস তা কিন্তু নয়। বাবল-আপের সুবিধাটাও আমাদের অনেক কাজে লাগতে পারে। যেমন আমরা একটা প্যারেন্ট ইলিমেন্ট থেকেও একটা চাইল্ড ইলিমেন্ট এর উপর ঘটে যাওয়া ইভেন্ট ধরে সেটাকে হ্যান্ডেল করতে পারি। এখানে সুবিধাটা কি? হ্যা, সুবিধা হচ্ছে একটা প্যারেন্ট ইলিমেন্ট এর অনেকগুলো চাইল্ড ইলিমেন্ট থাকতে পারে। এখন সবার জন্যে আলাদা আলাদা করে ইভেন্ট হ্যান্ডেল করা আসলে একটু ঝামেলার কাজই। সেক্ষেত্রে আমরা তাদের প্যারেন্ট এ ইভেন্টটা হ্যান্ডেল করতে পারি, যেহেতু দিন শেষে সেই চাইল্ড ইলিমেন্ট এর উপরে ঘটে যাওয়া ইভেন্ট বাবল-আপ করে প্যারেন্ট ইলিমেন্টেই আসবে।</p>\n<p class=\"graf graf--p\">তাছাড়া এমনও হতে পারে, আমাদের একটা ইলিমেন্ট ডমে নাই। আমরা কোনোভাবে পরে অ্যাড করবো। এখন ঐরকম একটা ইলিমেন্ট এর উপর কিভাবে ইভেন্ট নিয়ে কাজ করবো? হ্যা, সেখানেও আমরা প্যারেন্ট ইলিমেন্ট এর উপর ইভেন্ট হ্যান্ডেলিং এর কাজটা করতে পারবো। আর তাই কোনো ইলিমেন্ট না থাকলেও, পরে তৈরী করা হলেও সেটার উপর ঘটে যাওয়া ইভেন্ট যেই বাবল-আপ করে প্যারেন্টে আসবে, আমাদের হ্যান্ডেলার কাজ করতে পারবে।</p>\n<p class=\"graf graf--p\">যেমন আমাদের বক্স ৪ তে তিনটা লিস্ট আইটেম আছে। এখন সবার জন্যে পৃথক পৃথক করে ইভেন্ট না লাগিয়ে একেবারে লিস্ট তিনটার প্যারেন্ট বা একদম বক্স থেকেই এদের উপরের ঘটে যাওয়া ইভেন্ট অনুযায়ী অ্যাকশন নিতে পারবো। আর তাই প্রথমেই বক্স ৪ সিলেক্ট করে নিইঃ</p>\n<pre class=\"graf graf--pre\">var box4 = document.getElementById('box4');</pre>\n<p class=\"graf graf--p\">এখন লিস্ট আইটেমগুলোয় ক্লিক করলে সেই ক্লিক ইভেন্ট বাবল-আপ করে প্যারেন্ট বক্স ৪ তে আসবে এখানে আমরা টার্গেট যাচাই করে অ্যাকশন নিবোঃ</p>\n<pre class=\"graf graf--pre\">box4.addEventListener('click', function(event) {\r\n   if(event.target.tagName === 'LI') {\r\n      console.log('Clicked on a List Item');\r\n   }\r\n});</pre>\n<p class=\"graf graf--p\">একটা জিনিস এখানে খেয়াল করবেন, আমরা লিস্ট আইটেমগুলো ডিটেক্ট করেছি <code class=\"markup--code markup--p-code\">tagName</code> দিয়ে, আপনি চাইলে আপনার মতো আরো অন্যকিছু(ক্লাস, অ্যাট্রিবিউট) দিয়েও ডিটেক্ট করতে পারবেন। আর ট্যাগ নেইমটাও বড় হাতের হবে এখানে। এখন যেকোনো একটা লিস্ট আইটেমে ক্লিক করলেই দেখবেন হ্যান্ডেলার রান করছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*G0fQg7t-fl0VEG5DVtiMOw.png?resize=172%2C24&#038;ssl=1\" data-image-id=\"1*G0fQg7t-fl0VEG5DVtiMOw.png\" data-width=\"172\" data-height=\"24\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এভাবে বাবল-আপ হওয়া ইভেন্টকে ক্যাপচার করে হ্যান্ডেল করার প্যাটার্নটাকেই মূলত ইভেন্ট ডেলিগেশন বলা হয়।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৬। ফর্ম ইভেন্টঃ</strong> কিছু ইভেন্ট আছে যেগুলো ফর্মে বেশ কাজে লাগে। আর তাই আলাদা করে সেগুলো এখানে আলোচনা করবো। ফর্মের ইনপুট ফিল্ডে ডাটা চেঞ্জ থেকে শুরু করে ফর্ম সাবমিট করার ইভেন্ট আমরা বিভিন্নভাবে হ্যান্ডেল করতে পারি। আমাদের ডকুমেন্ট এ একটা ফর্ম আছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*CYJgiMmtE2RUVbxx4jKtsA.png?resize=476%2C234&#038;ssl=1\" data-image-id=\"1*CYJgiMmtE2RUVbxx4jKtsA.png\" data-width=\"476\" data-height=\"234\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">আমরা এটাতেই বিভিন্নভাবে ইভেন্টগুলো কিভাবে কাজ করে দেখবো। সেজন্যে আমরা প্রথমে ইনপুট ফিল্ডগুলো সিলেক্ট করে নিবোঃ</p>\n<pre class=\"graf graf--pre\">const inputs = document.querySelectorAll('input');</pre>\n<p class=\"graf graf--p\">এখানে <code class=\"markup--code markup--p-code\">inputs</code> হচ্ছে নোডলিস্ট, আর এখানে দুইটা ইনপুট ফিল্ড থাকায় নোডলিস্টে ইন্ডেক্স ০ আর ১ এ ক্রমানুসারে আমাদের ইনপুট ইলিমেন্টগুলো সিলেক্ট হয়েছে। আমরা এখন ইনডেক্স নাম্বারের সাহায্যে ইলিমেন্টগুলো একটা একটা করে সিলেক্ট করতে পারবো।</p>\n<p class=\"graf graf--p\">আমরা আমাদের সাবমিট বাটনটাও সিলেক্ট করে রাখবো এভাবেঃ</p>\n<pre class=\"graf graf--pre\">const submitBtn = document.querySelector('button[type=submit]');</pre>\n<p class=\"graf graf--p\"> — <strong class=\"markup--strong markup--p-strong\">ইনপুট ফিল্ড চেঞ্জ ইভেন্টঃ</strong> ইনপুট ফিল্ডে কোনোরকম চেঞ্জ হলে সেখানে আমরা চেঞ্জ ইভেন্টের উপর ভিত্তি করে হ্যান্ডেলার লাগাতে পারবো। ধরি আমরা আমাদের প্রথম ইনপুট ফিল্ডে কোনোরকম চেঞ্জ হলে কিছু একটা করতে চাইঃ</p>\n<pre class=\"graf graf--pre\">inputs[0].addEventListener('change', function() {\r\n   console.log('Change Event on Input');\r\n});</pre>\n<p class=\"graf graf--p\">এখন আমাদের প্রথম ইনপুট ফিল্ডে কিছু লিখে অন্যকোথাও ক্লিক করলেই এই চেঞ্জ ইভেন্ট ঘটবে, আর সেই সাথে আমাদের কাঙ্ক্ষিত ফলাফলও কন্সোলে দেখতে পাবোঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*GqOuTRD-LilqXsEqmTj7fg.png?resize=173%2C25&#038;ssl=1\" data-image-id=\"1*GqOuTRD-LilqXsEqmTj7fg.png\" data-width=\"173\" data-height=\"25\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">যদিও এখানে জাস্ট একটা কিছু রান করে দেখলাম, কিন্তু এই ইভেন্ট অনেক কাজের হতে পারে। আমরা চাইলে এখান থেকে ইনপুট ফিল্ডের ভ্যালুটাও নিতে পারবো। সেক্ষেত্রে কেউ আমাদের ওয়েব অ্যাপ্লিকেশনে ফর্ম এ কাজ করলে আমরা রিয়েল টাইম ডাটা আপডেট করতে পারবো। আগের ইনপুট ফিল্ডের চেঞ্জ ইভেন্টটা একটু মডিফাই করে দিবোঃ</p>\n<pre class=\"graf graf--pre\">inputs[0].addEventListener('change', function(event) {\r\n   console.log(event.target.value);\r\n});</pre>\n<p class=\"graf graf--p\">এখানে আমরা <code class=\"markup--code markup--p-code\">event</code> প্যারামিটারের সাহায্যে টার্গেটেড ইলিমেন্ট এর ভ্যালু বা এখানে ইনপুট ফিল্ডের ভ্যালুটা বের করে এনে সেটা কন্সোলে লগ করেছি। যেমন আমরা যদি আমাদের ফিল্ডে এরকম কিছু লিখিঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*gTPPK5WXbf81c1rlI10xUw.png?resize=431%2C98&#038;ssl=1\" data-image-id=\"1*gTPPK5WXbf81c1rlI10xUw.png\" data-width=\"431\" data-height=\"98\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">ব্যাস, এখন যদি অন্যকোথাও ক্লিক করি তাহলে চেঞ্জ ইভেন্ট ঘটবে আর আমাদের কাঙ্ক্ষিত ফলাফল কন্সোলে দেখতে পাবোঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*z3GQd0f8igtkZxfWGMNUAw.png?resize=130%2C23&#038;ssl=1\" data-image-id=\"1*z3GQd0f8igtkZxfWGMNUAw.png\" data-width=\"130\" data-height=\"23\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"> — <strong class=\"markup--strong markup--p-strong\">ফর্ম সাবমিট ইভেন্টঃ</strong> ফর্ম সাবমিটে সাধারণত ব্রাউজারের বাই ডিফল্ট আচরণ থাকে। যেমন কোথায় ফর্মটা সাবিমিট করা হবে, রিকোয়েস্ট টাইপ কি হবে ইত্যাদি ইত্যাদি। যেমন আমাদের ফর্মটায় সাবমিট বাটনে ক্লিক করলে দেখবেন ব্রাউজার আবার লোড হয়েছে, এটা ব্রাউজারের বাই ডিফল্ট আচরণ। আমাদের ফর্মে যেহেতু কিছু(action, method) উল্লেখ নাই, তাই বাই ডিফল্ট এটা বর্তমান পেজেই ফর্মটা সাবমিট করবে এবং একইসাথে GET টাইপের রিকোয়েস্ট ব্যবহার করবে। আর সেজন্যেই আমাদের পেজ রিলোড হতে দেখা যায়। এখন জাভাস্ক্রিপ্ট ব্যবহার করে আমরা ফর্ম ভ্যালিডেশন করতে চাইতে পারি অথবা ফর্মের ডাটাগুলো অ্যাজাক্স রিকোয়েস্টের সাহায্যে আমাদের কাঙ্ক্ষিত জায়গায় পাঠাতে পারি। সেক্ষেত্রে ব্রাউজারের বাই ডিফল্ট আচরণ আমাদের রেগুলার কাজের জন্যে বাঁধা হয়ে দাড়াতে পারে। আমরা খুব সহজেই একটু আগে দেখানো উপায়ে সে বাই ডিফল্ট আচরণ আটকাতে পারিঃ</p>\n<pre class=\"graf graf--pre\">submitBtn.addEventListener('click', function(event) {\r\n   event.preventDefault();\r\n});</pre>\n<p class=\"graf graf--p\">এটা লিখে সেইভ করে ব্রাউজার রিলোড করে এখন সাবমিট বাটনে ক্লিক করলে দেখবেন আর বাই ডিফল্ট আচরণ হচ্ছে না। এখন আমরা ফর্ম ভ্যালিডেশন বা অ্যাজাক্স রিকোয়েস্ট টাইপের যেকোনোকিছু করতে পারবো ফর্মের উপর।</p>\n<p class=\"graf graf--p\">যেমন আমি যদি চাই, ইউজার কোনো ফর্মের ইনপুট ফিল্ড খালি রেখেই ফর্ম সাবমিট করতে চায়, তাহলে একটা অ্যালার্ট দেখাবো। তাহলে সাবিমিট বাটনের ক্লিক ইভেন্টটাতেই কিছু কোড অ্যাড করতে হবেঃ</p>\n<pre class=\"graf graf--pre\">submitBtn.addEventListener('click', function(event) {\r\n   event.preventDefault();\r\n   if(<strong class=\"markup--strong markup--pre-strong\">inputs[0].value === '' || inputs[1].value === ''</strong>) {\r\n      alert('Input Field cannot be Empty!');\r\n   }\r\n});</pre>\n<p class=\"graf graf--p\">এখন যদি আমরা ফর্মের কোনো একটা ইনপুট ফিল্ড খালি রেখে ফর্মটা সাবমিট করতে চাই তাহলে অ্যালার্ট পাবোঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*z_lLEYY8hxgBQew5TeALNQ.png?resize=459%2C141&#038;ssl=1\" data-image-id=\"1*z_lLEYY8hxgBQew5TeALNQ.png\" data-width=\"459\" data-height=\"141\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন যদি ইনপুট ফিল্ডগুলো দুইটাই ফীল করে বাটনে সাবমিট করি তাহলে আর অ্যালার্ট বক্স আসবে না। এখন আমরা যদি আরো মজার কিছু করতে চাই, যেমন ফীল্ড দুইটাই ফীল থাকলে আমরা ভিতরের ডাটাগুলো দেখাতে চাই। তাহলে সেই সাবমিটের ক্লিক ইভেন্টেই আবার আরো কিছু কোড অ্যাড করতে হবেঃ</p>\n<pre class=\"graf graf--pre\">submitBtn.addEventListener('click', function(event) {\r\n   event.preventDefault();\r\n   if(inputs[0].value === '' || inputs[1].value === '') {\r\n      alert('Input Field cannot be Empty!');\r\n   } <strong class=\"markup--strong markup--pre-strong\">else {\r\n      var input0Data = inputs[0].value;\r\n      var input1Data = inputs[1].value;\r\n      console.log('Your Name:', input0Data, 'And Your Email:', input1Data);\r\n   }</strong>\r\n});</pre>\n<p class=\"graf graf--p\">এখন ইনপুট ফীল্ড দুইটাই ফীল করে যদি সাবমিট করি তাহলে আমরা আমাদের ফীল্ডের ডাটাগুলোই দেখতে পাবো কন্সোলেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*e1qPt6tSiblm2NxLK2jJzg.png?resize=476%2C234&#038;ssl=1\" data-image-id=\"1*e1qPt6tSiblm2NxLK2jJzg.png\" data-width=\"476\" data-height=\"234\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">সাবমিট বাটনে ক্লিক করলে কন্সোলে আউটপুট পাবোঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*ug9zTkUfcFesr7OnYp1ohw.png?resize=435%2C25&#038;ssl=1\" data-image-id=\"1*ug9zTkUfcFesr7OnYp1ohw.png\" data-width=\"435\" data-height=\"25\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">আর কোনো একটা ইনপুট ফীল্ডও যদি খালি থাকে, তাহলে অ্যালার্ট বক্স আসবে।</p>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৭। কী-বোর্ড ইভেন্টঃ</strong> কী-বোর্ডের কী চাপলেও কোনো ইভেন্ট ঘটতে পারে, আর সেগুলোও আমরা আগেরমতো করেই হ্যান্ডেল করতে পারবো। এখানে তেমন বিশেষ কিছু নাই। তারপরেও কী-বোর্ডের ইভেন্ট নিয়ে একটু গভীরভাবে আলোচনা করার মতো কিছু ব্যাপার আছে। যেমন আমরা একটা কী তে চাপলে তিনরকমের ইভেন্ট ঘটতে পারে। প্রথমত একটা কী চাপলাম, এখনো কী টা ছাড়ি নাই, সিস্টেম কোনো কী স্ট্রোক রেজিস্টার করে নাই, এইসময়ে একটা ইভেন্ট হতে পারে। তারপর কী চেপে রাখা অবস্থাতেই সিস্টেম কী স্ট্রোক রেজিস্টার করেছে, ঐসময়ে একটা ইভেন্ট হতে পারে। আর একদম শেষে কী চেপে ছেড়ে দিলে তখন আরেকটা ইভেন্ট হতে পারে। এগুলোর উপর ভিত্তি করেই কী-বোর্ডের তিনরকমের ইভেন্ট ঘটতে পারেঃ</p>\n<ul class=\"postList\">\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">keydown</code>: প্রথম যে পরিস্থিতির কথা বললাম, কী চাপা হয়েছে কিন্তু সিস্টেম এখনো রেজিস্টার করে নাই। এটা হ্যান্ডেল করার জন্যে <code class=\"markup--code markup--li-code\">keydown</code> ইউজ করা হয়। এখন কী-বোর্ড ইভেন্টগুলো আমরা আমাদের <code class=\"markup--code markup--li-code\">document</code> এর উপর অ্যাপ্লাই করতে হবে যেহেতু এটা পুরো ডকুমেন্ট এর উপরেই থাকবে। বাকী সব আগের মতোইঃ</li>\n</ul>\n<pre class=\"graf graf--pre\">document.addEventListener('<strong class=\"markup--strong markup--pre-strong\">keydown</strong>', function() {\r\n   console.log('Key Down Event');\r\n});</pre>\n<p class=\"graf graf--p\">এখন স্ক্রিপ্ট সেইভ করে ব্রাউজার রিলোড করে আমাদের ডকুমেন্ট সিলেক্ট থাকা অবস্থায় কী-বোর্ডের কোনো কী তে চাপ দিলেই দেখবেন কাঙ্ক্ষিত ফাংশন রান করেছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*GeS7DWGci19lE49EtNyd0A.png?resize=144%2C22&#038;ssl=1\" data-image-id=\"1*GeS7DWGci19lE49EtNyd0A.png\" data-width=\"144\" data-height=\"22\" data-recalc-dims=\"1\" /></figure>\n<ul class=\"postList\">\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">keypress</code>: এই ইভেন্ট ঠিক সিস্টেমে কী-স্ট্রোক রেজিস্টার করা হওয়া মাত্রই ঘটে। বাকী সব আগের মতোইঃ</li>\n</ul>\n<pre class=\"graf graf--pre\">document.addEventListener('<code class=\"markup--code markup--pre-code\"><strong class=\"markup--strong markup--pre-strong\">keypress</strong></code>', function() {\r\nconsole.log('Key Press Event');\r\n});</pre>\n<p class=\"graf graf--p\">স্ক্রিপ্ট সেইভ করে ব্রাউজার রিলোড দিয়ে আমাদের ডকুমেন্ট এ কোনো কী চাপা মাত্রই দেখবেন এটা রান করেছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/880/1*iGUGD52wrUrN-zDLMf1k2A.png?resize=130%2C39&#038;ssl=1\" data-image-id=\"1*iGUGD52wrUrN-zDLMf1k2A.png\" data-width=\"130\" data-height=\"39\" data-recalc-dims=\"1\" /></figure>\n<ul class=\"postList\">\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">keyup</code>: কী চাপ দিয়ে ছেড়ে দিলে এই ইভেন্ট ঘটেঃ</li>\n</ul>\n<pre class=\"graf graf--pre\">document.addEventListener('<code class=\"markup--code markup--pre-code\"><strong class=\"markup--strong markup--pre-strong\">keyup</strong></code>', function() {\r\nconsole.log('Key Up Event');\r\n});</pre>\n<p class=\"graf graf--p\">স্ক্রিপ্ট সেইভ করে ব্রাউজার রিলোড দিয়ে কোনো কী চেপে ছেড়ে দেওয়া মাত্রই এই ইভেন্ট রান করবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*ODVle7tBzL0D9C9jBSQn9Q.png?resize=148%2C60&#038;ssl=1\" data-image-id=\"1*ODVle7tBzL0D9C9jBSQn9Q.png\" data-width=\"148\" data-height=\"60\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এদের একটার পর আরেকটার ফলাফল দেখলেই বুঝা যায় কে কখন রান করেছে।</p>\n<p class=\"graf graf--p\">এখন আমরা এখানেও মজার কিছু করতে পারি। যেমন আমরা যদি চাই ঠিক কোন কী-টা চাপা হয়েছে তাহলে সেটাও আমাদের সেই <code class=\"markup--code markup--p-code\">event</code> প্যারামিটারের সাহায্যে অ্যাক্সেস করে শো করাতে পারিঃ</p>\n<pre class=\"graf graf--pre\">document.addEventListener('keydown', function(event) {\r\n   console.log('Key Down Event');\r\n   console.log('Pressed Key: ' + event.key);\r\n});</pre>\n<p class=\"graf graf--p\">এখন স্ক্রিপ্ট সেইভ করে ব্রাউজার রিলোড দিয়ে ডকুমেন্ট এ যে কী চাপবেন সেটাই কন্সোলে দেখাবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/880/1*bVm4lJdjw5Pfcp8D7DB-_Q.png?resize=141%2C67&#038;ssl=1\" data-image-id=\"1*bVm4lJdjw5Pfcp8D7DB-_Q.png\" data-width=\"141\" data-height=\"67\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">সেইমভাবে বাকী দুইটার ক্ষেত্রেও কাজ করবে। এভাবে কী ডিটেক্ট করে পরে আরো মজার মজার অনেক কাজ করতে পারবেন খুব সহজেই।</p>\n<p class=\"graf graf--p\">এখানে আমরা হ্যান্ডেলারে প্যারামিটার হিসেবে <code class=\"markup--code markup--p-code\">event</code> ব্যবহার করছি, কিন্তু আমরা চাইলে সেটা খুলেও দেখতে পারি যে এভাবে আমরা কি কি অ্যাক্সেস করতে পারবো সেটা দেখার জন্যে। সেজন্যে কাঙ্ক্ষিত ইলিমেন্ট এর ইভেন্ট হ্যান্ডেলারে এভাবে <code class=\"markup--code markup--p-code\">console.dir()</code> ব্যবহার করে সহজেই দেখতে পারবেন আপনি এভাবে কি কি অ্যাক্সেস করতে পারবেনঃ</p>\n<pre class=\"graf graf--pre\">document.addEventListener('keydown', function(event) {\r\n   console.log('Key Down Event');\r\n   console.log('Pressed Key: ' + event.key);\r\n   <strong class=\"markup--strong markup--pre-strong\">console.dir(event);</strong>\r\n});</pre>\n<p class=\"graf graf--p\">এখন স্ক্রিপ্ট সেইভ করে ব্রাউজার রিলোড দিয়ে কোনো কী চাপলেই আপনি <code class=\"markup--code markup--p-code\">event</code> অবজেক্ট দেখতে পারবেন কন্সোল থেকেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/880/1*VeVAF5WTsDSbZ3LLfn3Mcw.png?resize=498%2C390&#038;ssl=1\" data-image-id=\"1*VeVAF5WTsDSbZ3LLfn3Mcw.png\" data-width=\"498\" data-height=\"390\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৮। মাউস ইভেন্টঃ</strong> ঠিক কী-বোর্ডের মতো মাউসেরও সেইম টাইপের স্পেশাল ইভেন্ট আছে। যেমন আমরা কোনো ইলিমেন্ট এর উপর মাউস বা পয়েন্টার নিলে একটা ইভেন্ট ঘটতে পারে। আবার সেই ইলিমেন্ট থেকে মাউস সরিয়ে ফেললে আরেকটা ইভেন্ট ঘটতে পারে।</p>\n<ul class=\"postList\">\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">mouseover</code> : কোনো ইলিমেন্ট এর উপর মাউস বা পয়েন্টার নিলে এই ইভেন্ট ঘটবে। এরকম ইভেন্ট আমরা প্রথমেই একটা দেখেছিলামঃ</li>\n</ul>\n<pre class=\"graf graf--pre\">clickMeBtn.onmouseover = function(event) {\r\n   console.log('Mouse Over');\r\n}</pre>\n<p class=\"graf graf--p\">সেইমটা <code class=\"markup--code markup--p-code\">addEventListener()</code> দিয়েও করা যাবেঃ</p>\n<pre class=\"graf graf--pre\">clickMeBtn.addEventListener('<strong class=\"markup--strong markup--pre-strong\">mouseover</strong>', function() {\r\n   console.log('On Mouse Over using addEventListener');\r\n});</pre>\n<p class=\"graf graf--p\">ব্যাস, এবার স্ক্রিপ্ট ফাইল সেইভ করে ব্রাউজার রিলোড দিয়ে আমাদের বক্স ১ এর বাটনের উপরে মাউস বা পয়েন্টারটা নিলেই এই ইভেন্ট ঘটবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*RzINUTZqhcCpxwl8tSPNKQ.png?resize=284%2C30&#038;ssl=1\" data-image-id=\"1*RzINUTZqhcCpxwl8tSPNKQ.png\" data-width=\"284\" data-height=\"30\" data-recalc-dims=\"1\" /></figure>\n<ul class=\"postList\">\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">mouseout</code> : এটাই অনেকটা সেইমই, যখন আমরা ইলিমেন্ট থেকে মাউস বা পয়েন্টার সরিয়ে নিবো, তখনি এই ইভেন্ট ঘটবে। ঠিক আগের বাটনেই আমরা এই ইভেন্ট অ্যাড করবোঃ</li>\n</ul>\n<pre class=\"graf graf--pre\">clickMeBtn.addEventListener('<strong class=\"markup--strong markup--pre-strong\">mouseout</strong>', function() {\r\n   console.log('On Mouse Out');\r\n});</pre>\n<p class=\"graf graf--p\">এখন স্ক্রিপ্ট সেইভ করে ব্রাউজার রিলোড দিয়ে আমাদের কাঙ্ক্ষিত বাটনের উপর মাউস নেওয়া মাত্র আগের ইভেন্ট রান করবে, আবার সরিয়ে নিলে এটা রান করবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/880/1*5gJTrxcVfgxzuch-BCRylA.png?resize=277%2C60&#038;ssl=1\" data-image-id=\"1*5gJTrxcVfgxzuch-BCRylA.png\" data-width=\"277\" data-height=\"60\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"><strong class=\"markup--strong markup--p-strong\">৯। ব্রাউজার ইভেন্টঃ</strong> আরো কিছু ইভেন্ট আছে যেগুলোকে আমি ব্রাউজারের ইভেন্টই বলবো। যেমন আমাদের পেজ পুরোপুরি লোড হওয়া শেষ হওয়ার পর একটা ইভেন্ট, আবার পেজে মার্কাপ লোড হওয়ার পর একটা ইভেন্ট অথবা একটা ইলিমেন্ট লোড শেষ হওয়ার পর আরেকটা ইভেন্ট, লোড ফেইল হলে সেটার আবার একটা ইভেন্ট। আমরা এ ধরনের ইভেন্টগুলোও সহজেই হ্যান্ডেল করতে পারবো।</p>\n<p class=\"graf graf--p\"> — <strong class=\"markup--strong markup--p-strong\">পুরোপুরি লোড হওয়ার পর ইভেন্টঃ</strong> আমরা হয়তো এরকম চাইতে পারি যে আমাদের পেজের কন্টেন্টগুলো পুরোপুরী লোড হলে পরেই ইউজারকে দেখানো হবে, আর লোডের সময় একটা লোডার দেখাবো। এরকম পরিস্থিতিতে এই <code class=\"markup--code markup--p-code\">load</code> ইভেন্টটা বেশ কাজের। আমাদের ডকুমেন্ট সবকিছু লোড হলে পরেই এই ইভেন্ট ঘটবে। আর আমরা এই ইভেন্টটা <code class=\"markup--code markup--p-code\">window</code> এর উপর অ্যাপ্লাই করবোঃ</p>\n<pre class=\"graf graf--pre\"><code class=\"markup--code markup--pre-code\">window.addEventListener('load', function() {\r\n    console.log('Your Page Fully Loaded!');\r\n});</code></pre>\n<p class=\"graf graf--p\">এটা স্ক্রিপ্ট ফাইলে লিখে সেইভ দিয়ে ব্রাউজার রিলোড করলেই দেখবেন এটা রান করছে, যেহেতু আমাদের পেজ লোড হয়ে গেছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*2LUZBOdewW8SWAk524MmvQ.png?resize=193%2C18&#038;ssl=1\" data-image-id=\"1*2LUZBOdewW8SWAk524MmvQ.png\" data-width=\"193\" data-height=\"18\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">— <strong class=\"markup--strong markup--p-strong\">শুধুমাত্র মার্কাপ লোড হওয়ার পরের ইভেন্টঃ</strong> অনেকসময় হয়তো আমাদের শুধুমাত্র মার্কাপ লোড হওয়ার পরপরই কোনো অ্যাকশন নিতে হতে পারে। একটু আগে দেখানো <code class=\"markup--code markup--p-code\">load</code> সাধারণত আমাদের পেজে থাকা মার্কাপ, স্টাইলশীট, স্ক্রিপ্টসহ আরো বাকী সব জিনিস লোড হওয়ার পরে ঘটে, যেখানে এই <code class=\"markup--code markup--p-code\">DOMContentLoaded</code> টা সাধারণত মার্কাপ(এইচটিএমএল) লোড হওয়ার পরপরই ঘটবে। আমরা আমাদের স্ক্রিপ্ট ফাইলে সাধারণত আমাদের ডকুমেন্ট এর কিছু ইলিমেন্ট সিলেক্ট করেই সেগুলোর উপর কাজ করি। এখন যদি কোনো কারণে মার্কাপ লোড হওয়ার আগেই আমাদের সেই স্ক্রিপ্ট রান হয়ে যায়, তাহলে কিন্তু আমাদের ইলিমেন্টগুলো পাবে না। সেক্ষেত্রে সমস্যা বা এরর আসতে পারে। তো এরকম পরিস্থিতিতে এই <code class=\"markup--code markup--p-code\">DOMContentLoaded</code>ইভেন্ট বেশ কাজে লাগতে পারে। এটা যেহেতু আমাদের ডকুমেন্ট এর ব্যাপার, তাই ইভেন্টটা <code class=\"markup--code markup--p-code\">document</code> এর উপর অ্যাপ্লাই করবোঃ</p>\n<pre class=\"graf graf--pre\"><code class=\"markup--code markup--pre-code\">document.addEventListener('DOMContentLoaded', function() {\r\n    console.log('Your Markup is Ready!');\r\n});</code></pre>\n<p class=\"graf graf--p\">স্ক্রিপ্ট লিখে সেইভ করে ব্রাউজার রিলোড দিলে দেখতে পাবেন আগে এটা রান করেছে, আর পরে <code class=\"markup--code markup--p-code\">load</code> এরটা রান করেছেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*alUS3UZK_8KFft_i-420Xg.png?resize=185%2C45&#038;ssl=1\" data-image-id=\"1*alUS3UZK_8KFft_i-420Xg.png\" data-width=\"185\" data-height=\"45\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"> — <strong class=\"markup--strong markup--p-strong\">নির্দিষ্ট কোনো ইলিমেন্ট লোড হওয়ার পরের ইভেন্টঃ</strong> আমাদের বক্স ২ এ দুইটা ইমেজ আছে। তারমধ্যে একটার ভ্যালিড সোর্স আছে, আর সেটা শো করছে। আর দ্বিতীয়টায় ইন-ভ্যালিড সোর্স হওয়ায় ভেঙ্গে গেছে। আমরা কন্সোলে হয়তো এতক্ষন এরকম একটা এররও দেখেছি। আমি আমার স্ক্রিনশটে এটা এতোক্ষন অ্যাভয়েড করে গেছি দেখতে খারাপ দেখা যায় বলেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/880/1*-GwkvfymZ00ea24MLurxdw.png?resize=612%2C20&#038;ssl=1\" data-image-id=\"1*-GwkvfymZ00ea24MLurxdw.png\" data-width=\"612\" data-height=\"20\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন এই ইলিমেন্টগুলোর লোড হওয়া না হওয়ার উপরও দুইরকম ইভেন্ট হতে পারে। আর সেগুলোও আমরা সেইমভাবেই হ্যান্ডেল করতে পারবো। আর তাই প্রথমেই আমরা ইমেজ দুইটা আলাদা আলাদা করে সিলেক্ট করে নেই। প্রথম ইমেজঃ</p>\n<pre class=\"graf graf--pre\">var img1 = document.querySelector('img[alt=valid-img]');</pre>\n<p class=\"graf graf--p\">দ্বিতীয় ইমেজঃ</p>\n<pre class=\"graf graf--pre\">var img2 = document.querySelector('img[alt=invalid-img]');</pre>\n<ul class=\"postList\">\n<li class=\"graf graf--li\"><strong class=\"markup--strong markup--li-strong\">ইলিমেন্ট লোড হওয়ার পরঃ</strong> আমরা আমাদের উপরের <code class=\"markup--code markup--li-code\">img1</code> সফলভাবে লোড হওয়ার পর কোনো অ্যাকশন নিতে চাইলেঃ</li>\n</ul>\n<pre class=\"graf graf--pre\"><code class=\"markup--code markup--pre-code\">img1.addEventListener('load', function() {\r\n    console.log('Image 1 Has Successfully Loaded!');\r\n});</code></pre>\n<p class=\"graf graf--p\">এখানে ইভেন্ট গুলোর একটা সিকোয়েন্সও দেখতে পাবেন, সেই সাথে আমাদের ইমেজ লোড হওয়ার পরের অ্যাকশনও পাবেনঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/880/1*QVda6bIQZxgZbAh4EuF3uQ.png?resize=225%2C74&#038;ssl=1\" data-image-id=\"1*QVda6bIQZxgZbAh4EuF3uQ.png\" data-width=\"225\" data-height=\"74\" data-recalc-dims=\"1\" /></figure>\n<ul class=\"postList\">\n<li class=\"graf graf--li\"><strong class=\"markup--strong markup--li-strong\">ইলিমেন্ট লোড না হতে পারলেঃ</strong> আমাদের দ্বিতীয় ইমেজে ভুল সোর্স দেওয়াতে ইমেজটা লোড হয়নি। এখন এরকম পরিস্থিতিতেও আরেকটা এরর টাইপের ইভেন্ট ঘটতে পারে, আর আমরা সেটার উপরও অ্যাকশন নিতে পারবোঃ</li>\n</ul>\n<pre class=\"graf graf--pre\"><code class=\"markup--code markup--pre-code\">img2.addEventListener('error', function() {\r\n    console.log('Image Cannot be loaded!');\r\n});</code></pre>\n<p class=\"graf graf--p\">এখন স্ক্রিপ্ট সেইভ করে ব্রাউজার লোড দিলে অ্যাকশনটা দেখতে পাবেনঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/880/1*6-8TCZmbk-t7PDiUs4Wbmw.png?resize=164%2C17&#038;ssl=1\" data-image-id=\"1*6-8TCZmbk-t7PDiUs4Wbmw.png\" data-width=\"164\" data-height=\"17\" data-recalc-dims=\"1\" /></figure>\n<h4 class=\"graf graf--h4\">পুরোনো ব্রাউজারের সমস্যা</h4>\n<p class=\"graf graf--p\">আপনার ওয়েব অ্যাপ্লিকেশনের যদি ইন্টারনেট এক্সপ্লোরার ৮, ৭ অথবা এমন পুরোনো কোনো ব্রাউজারের সাপোর্টও লাগে, তাহলে একটু আলাদাকরেই সবকিছু ভাবতে হবে। কারণ ঐ ভার্শনের ব্রাউজারে অনেককিছুই সাপোর্ট করে না। তারমধ্যে আমাদের এখানে ব্যবহার করা <code class=\"markup--code markup--p-code\">addEventListener()</code> ও অন্যতম। তাই এটা একটু পরিবর্তন করে দিতে হবে আপনাকে যদি ঐরকম পুরোনো ব্রাউজারের জন্যে সাপোর্ট অ্যাড করাই লাগেঃ</p>\n<pre class=\"graf graf--pre\"><code class=\"markup--code markup--pre-code u-paddingRight0 u-marginRight0\">yourElement.<strong class=\"markup--strong markup--pre-strong\">attachEvent</strong>('<strong class=\"markup--strong markup--pre-strong\">onclick</strong>', function() {\r\n    // যা করতে চাচ্ছেন এখানে যাবে\r\n});</code></pre>\n<p class=\"graf graf--p\">প্রধান যে যে পার্থক্যগুলো আমরা এখানে পাবোঃ</p>\n<ol class=\"postList\">\n<li class=\"graf graf--li\">আমাদের <code class=\"markup--code markup--li-code\">attachEvent</code> ব্যবহার করতে হবে<code class=\"markup--code markup--li-code\">addEventListener</code> এর পরবর্তিতে।</li>\n<li class=\"graf graf--li\">বেশীরভাগ ক্ষেত্রেও ইভেন্ট এর নামগুলো <code class=\"markup--code markup--li-code\">on</code> প্রি-ফিক্স দিয়ে শুরু হবে।</li>\n</ol>\n<p class=\"graf graf--p\">এছাড়াও আরো অনেককিছুতেই একটু পরিবর্তন আনা লাগবে, আশা করি এখানে আমরা ডমের সাথে কিভাবে কাজ করছি সেগুলো বুঝতে পারলেই বাকীগুলোও নিজে নিজে করে ফেলতে পারবেন। যেমন এই ওয়েবসাইট[<a class=\"markup--anchor markup--p-anchor\" href=\"https://caniuse.com\" target=\"_blank\" rel=\"nofollow noopener\" data-href=\"https://caniuse.com\">https://caniuse.com</a>] থেকে দেখতে পারবেন আপনি কোন মেথড কোন কোন ব্রাউজারের জন্যে ব্যবহার করতে পারবেন।</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d7fb3748004f-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d7fb3748004f-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>ইভেন্ট হচ্ছে সোজা কথায় কোনো ঘটনা। আমি আমার একটা HTML ডকুমেন্ট এর কোথাও ক্লিক করলাম, এটা একটা ইভেন্ট। অথবা আমি একটা ইলিমেন্ট এর উপর মাউস পয়েন্টার নিলাম, অথবা আমি কী-বোর্ডের কোনো কী-তে চাপলাম, এগুলো সবই ইভেন্টের অন্তর্ভুক্ত। এমনিতে একটা পেজ লোড করা, পেজকে রিসাইজ করা এগুলোও ইভেন্টের মধ্যে পড়ে। এরকম আরো অনেক রকমের ইভেন্ট আছে [&hellip;]</p>\n","protected":false},"author":1,"featured_media":631,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[54,50,60],"tags":[84,94,108,194,86,196,106],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/649"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=649"}],"version-history":[{"count":1,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/649/revisions"}],"predecessor-version":[{"id":650,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/649/revisions/650"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/631"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=649"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=649"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=649"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}