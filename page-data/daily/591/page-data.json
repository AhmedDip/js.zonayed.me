{"componentChunkName":"component---src-templates-post-page-js","path":"/daily/591","webpackCompilationHash":"9677d421f8e53dfed492","result":{"pageContext":{"isCreatedByStatefulCreatePages":false,"data":{"id":591,"date":"2018-09-01T15:46:26","date_gmt":"2018-09-01T15:46:26","guid":{"rendered":"https://with.zonayed.me/?p=591"},"modified":"2018-09-01T15:46:26","modified_gmt":"2018-09-01T15:46:26","slug":"%e0%a6%a8%e0%a6%bf%e0%a6%a4%e0%a7%8d%e0%a6%af%e0%a6%a6%e0%a6%bf%e0%a6%a8%e0%a7%87%e0%a6%b0-%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa-9","status":"publish","type":"post","link":"https://with.zonayed.me/%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%9c%e0%a7%87%e0%a6%8f%e0%a6%b8-%e0%a6%aa%e0%a7%8d%e0%a6%b0%e0%a7%8b%e0%a6%97%e0%a7%8d%e0%a6%b0%e0%a6%be%e0%a6%ae%e0%a6%bf%e0%a6%82/%e0%a6%a8%e0%a6%bf%e0%a6%a4%e0%a7%8d%e0%a6%af%e0%a6%a6%e0%a6%bf%e0%a6%a8%e0%a7%87%e0%a6%b0-%e0%a6%9c%e0%a6%be%e0%a6%ad%e0%a6%be%e0%a6%b8%e0%a7%8d%e0%a6%95%e0%a7%8d%e0%a6%b0%e0%a6%bf%e0%a6%aa-9/","title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"},"content":{"rendered":"<section class=\"section section--body\">\n<div class=\"section-divider\"></div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\">কন্ডিশনাল বা টার্নারি অপারেটর প্রায় ক্ষেত্রে <code class=\"markup--code markup--p-code\">if</code> <code class=\"markup--code markup--p-code\">else</code> স্টেটমেন্ট এর পরবর্তিতে শর্টকাট হিসেবে ব্যবহার করা হয়। শর্টকাটে একলাইনে একটা সিদ্ধান্তের উপর ডিশিসন নিয়ে ফেলা যায়। এই অপারেটর অনেকটা এভাবে কাজ করেঃ</p>\n<pre class=\"graf graf--pre\">কন্ডিশন ? কন্ডিশন যদি সত্য হয় তাহলে এটা : কন্ডিশন যদি মিথ্যা হয় তাহলে এটা</pre>\n<p class=\"graf graf--p\">এখানে এই যে স্পেশাল দুইটা জিনিস <code class=\"markup--code markup--p-code\">?</code> এবং <code class=\"markup--code markup--p-code\">:</code> দেখতেছেন, এগুলোই মূলত এখানে ব্যবহার হয়।</p>\n<p class=\"graf graf--p\">ধরি নিচে একটা ভ্যারিয়েবল আছেঃ</p>\n<pre class=\"graf graf--pre\">const age = 21;</pre>\n<p class=\"graf graf--p\">এখন এই <code class=\"markup--code markup--p-code\">age</code> এর উপর ডিপেন্ড করে আমরা একটা লেখা প্রিন্ট করতে চাই। যদি <code class=\"markup--code markup--p-code\">age</code> ১৮ এর নিচে হয় তাহলে একটা লেখা, আর যদি ১৮ বা ১৮ এর উপর হয় তাহলে আরেকটা লেখা প্রিন্ট করবো। এটা আমরা <code class=\"markup--code markup--p-code\">if</code> <code class=\"markup--code markup--p-code\">else</code> ব্যবহার করে এভাবে করতে পারিঃ</p>\n<pre class=\"graf graf--pre\">if(age &lt; 18) {\r\n   console.log('You are not Adult!');\r\n} else {\r\n   console.log('You are Adult');\r\n}</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i1.wp.com/cdn-images-1.medium.com/max/1000/1*GApq2nMnxQLdzakKxYMMSw.png?resize=312%2C106&#038;ssl=1\" data-image-id=\"1*GApq2nMnxQLdzakKxYMMSw.png\" data-width=\"312\" data-height=\"106\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">কিন্তু সেইম কাজটাই আমরা টার্নারি অপারেটর ব্যবহার করে মাত্র একলাইনেই করতে পারিঃ</p>\n<pre class=\"graf graf--pre\">console.log(age &lt; 18 <strong class=\"markup--strong markup--pre-strong\">?</strong> 'You are not Adult!' <strong class=\"markup--strong markup--pre-strong\">:</strong> 'You are Adult');</pre>\n<p class=\"graf graf--p\">এবার এটা রান করলে দেখবেন সেইম আউটপুটইঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*HjYhSdMOMdVxY3CLWU2g1w.png?resize=498%2C40&#038;ssl=1\" data-image-id=\"1*HjYhSdMOMdVxY3CLWU2g1w.png\" data-width=\"498\" data-height=\"40\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\"> এটা যেকোনো জায়গায় যেকোনোভাবে ব্যবহার করতে পারবেনঃ</p>\n<pre class=\"graf graf--pre\">function findAuthor(name) {\r\n   return(name === 'Zonayed Ahmed' ? 'This is the author' : 'Some other person');\r\n}</pre>\n<p class=\"graf graf--p\">এখন এই ফাংশন টাকে আর্গুমেন্ট দিয়ে কল করলে এটা আর্গুমেন্ট অনুযায়ী ফলাফল দেখাবেঃ</p>\n<pre class=\"graf graf--pre\">console.log(findAuthor('Zonayed Ahmed'));</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*NT3uyf3z2esj1TEASAVkYg.png?resize=330%2C43&#038;ssl=1\" data-image-id=\"1*NT3uyf3z2esj1TEASAVkYg.png\" data-width=\"330\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">অন্যকিছু দিলেঃ</p>\n<pre class=\"graf graf--pre\">console.log(findAuthor('John Doe'));</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*JFWqxP7bGhIZl6MiaI_rHg.png?resize=305%2C43&#038;ssl=1\" data-image-id=\"1*JFWqxP7bGhIZl6MiaI_rHg.png\" data-width=\"305\" data-height=\"43\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">রিয়েল লাইফে এটা কিভাবে কাজে লাগতে পারে? হ্যাঁ ধরুন আপনি আপনার ইউজারকে ইমেইল দিতে বলছেন। ইমেইল দিয়ে সাবমিট করলে আপনি এই ফাংশনটা রান করবেনঃ</p>\n<pre class=\"graf graf--pre\">function successFunc() {\r\n   console.log('Got your email');\r\n}</pre>\n<p class=\"graf graf--p\">ইমেইলটা আপনি এরকম একটা ভ্যারিয়েবল স্টোর করবেনঃ</p>\n<pre class=\"graf graf--pre\">let email;</pre>\n<p class=\"graf graf--p\">এখন ইউজার ইমেইল না দিলেই সাবমিট ক্লিক করে দিলে আপনি টার্নারি অপারেটর ইউজ করে খুব সহজেই ধরে ফেলতে পারবেন, আর অন্যকিছু দেখাতে পারবেন। ধরি এখানে আমরা জাস্ট একটা কন্সোল লগই দেখালামঃ</p>\n<pre class=\"graf graf--pre\">email ? successFunc() : console.log('Please provide your email!');</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*_GtdLd2SFJolrPoZz4beKA.png?resize=515%2C50&#038;ssl=1\" data-image-id=\"1*_GtdLd2SFJolrPoZz4beKA.png\" data-width=\"515\" data-height=\"50\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এটা কিভাবে হলো? হ্যাঁ এটা হয়েছে কারণ এখানে <code class=\"markup--code markup--p-code\">email</code> মিথ্যা <code class=\"markup--code markup--p-code\">false</code> তাই। তাহলে দেখি এখানে <code class=\"markup--code markup--p-code\">email</code> টা কি কারণে মিথ্যা <code class=\"markup--code markup--p-code\">false</code> ভ্যালু দিলোঃ</p>\n<pre class=\"graf graf--pre\">console.log(email);</pre>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*NVWMUBmJ7F075PSj7YDyAg.png?resize=186%2C47&#038;ssl=1\" data-image-id=\"1*NVWMUBmJ7F075PSj7YDyAg.png\" data-width=\"186\" data-height=\"47\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">আচ্ছা ইমেইল তাহলে এখানে <code class=\"markup--code markup--p-code\">undefined</code> হ্যাঁ, ঠিক তাই। কারণ আমাদের ইউজার ইমেইল দেয় নাই। আর আমরা জানি <code class=\"markup--code markup--p-code\">undefined</code> মিথ্যা <code class=\"markup--code markup--p-code\">false</code> । গত পর্বে আমরা দেখেছিলাম জাভাস্ক্রিপ্ট এ কিছু থাকলেই সেটা সত্য, শুধুমাত্র নিচের এগুলো ছাড়াঃ</p>\n<ul class=\"postList\">\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">false</code> (বুলিয়ান <code class=\"markup--code markup--li-code\">false</code>, নিজেই মিথ্যা)</li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">null</code></li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">NaN</code></li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">0</code></li>\n<li class=\"graf graf--li\">খালি (<code class=\"markup--code markup--li-code\">\"\"</code> , <code class=\"markup--code markup--li-code\">''</code>অথবা <code class=\"markup--code markup--li-code\">``</code>);</li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">undefined</code></li>\n<li class=\"graf graf--li\"><code class=\"markup--code markup--li-code\">!anythingTrue</code> (সত্য কোনো এক্সপ্রেশনের পূর্বে <code class=\"markup--code markup--li-code\">!</code> দিয়েও সেটাকে মিথ্যা করা যায়)</li>\n</ul>\n<p class=\"graf graf--p\">আর তাই এখানে <code class=\"markup--code markup--p-code\">email</code> মিথ্যা।</p>\n<p class=\"graf graf--p\">এবার যদি ইউজার ইমেইল দেয়ঃ</p>\n<pre class=\"graf graf--pre\">email = 'zonayedpca@yahoo.com';</pre>\n<p class=\"graf graf--p\">দেওয়ায়র পর সাবমিট করলো, এবার আমরা আবার আবার দেখিঃ</p>\n<pre class=\"graf graf--pre\">email ? successFunc() : console.log('Please provide your email!');</pre>\n<p class=\"graf graf--p\">ব্যাস, এবার দেখবেন আপনার ফাংশনটা রান করবেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i2.wp.com/cdn-images-1.medium.com/max/1000/1*TsjDJ3cBf4YYPYM4X7PyIw.png?resize=511%2C44&#038;ssl=1\" data-image-id=\"1*TsjDJ3cBf4YYPYM4X7PyIw.png\" data-width=\"511\" data-height=\"44\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">এখন ভাইয়া এখানে ইমেইল, ইমেইল সাবমিট-টাবমিট আসলো কোথা থেকে… হ্যাঁ এখানে এগুলো সব কাল্পনিক হলেও রিয়েল লাইফ প্রোজেক্ট করতে গেলে এরকম সিচুয়েশনেই পড়বেন আর ঠিক এভাবেই টার্নারি অপারেটর ব্যবহার করে সহজেই একলাইনেই কাজ সেরে ফেলতে পারবেন।</p>\n<p class=\"graf graf--p\">এখন টার্নারি অপারেটর কিন্তু একটা ভিতরেও আরেকটা দিতে পারবেন, যতক্ষন ইচ্ছা দিতে পারবেন রুলস মেইন্টেইন করে। ধরি আমাদের নিচে এরকম একটা অবজেক্ট আছেঃ</p>\n<pre class=\"graf graf--pre\">const objTer = {\r\n   name: 'Zonayed Ahmed',\r\n   age: 21,\r\n   job: 'Student'\r\n}</pre>\n<p class=\"graf graf--p\">এখন ধরি আমরা এখানে যদি <code class=\"markup--code markup--p-code\">objTer</code> এর <code class=\"markup--code markup--p-code\">name</code> এবং <code class=\"markup--code markup--p-code\">age</code></p>\n<pre class=\"graf graf--pre\">objTer.name ? objTer.age ? console.log('It has name and age') : objTer.job ? console.log('yes it has a job') : console.log('no it does not have any job') : console.log('I does not have any name');</pre>\n<p class=\"graf graf--p\">এটা রান করালেঃ</p>\n<figure class=\"graf graf--figure\"><img class=\"graf-image\" src=\"https://i0.wp.com/cdn-images-1.medium.com/max/1000/1*7hcawxom7w_iyEbs9ybKdQ.png?resize=480%2C67&#038;ssl=1\" data-image-id=\"1*7hcawxom7w_iyEbs9ybKdQ.png\" data-width=\"480\" data-height=\"67\" data-recalc-dims=\"1\" /></figure>\n<p class=\"graf graf--p\">অনেক বড় লাইন ঠিক না? এটাকে একটু ভেঙ্গে ভেঙ্গে দেখলেই ধারণা পাবেন। আসলে এভাবেও চাইলে আপনি অনেকগুলো টার্নারি অপারেটর একসাথে নিয়ে একটা ভিতরে আরেকটা দিয়ে কাজ করতে পারবেন। প্রয়োজনে ব্র্যাকেটসও ব্যবহার করতে পারবেন। এটাও আরেকটা পাওয়ারফুল টেকনিক।</p>\n</div>\n</div>\n</section>\n<section class=\"section section--body\">\n<div class=\"section-divider\">\n<hr class=\"section-divider\" />\n</div>\n<div class=\"section-content\">\n<div class=\"section-inner sectionLayout--insetColumn\">\n<p class=\"graf graf--p\"><div class=\"widget_wysija_cont shortcode_wysija\"><div id=\"msg-form-wysija-shortcode5d80d68201552-6\" class=\"wysija-msg ajax\"></div><form id=\"form-wysija-shortcode5d80d68201552-6\" method=\"post\" action=\"#wysija\" class=\"widget_wysija shortcode_wysija\">\n\nআমার নতুন ব্লগ পোস্ট গুলোর আপডেট পেতে আপনি আপনার ইমেইল দিয়ে আমার ব্লগ পোস্টগুলো সাবস্ক্রাইব করে রাখতে পারেন, নতুন পোস্টগুলো সপ্তাহে একদিন আপনার ইনবক্সে চলে যাবে\n<p class=\"wysija-paragraph\">\n    \n    \n    \t<input type=\"text\" name=\"wysija[user][email]\" class=\"wysija-input validate[required,custom[email]]\" title=\"আপনার ইমেইল\" placeholder=\"আপনার ইমেইল\" value=\"\" />\n    \n    \n    \n    <span class=\"abs-req\">\n        <input type=\"text\" name=\"wysija[user][abs][email]\" class=\"wysija-input validated[abs][email]\" value=\"\" />\n    </span>\n    \n</p>\n\r\n<input class=\"wysija-submit wysija-submit-field\" type=\"submit\" value=\"সাবস্ক্রাইব করুন\" />\n\n    <input type=\"hidden\" name=\"form_id\" value=\"6\" />\n    <input type=\"hidden\" name=\"action\" value=\"save\" />\n    <input type=\"hidden\" name=\"controller\" value=\"subscribers\" />\n    <input type=\"hidden\" value=\"1\" name=\"wysija-page\" />\n\n    \n        <input type=\"hidden\" name=\"wysija[user_list][list_ids]\" value=\"8\" />\n    \n </form></div></p>\n</div>\n</div>\n</section>\n","protected":false},"excerpt":{"rendered":"<p>কন্ডিশনাল বা টার্নারি অপারেটর প্রায় ক্ষেত্রে if else স্টেটমেন্ট এর পরবর্তিতে শর্টকাট হিসেবে ব্যবহার করা হয়। শর্টকাটে একলাইনে একটা সিদ্ধান্তের উপর ডিশিসন নিয়ে ফেলা যায়। এই অপারেটর অনেকটা এভাবে কাজ করেঃ কন্ডিশন ? কন্ডিশন যদি সত্য হয় তাহলে এটা : কন্ডিশন যদি মিথ্যা হয় তাহলে এটা এখানে এই যে স্পেশাল দুইটা জিনিস ? এবং : দেখতেছেন, এগুলোই [&hellip;]</p>\n","protected":false},"author":1,"featured_media":576,"comment_status":"closed","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[54,50,60],"tags":[84,94,108,168,78,86,106],"_links":{"self":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts/591"}],"collection":[{"href":"https://with.zonayed.me/wp-json/wp/v2/posts"}],"about":[{"href":"https://with.zonayed.me/wp-json/wp/v2/types/post"}],"author":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/users/1"}],"replies":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/comments?post=591"}],"version-history":[{"count":1,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/591/revisions"}],"predecessor-version":[{"id":592,"href":"https://with.zonayed.me/wp-json/wp/v2/posts/591/revisions/592"}],"wp:featuredmedia":[{"embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/media/576"}],"wp:attachment":[{"href":"https://with.zonayed.me/wp-json/wp/v2/media?parent=591"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/categories?post=591"},{"taxonomy":"post_tag","embeddable":true,"href":"https://with.zonayed.me/wp-json/wp/v2/tags?post=591"}],"curies":[{"name":"wp","href":"https://api.w.org/{rel}","templated":true}]}},"allData":{"basic":[{"id":197,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কি, কেন, কখন?"}},{"id":202,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কোথায় এবং কিভাবে ইউজ করা হয়?"}},{"id":214,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ক্রোম ডেভেলপার কন্সোল"}},{"id":224,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ভ্যারিয়েবল এবং ডাটা টাইপ"}},{"id":226,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অপারেটর নিয়ে সবকিছু"}},{"id":228,"title":{"rendered":"জাভাস্ক্রিপ্টঃ কন্ডিশনাল স্টেটমেন্ট নিয়ে সবকিছু"}},{"id":239,"title":{"rendered":"জাভাস্ক্রিপ্টঃ লুপ নিয়ে সবকিছু"}},{"id":241,"title":{"rendered":"জাভাস্ক্রিপ্টঃ অ্যারে নিয়ে সবকিছু"}},{"id":243,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক অবজেক্ট"}},{"id":248,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ব্যাসিক ফাংশন"}},{"id":252,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্ট্যাটমেন্ট আর এক্সপ্রেশন"}},{"id":257,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ড্রাই প্রিন্সিপ্যাল"}},{"id":259,"title":{"rendered":"জাভাস্ক্রিপ্টঃ নাকি ইকমাস্ক্রিপ্ট?"}},{"id":288,"title":{"rendered":"জাভাস্ক্রিপ্টঃ বিহ্যাইন্ড দ্যা সীন"}},{"id":290,"title":{"rendered":"জাভাস্ক্রিপ্টঃ হোইস্টিং(Hoisting) নিয়ে ধারণা"}},{"id":292,"title":{"rendered":"জাভাস্ক্রিপ্টঃ স্কোপ(Scope) নিয়ে ধারণা"}},{"id":294,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ক্লোজারস(Closures) নিয়ে ধারণা"}},{"id":296,"title":{"rendered":"জাভাস্ক্রিপ্টঃ ইফি, Immediately Invoked Function Expressions (IIFE)"}}],"advance":[{"id":352,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ &#8216;this&#8217; কীওয়ার্ড"}},{"id":356,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ call(), bind() এবং apply() মেথড"}},{"id":363,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ অবজেক্ট ওরিয়েন্টেড জাভাস্ক্রিপ্ট"}},{"id":449,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ফাংশন কন্সট্রাকটর(Constructor) এবং ‘new’ কীওয়ার্ড"}},{"id":458,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ ইনহেরিট্যান্স (Inheritance)"}},{"id":480,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যাডভান্সঃ স্ট্রিক্ট (Strict) মোড"}}],"es6":[{"id":322,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): নতুন কি আছে?"}},{"id":325,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): let এবং const দিয়ে ভ্যারিয়েবল ডিক্লেয়ার করা"}},{"id":327,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6):ইফি (Immediately Invoked Function Expressions)"}},{"id":330,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): টেমপ্লেট লিটারেল(Template Literal) ও স্ট্রিং মেথড"}},{"id":400,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারো (Arrow) ফাংশন ও লেক্সিক্যাল(Lexical) ‘this’ কীওয়ার্ড "}},{"id":407,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডি-স্ট্রাকচারিং (Destructuring)"}},{"id":409,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): অ্যারে (Array)"}},{"id":414,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): স্প্রেড(Spread) অপারেটর"}},{"id":416,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): রেস্ট(Rest) প্যারামিটার"}},{"id":419,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ডিফল্ট(Default) প্যারামিটার"}},{"id":423,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ম্যাপ (Map)"}},{"id":466,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস (Class)"}},{"id":485,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): ক্লাস ও ইনহেরিট্যান্স (Inheritance)"}},{"id":547,"title":{"rendered":"জাভাস্ক্রিপ্ট ইএস ৬(ES6): সব ইনভারোমেন্ট এ ইএস৬ "}}],"dom":[{"id":630,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ জাভাস্ক্রিপ্ট আর ডম"}},{"id":642,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট সিলেক্ট করা"}},{"id":644,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইলিমেন্ট নিয়ে খেলা"}},{"id":649,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ ইভেন্ট(Event)"}},{"id":651,"title":{"rendered":"জাভাস্ক্রিপ্ট ডম ম্যানিপুলেশনঃ অ্যাজাক্স(AJAX)"}}],"daily":[{"id":234,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ফার্স্ট ক্লাস ফাংশন ও হাইয়ার অর্ডার ফাংশন"}},{"id":255,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ map(), filter() ও reduce()"}},{"id":558,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ some() ও every() মেথড"}},{"id":561,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অবজেক্ট এ লুপ চালানো"}},{"id":565,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডট নোটেশন এবং ব্র্যাকেটস নোটেশন"}},{"id":568,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ম্যাথ (Math) অবজেক্ট"}},{"id":575,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেট (Date) অবজেক্ট"}},{"id":589,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ লজিক্যাল অপারেটর অর (।।) এবং অ্যান্ড (&#038;&#038;)"}},{"id":591,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কন্ডিশনাল/টার্নারি (Ternary) অপারেটর"}},{"id":594,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ রেগুলার এক্সপ্রেশন (Regular Expression)"}},{"id":599,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ এরর হ্যান্ডলিং (Error Handling)"}},{"id":602,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ ডেভেলপার কন্সোল (Console)"}},{"id":604,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ অ্যাসিনক্রোনাস (Asynchronous)"}},{"id":608,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ কলব্যাক(Callback) ফাংশন"}},{"id":612,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ প্রমিস (Promise)"}},{"id":617,"title":{"rendered":"নিত্যদিনের জাভাস্ক্রিপ্টঃ async এবং await"}}],"algods":[{"id":634,"title":{"rendered":"জাভাস্ক্রিপ্ট অ্যালগরিদম ও ডাটা স্ট্রাকচারঃ স্ট্রিং উল্টানো"}}],"soft":[{"id":206,"title":{"rendered":"ক্রস প্ল্যাটফর্ম ডেস্কটপ অ্যাপ বানিয়ে ফেলুন ৫ মিনিটে — ফান প্রোজেক্ট"}},{"id":270,"title":{"rendered":"এক পলকে Gulp JS — টাস্ক স্বয়ংক্রিয় করুন"}},{"id":273,"title":{"rendered":"ওয়েবপ্যাক দিয়ে রিঅ্যাক্ট এর স্টার্টার প্যাক — স্ক্র্যাচ থেকে"}}]}}}}